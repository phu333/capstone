{"version":3,"sources":["JsPage/UpdateProfileCompany.js","actions/EmployeeAction.js","JsPage/AddEmployee.js","JsPage/ViewEmployee.js","JsPage/EmployeeSearch.js","JsPage/EmployeeTable.js","actions/SignatureAction.js","JsPage/AddSignature.js","JsPage/UpdateSignature.js","JsPage/SignatureSearch.js","JsPage/SignatureList.js","JsPage/ContractSearch.js","actions/ContractAction.js","JsPage/CreateContract.js","JsPage/ContractTypeSearch.js","JsPage/ChooseContractTemplate.js","JsPage/AddContractExtension.js","JsPage/UpdateContractExtension.js","JsPage/ContractExtensionTable.js","actions/ContractExtension.js","JsPage/ViewContractPage.js","JsPage/ContractTable.js","actions/CustomerAction.js","JsPage/AddCustomer.js","JsPage/ViewCustomer.js","JsPage/CustomerSearch.js","JsPage/CustomerTable.js","JsPage/TemplateUpload.js","JsPage/ContractTypeTable.js","actions/ContractType.js","JsPage/UpdateProfile.js","JsPage/Header.js","actions/loginAction.js","JsPage/EmployeeSideMenu.js","JsPage/ViewUser.js","JsPage/UserTable.js","JsPage/SendJoinRequest.js","actions/UserAction.js","JsPage/ForgetPassword.js","JsPage/Login/LoginPage.js","App.js","serviceWorker.js","reducers/logins.js","reducers/contracts.js","reducers/contractExtensions.js","reducers/customers.js","reducers/contractTypes.js","reducers/users.js","reducers/signatures.js","reducers/employees.js","reducers/myReducers.js","index.js"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","UpdateProfileCompany","onFinish","values","console","log","onFinishFailed","errorInfo","state","bind","style","margin","width","paddingLeft","border","type","value","onClick","this","Cancel","textAlign","name","initialValues","remember","labelAlign","Item","label","IdcardOutlined","rules","required","message","MailOutlined","requiredMark","BankOutlined","HomeOutlined","htmlType","CloudUploadOutlined","RedoOutlined","React","Component","createEmployee","employee","AddEmployee","props","onSubmit","email","address","status","role","setState","finish","onChange","e","target","i","checked","Fragment","justify","align","height","Grid","container","spacing","item","xs","sm","TextField","id","fullWidth","autoComplete","FormControlLabel","control","Checkbox","trigger","position","ReloadOutlined","connect","dispatch","ViewEmployee","Option","Select","EmployeeSearch","SearchBy","handleChange","dateString","className","defaultValue","title","size","extra","shape","icon","SearchOutlined","Column","Table","EmployeeList","ColumnGroup","openEmployee","OpenAddEmployee","OpenViewEmployee","newEmployee","length","UserAddOutlined","dataSource","rowClassName","record","index","dataIndex","key","render","text","color","toUpperCase","EditOutlined","fontSize","theme","OpenViewCustomer","DeleteOutlined","UserOutlined","myEmployeeReducer","createSignature","signature","AddSignature","provider","expired","UpdateSignature","SignatureSearch","ref","SignatureList","newSignature","mySignatureReducer","RangePicker","DatePicker","ContractSearch","formatter","replace","parser","showTime","format","onOk","createContract","contract","CreateContract","contract_name","ben_tao_hd","ben_tham_gia","nguoi_tao_hd","deadline","ShowCustomer","showContent","ShowContent","TheChooseOne","Name","MST","Address","Email","Owner","order","ghost","column","PhoneOutlined","PrinterOutlined","ContactsOutlined","subTitle","ContractTypeSearch","contract_type","fileName","ChooseContractTemplate","showTemplateCreate","FileOutlined","AddContractExtension","option","NewContent","ChooseOption","backgroundColor","UpdateContractExtension","openCommentSection","OpenCommentSection","ContractExtensionTable","showCreateContractExtension","showContractExtension","onOpenCreateContractExtension","viewContractExtension","newContractExtension","FileAddOutlined","ContainerOutlined","EyeOutlined","viewContract","FormOutlined","myContractExtensionReducer","contractExtension","createcontractExtension","TextArea","Input","CommentList","comments","header","itemLayout","renderItem","ContractView","handleSubmit","submitting","setTimeout","author","content","datetime","moment","fromNow","onFinishComment","onFinishCommenFailt","openExtension","OpenExtension","Editor","onFinishCommentFailed","rows","loading","avatar","src","alt","ContractTable","showCreateContract","showContract","onOpenCreateContract","newContract","ViewContractPage","UploadOutlined","myContractReducer","createCustomer","customer","AddCustomer","company","CustomerTable","CustomerSearch","CustomerList","openCustomer","OpenAddCustomer","newCustomer","taxCode","faxCode","phone","sorter","a","b","localeCompare","sortDirections","myCustomerReducer","TemplateUpload","approvalBeforeSign","approverList","ChooseApproval","concat","httpEquiv","rel","href","data-styled","data-styled-version","dangerouslySetInnerHTML","__html","stroke","fill","strokeWidth","viewBox","xmlns","d","newContractType","creator","createDate","FileWordOutlined","myContractTypeReducer","contractType","createContractType","UpdateProfile","Header","showComponent","logoutAction","Logout","information","myLoginReducer","map","login","notifications","menu","LogoutOutlined","overlay","placement","count","BellOutlined","Button","SettingOutlined","username","IconFont","createFromIconfontCN","scriptUrl","SubMenu","Menu","Sider","Layout","Content","EmployeeSideMenu","toggleCollapsed","collapsed","handleClick","marginLeft","marginBottom","createElement","MenuUnfoldOutlined","MenuFoldOutlined","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","inlineCollapsed","ToolOutlined","contractManagePermision","customerManagePermission","contractTypeManagePermission","employeeManagePermission","signatureManagePermission","editCompanyInformationPermission","padding","affixed","push","to","exact","path","component","signPermission","ContractTypeTable","EmployeeTable","ViewUser","UserList","openViewUser","newUser","SendJoinRequest","myUserReducer","user","createUser","ForgetPassword","middleLayout","userList","password","initialState","othersPage","LoginPage","loginInformation","responseGoogle","response","Password","valuePropName","clientId","buttonText","renderProps","GoogleOutlined","onSuccess","onFailure","cookiePolicy","addLogin","App","params","particles","line_linked","number","Boolean","window","location","hostname","match","action","pop","contractID","contractExtensionID","customerID","contractTypeID","userID","signatureID","employeeID","myReducers","combineReducers","store","createStore","allReducers","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b0cb639e.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass UpdateProfileCompany extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin doanh nghiệp</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default UpdateProfileCompany;","export const employeeInformation = () => {\r\n  return {\r\n    type: 'LIST_employee',\r\n  }\r\n}\r\nexport const createEmployee = (employee) => {\r\n  \r\n  return {\r\n    type: 'CREATE_employee',\r\n    employee\r\n  }\r\n}\r\nexport const updateEmployee = (employee) => {\r\n  return {\r\n    type: 'UPDATE_employee',\r\n    employee\r\n  }\r\n}\r\nexport const deactiveEmployee = (employeeID) => {\r\n  return {\r\n    type: 'DEACTIVE_employee',\r\n    employeeID\r\n  }\r\n}","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { createEmployee, employeeInformation } from '../actions/EmployeeAction'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined, ReloadOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport \"./Column.css\"\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass AddEmployee extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            finish: false\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n\r\n        const contract1 = {\r\n\r\n            name: 'Mike',\r\n            email: \"some email\",\r\n            address: '10 Downing Street',\r\n            status: \"active\",\r\n            role: \"secretery\"\r\n\r\n        }\r\n\r\n\r\n        this.props.onSubmit(contract1)\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    Cancel = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n    }\r\n    render() {\r\n\r\n\r\n        var i = 0;\r\n        function onChange(e) {\r\n            if (e.target == \"checked\") { i--; }\r\n            else { i++ }\r\n            console.log(`checked = ${e.target.checked}`);\r\n        }\r\n        function requirement() { if (i == 0) { } }\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <br />\r\n                <h2 style={{ textAlign: 'center' }}>Tạo nhân viên</h2>\r\n                <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                    <Col span={10} >\r\n                        <Grid container spacing={3}>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"company\"\r\n                                    name=\"Tên doanh nghiệp\"\r\n                                    label=\"Tên doanh nghiệp\"\r\n                                    fullWidth\r\n                                    autoComplete=\"Tên doanh nghiệp\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"taxCode\"\r\n                                    name=\"Mã số thuế\"\r\n                                    label=\"Mã số thuế\"\r\n                                    fullWidth\r\n                                    autoComplete=\"family-name\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"faxCode\"\r\n                                    name=\"số fax\"\r\n                                    label=\"số fax\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-line1\"\r\n                                />\r\n                                <TextField\r\n                                    id=\"email\"\r\n                                    name=\"địa chỉ mail\"\r\n                                    label=\"địa chỉ mail\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"address\"\r\n                                    name=\"địa chỉ\"\r\n                                    label=\"địa chỉ\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-line2\"\r\n                                />\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"presentor\"\r\n                                    name=\"Người đại diện\"\r\n                                    label=\"Người đại diện\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping postal-code\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"role\"\r\n                                    name=\"chức vụ\"\r\n                                    label=\"chức vụ\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping postal-code\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <b>Quyền Hạn</b>\r\n                                <br />\r\n                                <Row>\r\n                                    <Col span={8}>\r\n                                        <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"ký\"\r\n                                        />\r\n                                       \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý hợp đồng\"\r\n                                        />\r\n                                       \r\n                                        \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý nhân viên\"\r\n                                        />\r\n                                       \r\n                                       \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý loại hợp đồng\"\r\n                                        />\r\n                                       \r\n                                        \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý chữ ký\"\r\n                                        />\r\n                                       \r\n                                        \r\n                                        <p></p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <div></div><br />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Popup trigger={<Button type=\"primary\" >\r\n                                <CloudUploadOutlined />  Nộp\r\n                            </Button>} position=\"right center\">\r\n                                <div>The sytem admin will contact you within 3 days</div>\r\n                                <Button onClick={this.onFinish} type=\"primary\" >\r\n                                    Xác nhận\r\n                            </Button>\r\n                            </Popup>\r\n\r\n                            <Button type=\"primary\" style={{\r\n                                margin: '0 8px',\r\n                            }} htmlType=\"button\">\r\n                                <ReloadOutlined />   Reset\r\n                            </Button>\r\n                            <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                                Trở về\r\n              </Button>\r\n                        </Grid>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (employee) => {\r\n            dispatch(createEmployee(employee))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddEmployee);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ViewEmployee extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin nhân viên</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ViewEmployee;","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Select, DatePicker, Button, Space, Breadcrumb, PageHeader, Input, InputNumber,Form } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Option } = Select;\r\nclass EmployeeSearch extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            SearchBy: \"SearchByName\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({\r\n            SearchBy: value\r\n        })\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values)\r\n\r\n\r\n    };\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Select defaultValue=\"SearchByName\" onChange={this.handleChange}>\r\n                    <Option value=\"SearchByPhone\">tìm kiếm theo số điện thoại</Option>\r\n                    <Option value=\"SearchByName\">tìm kiếm theo tên </Option>\r\n                    \r\n                    <Option value=\"SearchByStatus\">tìm kiếm theo trạng thái</Option>\r\n                    \r\n                    \r\n                </Select>\r\n\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n\r\n                    title={[<Space size=\"large\">\r\n\r\n                        {this.state.SearchBy === \"SearchByStatus\" ?\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n\r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb> : null}\r\n\r\n                    </Space>]}\r\n                    extra={[\r\n\r\n                        <Form\r\n                            name=\"basic\"\r\n                            className=\"search-form\"\r\n                            initialValues={{\r\n                                remember: true,\r\n                            }}\r\n                            onFinish={this.onFinish}\r\n                            onFinishFailed={this.onFinishFailed}>\r\n                            <Space size=\"large\">\r\n                                {this.state.SearchBy === \"SearchByName\" ?\r\n                                    <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByPhone\" ? <> <Input name=\"searchValue\" />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></> : null}\r\n                               \r\n\r\n\r\n                            </Space>\r\n                        </Form>\r\n                    ]}\r\n                >\r\n\r\n\r\n\r\n                </PageHeader>\r\n\r\n            </div>);\r\n    }\r\n}\r\nexport default EmployeeSearch;","import 'antd/dist/antd.css';\r\nimport { Table, Space, Tag,Button } from 'antd';\r\nimport AddEmployee from './AddEmployee'\r\nimport ViewEmployee from './ViewEmployee'\r\nimport React from 'react';\r\nimport './Column.css'\r\nimport ReactDOM from 'react-dom';\r\nimport EmployeeSearch from './EmployeeSearch'\r\nimport { createEmployee, employeeInformation } from '../actions/EmployeeAction'\r\nimport { connect } from 'react-redux'\r\nimport { UserAddOutlined, EditOutlined, DeleteOutlined, UserOutlined } from \"@ant-design/icons\"\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\nclass EmployeeList extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n\r\n\r\n      openEmployee: \"\",\r\n\r\n    };\r\n    this.OpenAddEmployee = this.OpenAddEmployee.bind(this);\r\n    this.OpenViewEmployee = this.OpenViewEmployee.bind(this);\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newEmployee.length === 0) {\r\n      const contract1 = {\r\n\r\n        name: 'Mike',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"active\",\r\n        role: \"director\"\r\n\r\n      }\r\n      const contract2 = {\r\n\r\n        name: 'John',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"deactive\",\r\n        role: \"secrectery\"\r\n\r\n      }\r\n\r\n      this.props.onSubmit(contract1)\r\n      this.props.onSubmit(contract2)\r\n\r\n    }\r\n\r\n  }\r\n  OpenAddEmployee() {\r\n    this.setState({\r\n      openEmployee: \"openAddEmployee\",\r\n    })\r\n  }\r\n  OpenViewEmployee() {\r\n    this.setState({\r\n      openEmployee: \"openViewEmployee\",\r\n    })\r\n  }\r\n  render() {\r\n    if (this.state.openEmployee === \"openAddEmployee\") {\r\n      return (<AddEmployee />);\r\n    } else if (this.state.openEmployee === \"openViewEmployee\") {\r\n      return (<ViewEmployee />);\r\n    }\r\n    else {\r\n      return (\r\n        <div style={{height: \"100vh\"}}><Button type=\"primary\" onClick={this.OpenAddEmployee} icon={<UserAddOutlined />}>Tạo nhân viên mới</Button>\r\n          <EmployeeSearch/>\r\n          <Table dataSource={this.props.newEmployee}\r\n            rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n\r\n            <Column title=\"Tên\" dataIndex=\"name\" key=\"name\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"email\" dataIndex=\"email\" key=\"email\" render={(text, record) => (\r\n\r\n              <a>{text}</a>\r\n\r\n            )} />\r\n            <Column title=\"Địa chỉ\" dataIndex=\"address\" key=\"address\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n              render={(text, record) => {\r\n                let color = 'pink'\r\n                if (text === 'deactive') {\r\n                  color = 'red'\r\n                } else if (text === 'active') {\r\n                  color = 'green'\r\n                } else if (text === 'pending') {\r\n                  color = 'blue'\r\n                } else if (text === 'waiting for customer') {\r\n                  color = 'pink'\r\n                } else if (text === 'rejected') {\r\n                  color = 'grey'\r\n                }\r\n                return (<Tag color={color} key={text}>\r\n                  {text.toUpperCase()}\r\n                </Tag>);\r\n              }}\r\n            />\r\n            <Column title=\"chức vụ\" dataIndex=\"role\" key=\"role\" />\r\n            <Column\r\n              title=\"Xem chi tiết\"\r\n              key=\"action\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  <EditOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Sửa</EditOutlined>\r\n                </Space>\r\n              )}\r\n            />\r\n            <Column\r\n              title=\"Chức năng\"\r\n              dataIndex=\"status\"\r\n              key=\"status\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                  {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                </Space>\r\n              )}\r\n            /></Table></div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSubmit: (employee) => {\r\n      dispatch(createEmployee(employee))\r\n    }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n    newEmployee: state.myEmployeeReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList)","export const signatureInformation = () => {\r\n  return {\r\n    type: 'LIST_signature',\r\n  }\r\n}\r\nexport const createSignature = (signature) => {\r\n  \r\n  return {\r\n    type: 'CREATE_signature',\r\n    signature\r\n  }\r\n}\r\nexport const updateSignature = (signature) => {\r\n  return {\r\n    type: 'UPDATE_signature',\r\n    signature\r\n  }\r\n}\r\nexport const deactiveSignature = (signatureID) => {\r\n  return {\r\n    type: 'DEACTIVE_signature',\r\n    signatureID\r\n  }\r\n}","import React from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { createSignature, signatureInformation } from '../actions/SignatureAction'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Input, Button,Row,Col } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass AddSignature extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            finish: false\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        const contract1 = {\r\n\r\n            name: 'Mike',\r\n            email: \"some email\",\r\n            provider: 'Viettel',\r\n            status: \"active\",\r\n            expired: 2022\r\n\r\n        }\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n        this.props.onSubmit(contract1)\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    Cancel = () =>{\r\n        this.setState({\r\n            finish: true\r\n        })\r\n    }\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin chữ ký</h2>\r\n                <React.Fragment>\r\n                <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                    <Col span={10} >\r\n                        <Grid container spacing={3}>\r\n                            \r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"holder\"\r\n                                        name=\"Tên người giữ\"\r\n                                        label=\"Tên người giữ\"\r\n                                        fullWidth\r\n                                        autoComplete=\"given-name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"serial\"\r\n                                        name=\"số serial\"\r\n                                        label=\"số serial\"\r\n                                        fullWidth\r\n                                        autoComplete=\"number\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"address1\"\r\n                                        name=\"address1\"\r\n                                        label=\"Address line 1\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-line1\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"expiredDate\"\r\n                                        name=\"Ngày hết hạn\"\r\n                                        label=\"Ngày hết hạn\"\r\n                                        fullWidth\r\n                                        autoComplete=\"date\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"provider\"\r\n                                        name=\"nhà cung cấp chữ ký\"\r\n                                        label=\"nhà cung cấp chữ ký\"\r\n                                        fullWidth\r\n                                        autoComplete=\"nhà cung cấp chữ ký\"\r\n                                    />\r\n                                </Grid>\r\n                                \r\n                           \r\n                        </Grid>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n                {/* <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form> */}\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (signature) => {\r\n            dispatch(createSignature(signature))\r\n        }\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps) (AddSignature);","import React from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass UpdateSignature extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        \r\n            return (\r\n                <div style={{\r\n                    margin: \"auto\",\r\n                    width: \"1000px\",\r\n                    paddingLeft:\"50px\",\r\n                    border:\"solid\"\r\n                }\r\n                }>\r\n                    <h2 style={{ textAlign: 'center' }}>Thông tin chữ ký</h2>\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        labelAlign=\"left\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                    ><br />\r\n                        <Form.Item\r\n                            label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                            name=\"companyname\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập tên doanh nghiệp',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n    \r\n                        <Form.Item\r\n                            label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                            name=\"email\"\r\n                            requiredMark=\"false\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Địa chỉ email',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                            name=\"taxcode\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Mã số thuế',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                            name=\"address\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Địa chỉ',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n    \r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                <CloudUploadOutlined /> Nộp\r\n                                </Button>\r\n                            <Button type=\"primary\" style={{\r\n                                margin: '0 8px',\r\n                            }} htmlType=\"button\">\r\n                                <RedoOutlined />    Reset\r\n                                </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div >\r\n            );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default UpdateSignature;","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Space, Breadcrumb, PageHeader } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nclass SignatureSearch extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n\r\n\r\n\r\n                <br />\r\n                <div className=\"container\">\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n\r\n                        title={[<Space size=\"large\">\r\n\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n                              \r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n\r\n                        </Space>]}\r\n                        extra={[\r\n\r\n                            <Space size=\"large\">\r\n                                <input ref=\"searchInput\" />\r\n                                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Space>\r\n                        ]}\r\n                    >\r\n\r\n\r\n\r\n                    </PageHeader>\r\n\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\nexport default SignatureSearch;","import 'antd/dist/antd.css';\r\nimport { Table, Space,Button,Tag } from 'antd';\r\nimport AddSignature from './AddSignature'\r\nimport UpdateSignature from './UpdateSignature'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport SignatureSearch from './SignatureSearch'\r\nimport { createSignature, signatureInformation } from '../actions/SignatureAction'\r\nimport { connect } from 'react-redux'\r\nimport { UserAddOutlined, EditOutlined, DeleteOutlined, UserOutlined } from \"@ant-design/icons\"\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\nclass SignatureList extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            dataSource: [\r\n                {\r\n                    key: '1',\r\n                    name: 'Mike',\r\n                    email: \"some email\",\r\n                    provider: '10 Downing Street',\r\n                    status: \"active\",\r\n                    expired: 2022\r\n                },\r\n                {\r\n                    key: '2',\r\n                    name: 'John',\r\n                    email: \"some email\",\r\n                    provider: '10 Downing Street',\r\n                    status: \"active\",\r\n                    expired: 2022\r\n                },\r\n            ],\r\n            openEmployee: \"\",\r\n\r\n        };\r\n        this.OpenAddEmployee = this.OpenAddEmployee.bind(this);\r\n        this.OpenViewEmployee = this.OpenViewEmployee.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        if (this.props.newSignature.length === 0) {\r\n            const contract1 = {\r\n\r\n                name: 'Mike',\r\n                email: \"some email\",\r\n                provider: 'Viettel',\r\n                status: \"active\",\r\n                expired: 2022\r\n\r\n            }\r\n            const contract2 = {\r\n\r\n                name: 'John',\r\n                email: \"some email\",\r\n                provider: 'Fpt',\r\n                status: \"deactive\",\r\n                expired: 2022\r\n\r\n            }\r\n\r\n            this.props.onSubmit(contract1)\r\n            this.props.onSubmit(contract2)\r\n\r\n        }\r\n\r\n    }\r\n    OpenAddEmployee() {\r\n        this.setState({\r\n            openEmployee: \"openAddEmployee\",\r\n        })\r\n    }\r\n    OpenViewEmployee() {\r\n        this.setState({\r\n            openEmployee: \"openViewEmployee\",\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.openEmployee === \"openAddEmployee\") {\r\n\r\n            return (<AddSignature />);\r\n        } else if (this.state.openEmployee === \"openViewEmployee\") {\r\n            return (<UpdateSignature />);\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{height: \"100vh\"}}><Button type=\"primary\" onClick={this.OpenAddEmployee} icon={<UserAddOutlined />}>Thêm chữ ký mới</Button>\r\n                    <SignatureSearch/>\r\n                    <Table dataSource={this.props.newSignature}\r\n                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n\r\n                        <Column title=\"Tên người sử dụng\" dataIndex=\"name\" key=\"name\" />\r\n\r\n                        <Column title=\"Nhà cung cấp\" dataIndex=\"provider\" key=\"provider\" />\r\n\r\n                        <Column title=\"Ngày hết hạn\" dataIndex=\"expired\" key=\"expired\" />\r\n                        <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                            render={(text, record) => {\r\n                                let color = 'pink'\r\n                                if (text === 'deactive') {\r\n                                    color = 'red'\r\n                                } else if (text === 'active') {\r\n                                    color = 'green'\r\n                                } else if (text === 'pending') {\r\n                                    color = 'blue'\r\n                                } else if (text === 'waiting for customer') {\r\n                                    color = 'pink'\r\n                                } else if (text === 'rejected') {\r\n                                    color = 'grey'\r\n                                }\r\n                                return (<Tag color={color} key={text}>\r\n                                    {text.toUpperCase()}\r\n                                </Tag>);\r\n                            }}\r\n                        />\r\n\r\n                        <Column\r\n                            title=\"Xem chi tiết\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n                                <Space size=\"middle\">\r\n                                    <EditOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Sửa</EditOutlined>\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"Chức năng\"\r\n                            dataIndex=\"status\"\r\n                            key=\"status\"\r\n                            render={(text, record) => (\r\n                                <Space size=\"middle\">\r\n                                    {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                                    {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                                </Space>\r\n                            )}\r\n                        /></Table></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (signature) => {\r\n            dispatch(createSignature(signature))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        newSignature: state.mySignatureReducer\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignatureList)","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Select, DatePicker, Button, Space, Breadcrumb, PageHeader, Input, InputNumber } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport Form from \"antd/lib/form/Form\";\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\nclass ContractSearch extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            SearchBy: \"SearchByContractId\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({\r\n            SearchBy: value\r\n        })\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values)\r\n\r\n\r\n    };\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            \r\n                <div className=\"container\">\r\n                    <Select defaultValue=\"SearchByContractId\" onChange={this.handleChange}>\r\n                        <Option value=\"SearchByContractId\">tìm kiếm theo số hợp đồng</Option>\r\n                        <Option value=\"SearchByContractDuration\">tìm kiếm theo thời hạn</Option>\r\n                        <Option value=\"SearchByCustomerTaxCode\">tìm kiếm theo mã số thuế</Option>\r\n                        <Option value=\"SearchByStatus\">tìm kiếm theo trạng thái</Option>\r\n                        <Option value=\"SearchByContractValue\">tìm kiếm theo giá trị hợp đồng</Option>\r\n                        <Option value=\"SearchByContractDeadline\">tìm kiếm theo ngày hết hạn</Option>\r\n                        <Option value=\"SearchByContractCreatedDate\">tìm kiếm theo ngày tạo</Option>\r\n                    </Select>\r\n\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n\r\n                        title={[<Space size=\"large\">\r\n                            {this.state.SearchBy === \"SearchByStatus\" ?\r\n                                <Breadcrumb>\r\n                                    <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n                                    <Breadcrumb.Item>\r\n                                        đang duyệt\r\n                            </Breadcrumb.Item>\r\n                                    <Breadcrumb.Item>\r\n                                        đang chờ ký\r\n                            </Breadcrumb.Item>\r\n                                    <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                    <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                                </Breadcrumb> : null}\r\n\r\n\r\n                        </Space>]}\r\n                        extra={[\r\n                            <Form\r\n                                name=\"basic\"\r\n                                className=\"search-form\"\r\n                                initialValues={{\r\n                                    remember: true,\r\n                                }}\r\n                                onFinish={this.onFinish}\r\n                                onFinishFailed={this.onFinishFailed}>\r\n                                <Space size=\"large\">\r\n                                    {this.state.SearchBy === \"SearchByContractId\" ?\r\n                                        <> <Input name=\"searchValue\" />\r\n                                            <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                        : null}\r\n                                    {this.state.SearchBy === \"SearchByCustomerTaxCode\" ? <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></> : null}\r\n                                    {this.state.SearchBy === \"SearchByContractValue\" ? <> <InputNumber\r\n\r\n                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                    />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                        : null}\r\n                                    {this.state.SearchBy === \"SearchByContractDuration\" ? <><RangePicker\r\n                                        showTime={{ format: 'HH:mm' }}\r\n                                        format=\"YYYY-MM-DD HH:mm\"\r\n                                        onChange={this.onChange}\r\n                                        onOk={this.onOk}\r\n                                    />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                        : null}\r\n                                    {this.state.SearchBy === \"SearchByContractDeadline\" ? <>\r\n                                        <DatePicker showTime onChange={this.onChange} onOk={this.onOk} />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                        : null}\r\n                                    {this.state.SearchBy === \"SearchByContractCreatedDate\" ? <>\r\n                                    <DatePicker showTime onChange={this.onChange} onOk={this.onOk} />\r\n\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                        : null}\r\n\r\n                                </Space>\r\n                            </Form>\r\n                        ]}\r\n                    >\r\n\r\n\r\n\r\n                    </PageHeader>\r\n\r\n                </div>\r\n\r\n           );\r\n    }\r\n}\r\nexport default ContractSearch;","export const contractInformation = () => {\r\n  return {\r\n    type: 'LIST_contract',\r\n  }\r\n}\r\nexport const createContract = (contract) => {\r\n  \r\n  return {\r\n    type: 'CREATE_contract',\r\n    contract\r\n  }\r\n}\r\nexport const updateContract = (contract) => {\r\n  return {\r\n    type: 'UPDATE_contract',\r\n    contract\r\n  }\r\n}\r\nexport const deactiveContract = (contractID) => {\r\n  return {\r\n    type: 'DEACTIVE_contract',\r\n    contractID\r\n  }\r\n}","import React from 'react';\r\nimport { createContract, contractInformation, } from '../actions/ContractAction'\r\nimport { Select, DatePicker, Descriptions, Space, Button, InputNumber, Form, PageHeader, Input, Row, Col } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport ContractTable from './ContractTable'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport {\r\n    FileExcelOutlined, IdcardOutlined, BankOutlined, PhoneOutlined, PrinterOutlined, HomeOutlined, MailOutlined\r\n    , ContactsOutlined, CalendarOutlined, DollarOutlined, CloudDownloadOutlined, CloudUploadOutlined, AuditOutlined\r\n} from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\nclass CreateContract extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            TheChooseOne: {\r\n                Name: \"\",\r\n                MST: \"\",\r\n                Address: \"\",\r\n                Email: \"\",\r\n                Owner: \"\",\r\n            },\r\n            finish: false,\r\n            showContent: \"customer\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    onFinish = (values) => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n        const contract = {\r\n\r\n            contract_name: 'Hop dong lao dong',\r\n            status: \"pending\",\r\n            ben_tao_hd: 'HiSign',\r\n            ben_tham_gia: 'cty 369',\r\n            nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n            deadline: \"12/12/2022\",\r\n\r\n        }\r\n        this.props.onSubmit(contract)\r\n\r\n    };\r\n    Cancel = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n\r\n\r\n    };\r\n    ShowCustomer = () => {\r\n        this.setState({\r\n            showContent: \"customer\"\r\n        })\r\n    };\r\n    ShowContent = () => {\r\n        this.setState({\r\n            showContent: \"content\"\r\n        })\r\n    };\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    handleChange(value) {\r\n        this.setState({\r\n            TheChooseOne: {\r\n                Name: \"Company name here\",\r\n                MST: \"Tax code here\",\r\n                Address: \"address here\",\r\n                Email: \"email here\",\r\n                Owner: \"owner here\",\r\n            },\r\n        })\r\n    }\r\n    log = (type) => console.log.bind(console, type);\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    render() {\r\n\r\n        if (this.state.finish) {\r\n            return (<ContractTable role={this.props.role} />);\r\n        } else {\r\n\r\n\r\n            return (\r\n\r\n                <div style={{ border: \"solid\",height: \"100vh\" }}>\r\n                     <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n\r\n                    <h2 style={{ textAlign: 'center' }}>Hợp đồng <Input></Input></h2>\r\n                    <Row>\r\n                        <Col span={3} order={1} />\r\n                        <Col span={20} order={2}>\r\n                            <PageHeader\r\n                                className=\"site-page-header\"\r\n                                ghost={false}\r\n                                title=\"Thông tin bên A\">\r\n                                <Descriptions size=\"small\" column={2} >\r\n                                    <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                        Usada Pekora\r\n                        </Descriptions.Item>\r\n\r\n\r\n                                </Descriptions>\r\n                            </PageHeader>\r\n\r\n\r\n                            <PageHeader\r\n                                className=\"site-page-header\"\r\n                                ghost={false}\r\n                                title=\"Thông tin bên B\"\r\n                                subTitle={[<Select defaultValue=\"NO\" onChange={this.handleChange}>\r\n                                    <Option value=\"NO\">Please select your customer</Option>\r\n                                    <Option value=\"PR001\">Usada construction</Option>\r\n                                    <Option value=\"PR002\">Anukin corp</Option>\r\n                                    <Option value=\"PR003\">The circus</Option>\r\n                                </Select>]}\r\n                                extra={[<Button type=\"primary\" onClick={this.ShowCustomer}>Thông tin bên B</Button>,\r\n                                <Button type=\"primary\" onClick={this.ShowContent}>Thông tin hợp đồng</Button>\r\n                                ]}\r\n                            >\r\n                                {this.state.showContent === \"customer\" ?\r\n                                    <Descriptions title=\"\" size=\"small\" column={2}  >\r\n\r\n                                        <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                            Usada Pekora\r\n                        </Descriptions.Item>\r\n\r\n\r\n                                    </Descriptions> : null}\r\n                                {this.state.showContent === \"content\" ?\r\n                                    <Form\r\n\r\n                                        name=\"basic\"\r\n                                        className=\"lcontract-form\"\r\n\r\n                                        onFinish={this.onFinish}\r\n                                        onFinishFailed={this.onFinishFailed}\r\n\r\n                                    >\r\n                                        <Descriptions title=\"Nội dung hợp đồng\" size=\"small\" column={1}   >\r\n                                            <Descriptions.Item label=\"thời hạn hợp đồng\"> <RangePicker\r\n                                                showTime={{ format: 'HH:mm' }}\r\n                                                format=\"YYYY-MM-DD HH:mm\"\r\n                                                onChange={this.onChange}\r\n                                                onOk={this.onOk}\r\n                                            /></Descriptions.Item>\r\n                                            <Descriptions.Item label=\"Giá trị:\">\r\n                                                <Form.Item\r\n\r\n                                                    name=\"value\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Vui lòng nhập Giá trị:',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <InputNumber\r\n                                                        \r\n                                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                    />\r\n                                                </Form.Item>\r\n\r\n                                            </Descriptions.Item>\r\n                                            <a>Dieu khoan 1:</a><br />\r\n                                            <a>Dieu khoan 2:</a><br />\r\n                                            <a>Dieu khoan 3:</a><br />\r\n                                            <a>Dieu khoan 4:</a><br />\r\n                                            \r\n                                        </Descriptions>\r\n\r\n                                        <Space size=\"large\">\r\n                                            <Button type=\"primary\" value=\"submit\" htmlType=\"submit\">\r\n                                                Nộp\r\n                  </Button>\r\n                                        </Space>\r\n                                    </Form> : null}\r\n                            </PageHeader>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                   \r\n                </div>\r\n\r\n\r\n\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (contract) => {\r\n            dispatch(createContract(contract))\r\n        }\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(CreateContract);","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Select, DatePicker, Button, Space, Breadcrumb, PageHeader, Input, InputNumber,Form } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Option } = Select;\r\nclass ContractTypeSearch extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            SearchBy: \"SearchByContractType\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({\r\n            SearchBy: value\r\n        })\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values)\r\n\r\n\r\n    };\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Select defaultValue=\"SearchByContractType\" onChange={this.handleChange}>\r\n                    <Option value=\"SearchByContractType\">tìm kiếm theo loại hợp đồng</Option>\r\n                    <Option value=\"SearchByCreater\">tìm kiếm theo người tạo</Option>\r\n                    <Option value=\"SearchByCreateDate\">tìm kiếm theo ngày tạo</Option>\r\n                    <Option value=\"SearchByStatus\">tìm kiếm theo trạng thái</Option>\r\n                    \r\n                </Select>\r\n\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n\r\n                    title={[<Space size=\"large\">\r\n\r\n                        {this.state.SearchBy === \"SearchByStatus\" ?\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n\r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb> : null}\r\n\r\n                    </Space>]}\r\n                    extra={[\r\n\r\n                        <Form\r\n                            name=\"basic\"\r\n                            className=\"search-form\"\r\n                            initialValues={{\r\n                                remember: true,\r\n                            }}\r\n                            onFinish={this.onFinish}\r\n                            onFinishFailed={this.onFinishFailed}>\r\n                            <Space size=\"large\">\r\n                               \r\n                                {this.state.SearchBy === \"SearchByContractType\" ?\r\n                                    <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByCreater\" ? <> <Input name=\"searchValue\" />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></> : null}\r\n                                {this.state.SearchBy === \"SearchByCreateDate\" ?\r\n                                    <> <DatePicker showTime onChange={this.onChange} onOk={this.onOk} />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n\r\n\r\n                            </Space>\r\n                        </Form>\r\n                    ]}\r\n                >\r\n\r\n\r\n\r\n                </PageHeader>\r\n\r\n            </div>);\r\n    }\r\n}\r\nexport default ContractTypeSearch;","import 'antd/dist/antd.css';\r\nimport { Table,Space,Button,PageHeader } from 'antd';\r\nimport CreateContract from './CreateContract';\r\nimport React from 'react';\r\nimport ContractTypeSearch from './ContractTypeSearch'\r\nimport {UserAddOutlined,SearchOutlined ,FileOutlined} from \"@ant-design/icons\"\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column } = Table;\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n    {\r\n        key: '2',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n];\r\n\r\n\r\nclass ChooseContractTemplate extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showTemplateCreate: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleChange() {\r\n        this.setState({\r\n            showTemplateCreate: true,\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.showTemplateCreate) {\r\n            return (\r\n\r\n                <CreateContract role={this.props.role} />\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={{height: \"100vh\"}}>\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n\r\n                        title={[]}\r\n                        extra={[\r\n\r\n                            <Space size=\"large\">\r\n                                <input ref=\"searchInput\" />\r\n                                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Space>\r\n                        ]}\r\n                    >\r\n\r\n\r\n\r\n                    </PageHeader>\r\n                    <Table dataSource={dataSource} >\r\n                        <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                        <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                        <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n                        \r\n\r\n                        <Column\r\n                            title=\"Chọn hợp đồng\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n                                <Space size=\"middle\">\r\n                                    <Button type=\"primary\" icon={<FileOutlined/>} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                    </Table></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nexport default ChooseContractTemplate","import React from 'react';\r\nimport { UserAddOutlined, SearchOutlined, FileOutlined } from \"@ant-design/icons\"\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { Select, DatePicker, Descriptions, Space, Button, InputNumber, Table, PageHeader, Row, Col } from 'antd';\r\nimport ContractExtensionTable from './ContractExtensionTable'\r\nconst { Column } = Table;\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n    {\r\n        key: '2',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n];\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\nclass AddContractExtension extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            option: \"DeadLineExtend\",\r\n            NewContent: \"\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.ChooseOption = this.ChooseOption.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({\r\n            NewContent: \"NewContent\"\r\n        })\r\n    }\r\n    Cancel = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n\r\n\r\n    };\r\n    log = (type) => console.log.bind(console, type);\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    ChooseOption(value) {\r\n\r\n        this.setState({\r\n            option: value\r\n        })\r\n        if (value === \"DeadLineExtend\") {\r\n            this.setState({\r\n                NewContent: \"\"\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.finish) {\r\n            return (<ContractExtensionTable role={this.props.role} />);\r\n        } else {\r\n            return (\r\n                <div style={{ border: \"solid\", backgroundColor: \"white\",height: \"100vh\" }} >\r\n                    <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n\r\n                    <h2 style={{ textAlign: 'center' }}>phụ lục hợp đồng</h2>\r\n                    <Row>\r\n                        <Col span={3} order={1} />\r\n                        <Col span={20} order={2}>\r\n                            <div id=\"approver\">Lý do tạo:\r\n\r\n                        <Select defaultValue={this.state.option} style={{ width: 200 }}\r\n                                    onChange={this.ChooseOption}>\r\n                                    <Option value=\"DeadLineExtend\">Gia hạn hợp đồng</Option>\r\n                                    <Option value=\"ChangePolicy\">Thay đổi Giá trị</Option>{/*khi chọn cái này thì cái RangePicker sẽ hide và show cái table để chọn template*/}\r\n                                    <Option value=\"Both\">Cả hai</Option>{/*khi chọn cái này thì cái này show cái table để chọn template*/}\r\n                                </Select>\r\n                            </div>\r\n                            <Descriptions title=\"Noi dung thay doi\" size=\"small\" column={1} >\r\n                                {this.state.option === \"DeadLineExtend\" ? <Descriptions.Item><RangePicker\r\n                                    showTime={{ format: 'HH:mm' }}\r\n                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                    onChange={this.onChange}\r\n                                    onOk={this.onOk}\r\n                                /></Descriptions.Item> : null}\r\n                                {this.state.option === \"ChangePolicy\" ? <Descriptions.Item><Table dataSource={dataSource} >\r\n                                    <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                    <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                    <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                    <Column\r\n                                        title=\"Chọn hợp đồng\"\r\n                                        key=\"action\"\r\n                                        render={(text, record) => (\r\n                                            <Space size=\"middle\">\r\n                                                <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                            </Space>\r\n                                        )}\r\n                                    />\r\n                                </Table> </Descriptions.Item> : null}\r\n                                {this.state.option === \"Both\" ? <Descriptions.Item> <RangePicker\r\n                                    showTime={{ format: 'HH:mm' }}\r\n                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                    onChange={this.onChange}\r\n                                    onOk={this.onOk}\r\n                                /></Descriptions.Item> : null}\r\n                                {this.state.option === \"Both\" ? <Descriptions.Item> <Table dataSource={dataSource} >\r\n                                    <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                    <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                    <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                    <Column\r\n                                        title=\"Chọn hợp đồng\"\r\n                                        key=\"action\"\r\n                                        render={(text, record) => (\r\n                                            <Space size=\"middle\">\r\n                                                <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                            </Space>\r\n                                        )}\r\n                                    />\r\n                                </Table> </Descriptions.Item> : null}\r\n                                {this.state.NewContent === \"NewContent\" ? <>\r\n                                    <Descriptions.Item label=\"Điều khoản:\">\r\n                                        <a>Dieu khoan 1:</a><br />\r\n                                        <a>Dieu khoan 2:</a><br />\r\n                                        <a>Dieu khoan 3:</a><br />\r\n                                        <a>Dieu khoan 4:</a><br />\r\n                                    </Descriptions.Item>\r\n                                    <Descriptions.Item label=\"Giá trị:\">\r\n                                        <InputNumber\r\n                                            defaultValue={1000}\r\n                                            formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                        />\r\n                                    </Descriptions.Item></> : null}\r\n\r\n\r\n\r\n                            </Descriptions>\r\n                            <Space size=\"large\">\r\n                                <Button type=\"primary\" value=\"Signed\">\r\n                                    Lưu\r\n                        </Button>\r\n\r\n\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default AddContractExtension","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { UserAddOutlined, SearchOutlined, FileOutlined } from \"@ant-design/icons\"\r\nimport ContractExtensionTable from './ContractExtensionTable'\r\nimport { Select, DatePicker, Descriptions, Space, Button, Row, Col, Table, InputNumber } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column } = Table;\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\nclass UpdateContractExtension extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            openCommentSection: false,\r\n            finish: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.OpenCommentSection = this.OpenCommentSection.bind(this)\r\n    }\r\n    handleChange(value) {\r\n        console.log(`selected ${value}`);\r\n    }\r\n    log = (type) => console.log.bind(console, type);\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    OpenCommentSection() {\r\n        this.setState({\r\n            openCommentSection: true\r\n        })\r\n    }\r\n    onFinish = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n    };\r\n    render() {\r\n\r\n\r\n\r\n        if (this.state.finish) {\r\n            return (<ContractExtensionTable role={this.props.role} />);\r\n        } else {\r\n\r\n            return (\r\n\r\n                <div style={{ border: \"solid\",height: \"100vh\" }} >\r\n                    <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n\r\n                    <h2 style={{ textAlign: 'center' }}>phụ lục hợp đồng</h2>\r\n                    <Row>\r\n                        <Col span={3} order={1} />\r\n                        <Col span={20} order={2}>\r\n                            <div id=\"approver\">Lý do tạo:\r\n\r\n                        {/* <Select defaultValue={this.state.option} style={{ width: 200 }}\r\n                                onChange={this.ChooseOption}>\r\n                                <Option value=\"DeadLineExtend\">Gia hạn hợp đồng</Option>\r\n                                <Option value=\"ChangePolicy\">Thay đổi Giá trị</Option>\r\n                                <Option value=\"Both\">Cả hai</Option>\r\n                            </Select> */}\r\n                            </div>\r\n                            <Descriptions title=\"Noi dung thay doi\" size=\"small\" column={1} >\r\n                                <Descriptions.Item><RangePicker\r\n                                    showTime={{ format: 'HH:mm' }}\r\n                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                    onChange={this.onChange}\r\n                                    onOk={this.onOk}\r\n                                /></Descriptions.Item>\r\n                                <Descriptions.Item label=\"Điều khoản:\">\r\n                                    <a>Dieu khoan 1:</a><br />\r\n                                    <a>Dieu khoan 2:</a><br />\r\n                                    <a>Dieu khoan 3:</a><br />\r\n                                    <a>Dieu khoan 4:</a><br />\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"Giá trị:\">\r\n\r\n                                    <InputNumber\r\n                                        defaultValue={1000}\r\n                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                    />\r\n                                </Descriptions.Item>\r\n                                {/* {this.state.option === \"DeadLineExtend\" ? <Descriptions.Item><RangePicker\r\n                                showTime={{ format: 'HH:mm' }}\r\n                                format=\"YYYY-MM-DD HH:mm\"\r\n                                onChange={this.onChange}\r\n                                onOk={this.onOk}\r\n                            /></Descriptions.Item> : null} */}\r\n                                {/* {this.state.option === \"ChangePolicy\" ? <Descriptions.Item><Table dataSource={dataSource} >\r\n                                <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                <Column\r\n                                    title=\"Chọn hợp đồng\"\r\n                                    key=\"action\"\r\n                                    render={(text, record) => (\r\n                                        <Space size=\"middle\">\r\n                                            <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                        </Space>\r\n                                    )}\r\n                                />\r\n                            </Table> </Descriptions.Item> : null} */}\r\n                                {/* {this.state.option === \"Both\" ? <Descriptions.Item> <RangePicker\r\n                                showTime={{ format: 'HH:mm' }}\r\n                                format=\"YYYY-MM-DD HH:mm\"\r\n                                onChange={this.onChange}\r\n                                onOk={this.onOk}\r\n                            /></Descriptions.Item> : null} */}\r\n                                {/* {this.state.option === \"Both\" ? <Descriptions.Item> <Table dataSource={dataSource} >\r\n                                <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                <Column\r\n                                    title=\"Chọn hợp đồng\"\r\n                                    key=\"action\"\r\n                                    render={(text, record) => (\r\n                                        <Space size=\"middle\">\r\n                                            <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                        </Space>\r\n                                    )}\r\n                                />\r\n                            </Table> </Descriptions.Item> : null} */}\r\n                                {/* {this.state.NewContent === \"NewContent\" ?\r\n                                <Descriptions.Item label=\"Gia tri:\">\r\n                                    <a>Dieu khoan 1:</a><br />\r\n                                    <a>Dieu khoan 2:</a><br />\r\n                                    <a>Dieu khoan 3:</a><br />\r\n                                    <a>Dieu khoan 4:</a><br />\r\n                                    <InputNumber\r\n                                        defaultValue={1000}\r\n                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                    />\r\n                                </Descriptions.Item> : null} */}\r\n\r\n\r\n\r\n                            </Descriptions>\r\n                            <Space size=\"large\">\r\n                                {/* <Button type=\"primary\" value=\"Signed\">\r\n                                Lưu\r\n                        </Button> */}\r\n                                <Space size=\"large\">\r\n\r\n                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Sign\" onClick={this.onFinish}>{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n    Kí\r\n</Button> : null}\r\n                                    {this.props.contract.status == \"pending\" ? <Button onClick={this.OpenCommentSection} type=\"primary\" value=\"Update request\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n    Yêu cầu sửa\r\n</Button> : null}\r\n                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Edit\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng*/}\r\n        Sửa\r\n</Button> : null}\r\n\r\n                                </Space>\r\n\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateContractExtension","import 'antd/dist/antd.css';\r\nimport { Table, Button,Tag } from 'antd';\r\nimport ContractSearch from './ContractSearch'\r\nimport { EyeOutlined,DeleteOutlined, FormOutlined, FileAddOutlined,ContainerOutlined } from \"@ant-design/icons\"\r\nimport AddContractExtension from './AddContractExtension'\r\nimport UpdateContractExtension from './UpdateContractExtension'\r\nimport React from 'react';\r\nimport { createcontractExtension, contractExtensionInformation } from '../actions/ContractExtension'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column } = Table;\r\n\r\n\r\nclass ContractExtensionTable extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showCreateContractExtension: false,\r\n            showContractExtension: false,\r\n            contract :{},\r\n            \r\n        };\r\n\r\n        this.onOpenCreateContractExtension = this.onOpenCreateContractExtension.bind(this);\r\n        this.viewContractExtension = this.viewContractExtension.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        if (this.props.newContractExtension.length === 0) {\r\n            const contract1 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"active\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract2 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"deactive\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract3 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"pending\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract4 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"waiting for customer\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            this.props.onSubmit(contract1)\r\n            this.props.onSubmit(contract2)\r\n            this.props.onSubmit(contract3)\r\n            this.props.onSubmit(contract4)\r\n        }\r\n\r\n    }\r\n    onOpenCreateContractExtension() {\r\n        this.setState({\r\n            showCreateContractExtension: true\r\n        })\r\n\r\n    }\r\n    viewContractExtension() {\r\n        this.setState({\r\n            showContractExtension: true\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.showCreateContractExtension) {\r\n            return (\r\n                <AddContractExtension role={this.props.role} />\r\n\r\n            );\r\n        } else if (this.state.showContractExtension) {\r\n            return (\r\n                <UpdateContractExtension contract={this.state.contract} role={this.props.role} />\r\n\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{height: \"100vh\"}}><Button type=\"primary\" icon={<FileAddOutlined />} onClick={this.onOpenCreateContractExtension}>Tạo phụ lục</Button>\r\n                    <ContractSearch />\r\n                    <Table dataSource={this.props.newContractExtension}\r\n                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}>\r\n                        <Column title=\"tên phụ lục\" dataIndex=\"contract_type\" key=\"contract_type\"\r\n                            render={(text, record) => (\r\n\r\n                                <a><ContainerOutlined />{text}</a>\r\n\r\n                            )}\r\n                        />\r\n\r\n                        <Column title=\"bên đối tác\" dataIndex=\"ben_tham_gia\" key=\"ben_tham_gia\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"bên tạo \" dataIndex=\"ben_tao_hd\" key=\"ben_tao_hd\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"người tạo \" dataIndex=\"nguoi_tao_hd\" key=\"nguoi_tao_hd\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                            render={(text, record) => {\r\n                                let color = 'pink'\r\n                                if (text === 'deactive') {\r\n                                    color = 'red'\r\n                                } else if (text === 'active') {\r\n                                    color = 'green'\r\n                                } else if (text === 'pending') {\r\n                                    color = 'blue'\r\n                                } else if (text === 'waiting for customer') {\r\n                                    color = 'pink'\r\n                                } else if (text === 'rejected') {\r\n                                    color = 'grey'\r\n                                }\r\n                                return (<Tag color={color} key={text}>\r\n                                    {text.toUpperCase()}\r\n                                </Tag>);\r\n                            }}\r\n                        />\r\n                        <Column\r\n                            title=\"Xem chi tiết\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <EyeOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={\r\n                                    () => this.setState({\r\n                                        contract: text,\r\n                                        showContractExtension: true\r\n                                    })\r\n                                } />\r\n\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"Vô hiệu hóa\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        />\r\n                        {this.props.role == 'Director' ? <Column\r\n                            title=\"Ký\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <FormOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        /> : null}\r\n\r\n                    </Table></div>\r\n\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (contractExtension) => {\r\n            dispatch(createcontractExtension(contractExtension))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        newContractExtension: state.myContractExtensionReducer\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ContractExtensionTable)","export const contractExtensionInformation = () => {\r\n    return {\r\n      type: 'LIST_contractExtension',\r\n    }\r\n  }\r\n  export const createcontractExtension = (contractExtension) => {\r\n    \r\n    return {\r\n      type: 'CREATE_contractExtension',\r\n      contractExtension\r\n    }\r\n  }\r\n  export const updatecontractExtension = (contractExtension) => {\r\n    return {\r\n      type: 'UPDATE_contractExtension',\r\n      contractExtension\r\n    }\r\n  }\r\n  export const deactivecontractExtension = (contractExtensionID) => {\r\n    return {\r\n      type: 'DEACTIVE_contractExtension',\r\n      contractExtensionID\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    FileExcelOutlined, IdcardOutlined, BankOutlined, PhoneOutlined, PrinterOutlined, HomeOutlined, MailOutlined\r\n    , ContactsOutlined, CalendarOutlined, DollarOutlined, CloudDownloadOutlined, CloudUploadOutlined, AuditOutlined\r\n} from '@ant-design/icons';\r\nimport ContractExtensionTable from './ContractExtensionTable'\r\nimport { Descriptions, InputNumber, Space, Button, DatePicker, Input, PageHeader, Form, Row, Col, Comment, List, Avatar } from 'antd';\r\nimport ContractTable from './ContractTable'\r\nimport moment from 'moment'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst CommentList = ({ comments }) => (\r\n    <List\r\n        dataSource={comments}\r\n        header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\r\n        itemLayout=\"horizontal\"\r\n        renderItem={props => <Comment {...props} />}\r\n    />\r\n);\r\n\r\nclass ContractView extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            openExtension: false,\r\n            openCommentSection: false,\r\n            finish: false,\r\n            showContent: \"customer\",\r\n            comments: [],\r\n            submitting: false,\r\n            value: '',\r\n        };\r\n\r\n        this.OpenExtension = this.OpenExtension.bind(this)\r\n        this.OpenCommentSection = this.OpenCommentSection.bind(this)\r\n    }\r\n    handleSubmit = () => {\r\n        if (!this.state.value) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            submitting: true,\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                submitting: false,\r\n                value: '',\r\n                comments: [\r\n                    {\r\n                        author: 'Han Solo',\r\n\r\n                        content: <p>{this.state.value}</p>,\r\n                        datetime: moment().fromNow(),\r\n                    },\r\n                    ...this.state.comments,\r\n                ],\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n    OpenExtension() {\r\n        this.setState({\r\n            openExtension: true\r\n        })\r\n    }\r\n    OpenCommentSection() {\r\n        this.setState({\r\n            openCommentSection: true\r\n        })\r\n    }\r\n    onFinish = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n    };\r\n    onFinishComment = () => {\r\n\r\n\r\n\r\n    };\r\n    onFinishCommenFailt = () => {\r\n\r\n\r\n\r\n    };\r\n    ShowCustomer = () => {\r\n        this.setState({\r\n            showContent: \"customer\"\r\n        })\r\n    };\r\n    ShowContent = () => {\r\n        this.setState({\r\n            showContent: \"content\"\r\n        })\r\n    };\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    render() {\r\n        const { comments, submitting, value } = this.state;\r\n        const Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n            <Form\r\n\r\n                name=\"basic\"\r\n                className=\"lcontract-form\"\r\n\r\n                onFinish={this.onFinishComment}\r\n                onFinishFailed={this.onFinishCommentFailed}\r\n\r\n            >\r\n                <Form.Item>\r\n                    <TextArea rows={4} onChange={onChange} value={value} />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\r\n                        Yêu cầu sửa\r\n                </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n        if (this.props.role === true) {\r\n\r\n            if (this.state.openExtension) {\r\n                return (<ContractExtensionTable role={this.props.role} />);\r\n            } else {\r\n                if (this.state.finish) {\r\n                    return (<ContractTable role={this.props.role} />);\r\n                } else {\r\n                    return (\r\n\r\n                        <div style={{ height: \"100vh\" }}>\r\n                            <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                                Trở về\r\n                            </Button>\r\n                            <h2 style={{ textAlign: 'center' }}>Hợp đồng </h2>\r\n                            <Row>\r\n                                <Col span={3} order={1} />\r\n                                <Col span={20} order={2}>\r\n                                    <PageHeader\r\n                                        className=\"site-page-header\"\r\n                                        ghost={false}\r\n                                        title=\"Thông tin bên A\">\r\n                                        <Descriptions size=\"small\" column={2} >\r\n                                            <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                Usada Pekora\r\n                                            </Descriptions.Item>\r\n\r\n\r\n                                        </Descriptions>\r\n                                    </PageHeader>\r\n\r\n\r\n                                    <PageHeader\r\n                                        className=\"site-page-header\"\r\n                                        ghost={false}\r\n                                        title=\"Thông tin bên B\"\r\n                                        subTitle={[]}\r\n                                        extra={[<Button type=\"primary\" onClick={this.ShowCustomer}>Thông tin bên B</Button>,\r\n                                        <Button type=\"primary\" onClick={this.ShowContent}>Thông tin hợp đồng</Button>\r\n                                        ]}\r\n                                    >\r\n                                        {this.state.showContent === \"customer\" ?\r\n                                            <Descriptions title=\"\" size=\"small\" column={2}  >\r\n\r\n                                                <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                    Usada Pekora\r\n                                                </Descriptions.Item>\r\n\r\n\r\n                                            </Descriptions> : null}\r\n                                        {this.state.showContent === \"content\" ?\r\n                                            <Form\r\n\r\n                                                name=\"basic\"\r\n                                                className=\"lcontract-form\"\r\n\r\n                                                onFinish={this.onFinish}\r\n                                                onFinishFailed={this.onFinishFailed}\r\n\r\n                                            >\r\n                                                <Descriptions title=\"Nội dung hợp đồng\" size=\"small\" column={1}   >\r\n                                                    <Descriptions.Item label=\"Contract duration\"> <RangePicker\r\n                                                        showTime={{ format: 'HH:mm' }}\r\n                                                        format=\"YYYY-MM-DD HH:mm\"\r\n                                                        onChange={this.onChange}\r\n                                                        onOk={this.onOk}\r\n                                                    /></Descriptions.Item>\r\n                                                    <Descriptions.Item label=\"Giá trị:\">\r\n                                                        <Form.Item\r\n\r\n                                                            name=\"value\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Vui lòng nhập Giá trị:',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <InputNumber\r\n                                                                defaultValue={1000}\r\n                                                                formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                            />\r\n                                                        </Form.Item>\r\n\r\n                                                    </Descriptions.Item>\r\n                                                    <a>Dieu khoan 1:</a><br />\r\n                                                    <a>Dieu khoan 2:</a><br />\r\n                                                    <a>Dieu khoan 3:</a><br />\r\n                                                    <a>Dieu khoan 4:</a><br />\r\n\r\n                                                </Descriptions>\r\n                                                {comments.length > 0 && <CommentList comments={comments} />}\r\n\r\n\r\n\r\n\r\n\r\n                                                <Space size=\"large\">\r\n\r\n                                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Sign\" onClick={this.onFinish}>{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n                                                        Kí\r\n                                                    </Button> : this.props.contract.status == \"waiting for sign\" ? <Button type=\"primary\" value=\"Sign\" onClick={this.onFinish}>{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n                                                        Kí\r\n                                                    </Button> : null}\r\n                                                    {this.props.contract.status == \"pending\" ? <Comment\r\n                                                        avatar={\r\n                                                            <Avatar\r\n                                                                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                                                                alt=\"Han Solo\"\r\n                                                            />\r\n                                                        }\r\n                                                        content={\r\n                                                            <Editor\r\n                                                                onChange={this.handleChange}\r\n                                                                onSubmit={this.handleSubmit}\r\n                                                                submitting={submitting}\r\n                                                                value={value}\r\n                                                            />\r\n                                                        }\r\n                                                    /> : null}\r\n                                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Edit\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng*/}\r\n                                                            Sửa\r\n                                                    </Button> : null}\r\n                                                    {this.props.contract.status == \"active\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Xem phụ lục\r\n                                                    </Button> : null}\r\n                                                    {this.props.contract.status == \"deactive\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Xem phụ lục\r\n                                                        </Button> : null}\r\n                                                    {this.props.contract.status == \"waiting for sign\" ? <Button type=\"primary\" value=\"reject\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Reject\r\n                                                        </Button> : null}\r\n                                                </Space>\r\n                                            </Form> : null}\r\n                                    </PageHeader>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                        </div>\r\n\r\n                    );\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n\r\n\r\n            if (this.state.openExtension) {\r\n                return (<ContractExtensionTable role={this.props.role} />);\r\n            } else {\r\n                if (this.state.finish) {\r\n                    return (<ContractTable role={this.props.role} />);\r\n                } else {\r\n                    return (\r\n                        <div style={{ height: \"100vh\" }}>\r\n                            <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                                Trở về\r\n              </Button>\r\n                            <h2 style={{ textAlign: 'center' }}>Hợp đồng </h2>\r\n                            <Row>\r\n                                <Col span={3} order={1} />\r\n                                <Col span={20} order={2}>\r\n                                    <PageHeader\r\n                                        className=\"site-page-header\"\r\n                                        ghost={false}\r\n                                        title=\"Thông tin bên A\">\r\n                                        <Descriptions size=\"small\" column={2} >\r\n                                            <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                Usada Pekora\r\n                        </Descriptions.Item>\r\n\r\n\r\n                                        </Descriptions>\r\n                                    </PageHeader>\r\n\r\n\r\n                                    <PageHeader\r\n                                        className=\"site-page-header\"\r\n                                        ghost={false}\r\n                                        title=\"Thông tin bên B\"\r\n                                        subTitle={[]}\r\n                                        extra={[<Button type=\"primary\" onClick={this.ShowCustomer}>Thông tin bên B</Button>,\r\n                                        <Button type=\"primary\" onClick={this.ShowContent}>Thông tin hợp đồng</Button>\r\n                                        ]}\r\n                                    >\r\n                                        {this.state.showContent === \"customer\" ?\r\n                                            <Descriptions title=\"\" size=\"small\" column={2}  >\r\n\r\n                                                <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                    Usada Pekora\r\n                        </Descriptions.Item>\r\n\r\n\r\n                                            </Descriptions> : null}\r\n                                        {this.state.showContent === \"content\" ?\r\n                                            <Form\r\n                                                name=\"basic\"\r\n                                                className=\"lcontract-form\"\r\n\r\n                                                onFinish={this.onFinish}\r\n                                                onFinishFailed={this.onFinishFailed}\r\n\r\n                                            >\r\n                                                <Descriptions title=\"Nội dung hợp đồng\" size=\"small\" column={1}   >\r\n                                                    <Descriptions.Item label=\"Contract duration\"> <RangePicker\r\n                                                        showTime={{ format: 'HH:mm' }}\r\n                                                        format=\"YYYY-MM-DD HH:mm\"\r\n                                                        onChange={this.onChange}\r\n                                                        onOk={this.onOk}\r\n                                                    /></Descriptions.Item>\r\n                                                    <a>Dieu khoan 1:</a><br />\r\n                                                    <a>Dieu khoan 2:</a><br />\r\n                                                    <a>Dieu khoan 3:</a><br />\r\n                                                    <a>Dieu khoan 4:</a><br />\r\n                                                    <Descriptions.Item label=\"Giá trị:\">\r\n                                                        <Form.Item\r\n\r\n                                                            name=\"value\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Vui lòng nhập Giá trị:',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <InputNumber\r\n                                                                defaultValue={1000}\r\n                                                                formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                            />\r\n                                                        </Form.Item>\r\n\r\n                                                    </Descriptions.Item>\r\n                                                </Descriptions>\r\n\r\n                                                <Space size=\"large\">\r\n\r\n\r\n                                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Edit\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng*/}\r\n                                Sửa\r\n              </Button> : null}\r\n                                                    {this.props.contract.status == \"active\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                Xem phụ lục\r\n              </Button> : null}\r\n                                                    {this.props.contract.status == \"deactive\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                Xem phụ lục\r\n              </Button> : null}\r\n                                                </Space>\r\n                                            </Form> : null}\r\n                                    </PageHeader>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                        </div>\r\n\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default ContractView","import 'antd/dist/antd.css';\r\nimport { Table, Button, Space, Tag } from 'antd';\r\nimport ContractSearch from './ContractSearch'\r\nimport './Column.css'\r\nimport {\r\n    EyeOutlined, DeleteOutlined, FormOutlined, FileAddOutlined, UploadOutlined, ContainerOutlined,\r\n    UsergroupAddOutlined, UserSwitchOutlined, UserAddOutlined, LogoutOutlined, MonitorOutlined\r\n} from \"@ant-design/icons\"\r\nimport ChooseContractTemplate from './ChooseContractTemplate'\r\nimport ViewContractPage from './ViewContractPage'\r\nimport React, { Component } from 'react';\r\nimport { createContract, contractInformation } from '../actions/ContractAction'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column } = Table;\r\n\r\n\r\nconst dataSource = []\r\n// for (var i = 0; i < 5; i++) {\r\n\r\n//     const contract = {\r\n\r\n//         contract_name: 'Hop dong lao dong',\r\n//         status: \"pending\",\r\n//         ben_tao_hd: 'HiSign',\r\n//         ben_tham_gia: 'cty 369',\r\n//         nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n//         deadline: \"12/12/2022\",\r\n\r\n//     }\r\n//     dataSource.push(contract)\r\n\r\n\r\n\r\n\r\n// }\r\n\r\nclass ContractTable extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showCreateContract: false,\r\n            showContract: false,\r\n            contract: {}\r\n        };\r\n        this.onOpenCreateContract = this.onOpenCreateContract.bind(this);\r\n        this.viewContract = this.viewContract.bind(this);\r\n\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        if (this.props.newContract.length === 0) {\r\n            const contract1 = {\r\n\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"deactive\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract2 = {\r\n\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"waiting for customer\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract3 = {\r\n\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"pending\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract4 = {\r\n\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"active\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract5 = {\r\n\r\n                contract_name: 'Hop dong mua ban',\r\n                status: \"waiting for sign\",\r\n                ben_tao_hd: 'cty 369',\r\n                ben_tham_gia: 'HiSign',\r\n                nguoi_tao_hd: \"AAA\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            this.props.onSubmit(contract1)\r\n            this.props.onSubmit(contract2)\r\n            this.props.onSubmit(contract3)\r\n            this.props.onSubmit(contract4)\r\n            this.props.onSubmit(contract5)\r\n        }\r\n\r\n    }\r\n    onOpenCreateContract() {\r\n        this.setState({\r\n            showCreateContract: true\r\n        })\r\n    }\r\n    viewContract() {\r\n\r\n        this.setState({\r\n\r\n            showContract: true\r\n        })\r\n    }\r\n    render() {\r\n\r\n\r\n\r\n        if (this.state.showCreateContract) {\r\n            return (\r\n                <ChooseContractTemplate role={this.props.role} />\r\n            );\r\n        } else if (this.state.showContract) {\r\n            return (\r\n                <ViewContractPage contract={this.state.contract} role={this.props.role} />\r\n            );\r\n        }\r\n        else {\r\n\r\n            return (\r\n                <div style={{height: \"100vh\"}}>\r\n                    <Space size=\"large\">\r\n                        <Button type=\"primary\" icon={<FileAddOutlined />} onClick={this.onOpenCreateContract}>Tạo hợp đồng</Button>\r\n                        <Button type=\"primary\" icon={<UploadOutlined />} >Tải lên hợp đồng</Button>\r\n                    </Space>\r\n                    <ContractSearch />\r\n                    <Table dataSource={this.props.newContract}\r\n                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}>\r\n                        <Column title=\"tên hợp đồng\" dataIndex=\"contract_name\" key=\"contract_name\"\r\n                            render={(text, record) => (\r\n\r\n                                <a><ContainerOutlined />{text}</a>\r\n\r\n                            )}\r\n                        />\r\n\r\n                        <Column title=\"bên đối tác\" dataIndex=\"ben_tham_gia\" key=\"ben_tham_gia\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"Ngày hết hạn\" dataIndex=\"deadline\" key=\"deadline\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"bên tạo hợp đồng\" dataIndex=\"ben_tao_hd\" key=\"ben_tao_hd\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                            render={(text, record) => {\r\n                                let color = 'pink'\r\n                                if (text === 'deactive') {\r\n                                    color = 'red'\r\n                                } else if (text === 'active') {\r\n                                    color = 'green'\r\n                                } else if (text === 'pending') {\r\n                                    color = 'blue'\r\n                                } else if (text === 'waiting for customer') {\r\n                                    color = 'pink'\r\n                                } else if (text === 'rejected') {\r\n                                    color = 'grey'\r\n                                }\r\n                                return (<Tag color={color} key={text}>\r\n                                    {text.toUpperCase()}\r\n                                </Tag>);\r\n                            }}\r\n                        />\r\n                        <Column\r\n                            title=\"Xem chi tiết\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <EyeOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={\r\n                                    () => this.setState({\r\n                                        contract: text,\r\n                                        showContract: true\r\n                                    })\r\n                                } />\r\n\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"Vô hiệu hóa\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        />\r\n                        {this.props.role === true ? <Column\r\n                            title=\"Ký\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <FormOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        /> : null}\r\n\r\n                    </Table></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (contract) => {\r\n            dispatch(createContract(contract))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        newContract: state.myContractReducer\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContractTable)","export const customerInformation = () => {\r\n    return {\r\n      type: 'LIST_customer',\r\n    }\r\n  }\r\n  export const createCustomer = (customer) => {\r\n    \r\n    return {\r\n      type: 'CREATE_customer',\r\n      customer\r\n    }\r\n  }\r\n  export const updateCustomer = (customer) => {\r\n    return {\r\n      type: 'UPDATE_customer',\r\n      customer\r\n    }\r\n  }\r\n  export const deactiveCustomer = (customerID) => {\r\n    return {\r\n      type: 'DEACTIVE_customer',\r\n      customerID\r\n    }\r\n  }","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport { createCustomer, customerInformation } from '../actions/CustomerAction'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport CustomerTable from './CustomerTable'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\nclass AddCustomer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            finish: false\r\n        };\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n\r\n        const contract1 = {\r\n\r\n            name: 'John',\r\n            company: \"cty 369\",\r\n            address: '10 Downing Street',\r\n            status: \"active\",\r\n\r\n        }\r\n\r\n\r\n        this.props.onSubmit(contract1)\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n    };\r\n    Cancel = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    render() {\r\n        if (this.state.finish) {\r\n            return (<CustomerTable role={this.props.role} />);\r\n        } else {\r\n\r\n\r\n            return (\r\n                <div style={{\r\n                    margin: \"auto\",\r\n                    width: \"1000px\",\r\n                    paddingLeft: \"50px\",\r\n                    border: \"solid\"\r\n                }\r\n                }>\r\n                    <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                    <h2 style={{ textAlign: 'center' }}>Thông tin khách hàng</h2>\r\n                    <React.Fragment>\r\n                        <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                            <Col span={10} >\r\n                                <Grid container spacing={3}>\r\n\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"company\"\r\n                                            name=\"Tên doanh nghiệp\"\r\n                                            label=\"Tên doanh nghiệp\"\r\n                                            fullWidth\r\n                                            autoComplete=\"Tên doanh nghiệp\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"taxCode\"\r\n                                            name=\"Mã số thuế\"\r\n                                            label=\"Mã số thuế\"\r\n                                            fullWidth\r\n                                            autoComplete=\"family-name\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"faxCode\"\r\n                                            name=\"số fax\"\r\n                                            label=\"số fax\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping address-line1\"\r\n                                        />\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"email\"\r\n                                            name=\"địa chỉ mail\"\r\n                                            label=\"địa chỉ mail\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping address-level2\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            id=\"address\"\r\n                                            name=\"địa chỉ\"\r\n                                            label=\"địa chỉ\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping address-line2\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"presentor\"\r\n                                            name=\"Người đại diện\"\r\n                                            label=\"Người đại diện\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping postal-code\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"role\"\r\n                                            name=\"chức vụ\"\r\n                                            label=\"chức vụ\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping country\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                                <div></div><br />\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Button type=\"primary\" >\r\n                                        Nộp\r\n                            </Button>\r\n                                    <Button type=\"primary\" style={{\r\n                                        margin: '0 8px',\r\n                                    }} htmlType=\"button\">\r\n                                        Reset\r\n                            </Button>\r\n                                </Grid>\r\n                            </Col>\r\n                        </Row>\r\n                    </React.Fragment>\r\n                    {/* <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        labelAlign=\"left\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                    ><br />\r\n                        <Form.Item\r\n                            label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                            name=\"companyname\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập tên doanh nghiệp',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                            name=\"email\"\r\n                            requiredMark=\"false\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Địa chỉ email',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                            name=\"taxcode\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Mã số thuế',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                            name=\"address\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Địa chỉ',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                            <Button type=\"primary\" style={{\r\n                                margin: '0 8px',\r\n                            }} htmlType=\"button\">\r\n                                <RedoOutlined />    Reset\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form> */}\r\n                </div >\r\n            );\r\n        }\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (customer) => {\r\n            dispatch(createCustomer(customer))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddCustomer)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ViewCustomer extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin khách hàng</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ViewCustomer;","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Select, DatePicker, Button, Space, Breadcrumb, PageHeader, Input, InputNumber,Form } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Option } = Select;\r\nclass CustomerSearch extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            SearchBy: \"SearchByCompanyName\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({\r\n            SearchBy: value\r\n        })\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values)\r\n\r\n\r\n    };\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Select defaultValue=\"SearchByCompanyName\" onChange={this.handleChange}>\r\n                    <Option value=\"SearchByPhone\">tìm kiếm theo số điện thoại</Option>\r\n                    <Option value=\"SearchByCompanyName\">tìm kiếm theo tên doanh nghiệp</Option>\r\n                    <Option value=\"SearchByTaxCode\">tìm kiếm theo mã số thuế</Option>\r\n                    <Option value=\"SearchByStatus\">tìm kiếm theo trạng thái</Option>\r\n                    <Option value=\"SearchByFaxCode\">tìm kiếm theo số fax</Option>\r\n                    <Option value=\"SearchByPresentor\">tìm kiếm theo người đại diện</Option>\r\n                </Select>\r\n\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n\r\n                    title={[<Space size=\"large\">\r\n\r\n                        {this.state.SearchBy === \"SearchByStatus\" ?\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n\r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb> : null}\r\n\r\n                    </Space>]}\r\n                    extra={[\r\n\r\n                        <Form\r\n                            name=\"basic\"\r\n                            className=\"search-form\"\r\n                            initialValues={{\r\n                                remember: true,\r\n                            }}\r\n                            onFinish={this.onFinish}\r\n                            onFinishFailed={this.onFinishFailed}>\r\n                            <Space size=\"large\">\r\n                                {this.state.SearchBy === \"SearchByPhone\" ?\r\n                                    <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByCompanyName\" ? <> <Input name=\"searchValue\" />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></> : null}\r\n                                {this.state.SearchBy === \"SearchByTaxCode\" ?\r\n                                    <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByFaxCode\" ? <> <Input name=\"searchValue\" />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></> : null}\r\n                                {this.state.SearchBy === \"SearchByPresentor\" ?\r\n                                    <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n\r\n\r\n                            </Space>\r\n                        </Form>\r\n                    ]}\r\n                >\r\n\r\n\r\n\r\n                </PageHeader>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default CustomerSearch;","import 'antd/dist/antd.css';\r\nimport { Table, Space, Button, Tag } from 'antd';\r\nimport AddCustomer from './AddCustomer'\r\nimport ViewCustomer from './ViewCustomer'\r\nimport React from 'react';\r\nimport './Column.css'\r\nimport CustomerSearch from './CustomerSearch'\r\nimport { createCustomer, customerInformation } from '../actions/CustomerAction'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { UserAddOutlined, EditOutlined, DeleteOutlined, UserOutlined } from \"@ant-design/icons\"\r\nconst { Column } = Table;\r\n\r\n\r\nclass CustomerList extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      openCustomer: \"\",\r\n\r\n    };\r\n\r\n    this.OpenAddCustomer = this.OpenAddCustomer.bind(this);\r\n    this.OpenViewCustomer = this.OpenViewCustomer.bind(this);\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newCustomer.length === 0) {\r\n      const contract1 = {\r\n\r\n        name: 'John',\r\n        company: \"cty 369\",\r\n        address: '10 Downing Street',\r\n        taxCode: \"taxcode\",\r\n        faxCode: \"faxcode\",\r\n        phone: \"phone\",\r\n        email: \"email\",\r\n        status: \"deactive\",\r\n\r\n      }\r\n      const contract2 = {\r\n\r\n        name: 'Mike',\r\n        company: \"cty 370\",\r\n        address: '10 Downing Street',\r\n        taxCode: \"taxcode\",\r\n        faxCode: \"faxcode\",\r\n        phone: \"phone\",\r\n        email: \"email\",\r\n        status: \"active\",\r\n\r\n      }\r\n\r\n      this.props.onSubmit(contract1)\r\n      this.props.onSubmit(contract2)\r\n\r\n    }\r\n\r\n  }\r\n  OpenAddCustomer() {\r\n    this.setState({\r\n      openCustomer: \"openAddCustomer\",\r\n\r\n    })\r\n  }\r\n  OpenViewCustomer() {\r\n    this.setState({\r\n      openCustomer: \"openViewCustomer\",\r\n    })\r\n  }\r\n  render() {\r\n    if (this.state.openCustomer === \"openAddCustomer\") {\r\n      return (\r\n        <AddCustomer />\r\n      );\r\n    } else if (this.state.openCustomer === \"openViewCustomer\") {\r\n      return (<AddCustomer />);\r\n\r\n    }\r\n    else {\r\n      return (\r\n        <div style={{ height: \"100vh\" }}><Button type=\"primary\" onClick={this.OpenAddCustomer} icon={<UserAddOutlined />}>Tạo khách hàng mới</Button>\r\n          <CustomerSearch />\r\n          <Table dataSource={this.props.newCustomer}\r\n            \r\n            rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n            <Column title=\"Tên doanh nghiệp\" dataIndex=\"company\" key=\"company\" \r\n            sorter={(a, b) => a.company.localeCompare(b.company)}\r\n            sortDirections={['descend', 'ascend']}\r\n            render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n\r\n            <Column title=\"Người đại diện\" dataIndex=\"name\" key=\"name\" \r\n            sorter={(a, b) => a.name.localeCompare(b.name)}\r\n            sortDirections={['descend', 'ascend']}\r\n            render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"Địa chỉ\" dataIndex=\"address\" key=\"address\" \r\n            sorter={(a, b) => a.address.localeCompare(b.address)}\r\n            sortDirections={['descend', 'ascend']}\r\n            render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"Mã số thuế\" dataIndex=\"taxCode\" key=\"taxCode\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"Số fax\" dataIndex=\"faxCode\" key=\"faxCode\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"Số điện thoại\" dataIndex=\"phone\" key=\"phone\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"email\" dataIndex=\"email\" key=\"email\" render={(text, record) => (\r\n\r\n              <a>{text}</a>\r\n\r\n            )} />\r\n\r\n            <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n              render={(text, record) => {\r\n                let color = 'pink'\r\n                if (text === 'deactive') {\r\n                  color = 'red'\r\n                } else if (text === 'active') {\r\n                  color = 'green'\r\n                } else if (text === 'pending') {\r\n                  color = 'blue'\r\n                } else if (text === 'waiting for customer') {\r\n                  color = 'pink'\r\n                } else if (text === 'rejected') {\r\n                  color = 'grey'\r\n                }\r\n                return (<Tag color={color} key={text}>\r\n                  {text.toUpperCase()}\r\n                </Tag>);\r\n              }}\r\n            />\r\n            <Column\r\n              title=\"Cập nhật thông tin\"\r\n              key=\"action\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  <EditOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Sửa</EditOutlined>\r\n                </Space>\r\n              )}\r\n            />\r\n            <Column\r\n              title=\"Tác vụ\"\r\n              dataIndex=\"status\"\r\n              key=\"status\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                  {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                </Space>\r\n              )}\r\n            />\r\n\r\n          </Table></div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSubmit: (customer) => {\r\n      dispatch(createCustomer(customer))\r\n    }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n    newCustomer: state.myCustomerReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Select, DatePicker } from 'antd';\r\nimport { List, Avatar, Button, Skeleton, Checkbox } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Option } = Select;\r\nclass TemplateUpload extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            approvalBeforeSign: false,\r\n            approverList: [],\r\n\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.ChooseApproval = this.ChooseApproval.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        console.log(value)\r\n        if (value === \"yes\") {\r\n            this.setState({\r\n                approvalBeforeSign: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                approvalBeforeSign: false,\r\n            })\r\n        }\r\n\r\n    }\r\n    ChooseApproval(value) {\r\n\r\n\r\n        this.setState({\r\n            approverList: this.state.approverList.concat(value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{ height: \"100vh\" }}>\r\n\r\n                <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n                <link rel=\"shortcut icon\" href=\"http://localhost:3001/favicon.ico\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                <meta name=\"theme-color\" content=\"#000000\" />\r\n                <meta name=\"description\" content=\"Web site created using create-react-app\" />\r\n                <link rel=\"apple-touch-icon\" href=\"http://localhost:3001/logo192.png\" />\r\n                <title>PDF Signaturer</title>\r\n                <style\r\n                    data-styled\r\n                    data-styled-version=\"4.4.0\"\r\n                    dangerouslySetInnerHTML={{\r\n                        __html:\r\n                            \"\\n/* sc-component-id: sc-bdVaJa */\\n.ftKihC{padding-top:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;} .ftKihC canvas{border:3px solid #eee;border-radius:4px;background:white;width:100%;height:100%;padding:3px;} .ftKihC div{padding:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;} .ftKihC div button{background:#1a82cc;border:0;padding:15px;margin-left:10px;border-radius:4px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/* sc-component-id: sc-bwzfXH */\\n.bzSLKe{padding-top:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;} .bzSLKe iframe{border:3px solid #eee;border-radius:4px;background:white;width:100%;height:100%;min-height:500px;padding:3px;}\\n/* sc-component-id: sc-htpNat */\\n.hpgyVh[disabled]{cursor:not-allowed;opacity:0.6;}\\n/* sc-component-id: sc-bxivhb */\\n.cDZPnc{max-width:700px;background:#fff;border-radius:4px;box-shadow:0 0 20px rgba(0,0,0,0.1);padding:30px;margin:80px auto;} .cDZPnc h1{font-size:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;} .cDZPnc h1 svg{margin-right:10px;} .cDZPnc h1 input{-webkit-flex:1;-ms-flex:1;flex:1;border:3px solid #eee;margin-left:10%;padding:10px 15px;border-radius:4px;font-size:16px;}\\n/* sc-component-id: sc-global-3878584262 */\\n*{margin:0;padding:0;outline:0;box-sizing:border-box;} html,body,#root{min-height:100%;} body{background:#1A82CC;-webkit-font-smoothing:antialiased !important;} body,input,button{color:#222;font-size:14px;font-family:Arial,Helvetica,sans-serif;} button{cursor:pointer;}\"\r\n                    }}\r\n                />\r\n                <noscript>You need to enable JavaScript to run this app.</noscript>\r\n                <div id=\"\">\r\n                    <div className=\"sc-bxivhb cDZPnc\">\r\n                        <h1>\r\n                            <svg\r\n                                stroke=\"currentColor\"\r\n                                fill=\"currentColor\"\r\n                                strokeWidth={0}\r\n                                viewBox=\"0 0 576 512\"\r\n                                height=\"1em\"\r\n                                width=\"1em\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path d=\"M218.17 424.14c-2.95-5.92-8.09-6.52-10.17-6.52s-7.22.59-10.02 6.19l-7.67 15.34c-6.37 12.78-25.03 11.37-29.48-2.09L144 386.59l-10.61 31.88c-5.89 17.66-22.38 29.53-41 29.53H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h12.39c4.83 0 9.11-3.08 10.64-7.66l18.19-54.64c3.3-9.81 12.44-16.41 22.78-16.41s19.48 6.59 22.77 16.41l13.88 41.64c19.75-16.19 54.06-9.7 66 14.16 1.89 3.78 5.49 5.95 9.36 6.26v-82.12l128-127.09V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24v-40l-128-.11c-16.12-.31-30.58-9.28-37.83-23.75zM384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1zm-96 225.06V416h68.99l161.68-162.78-67.88-67.88L288 346.96zm280.54-179.63l-31.87-31.87c-9.94-9.94-26.07-9.94-36.01 0l-27.25 27.25 67.88 67.88 27.25-27.25c9.95-9.94 9.95-26.07 0-36.01z\" />\r\n                            </svg>\r\n            DOT template\r\n            <input type=\"file\" />\r\n                        </h1>\r\n                        <div className=\"sc-bwzfXH bzSLKe\">\r\n                            <iframe\r\n                                title=\"pdframe\"\r\n                                src=\"\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"sc-bdVaJa ftKihC\">\r\n\r\n                            <div>\r\n                                <Button type=\"primary\" >\r\n                                    Nộp\r\n                            </Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default TemplateUpload","import 'antd/dist/antd.css';\r\nimport { Table, Space, Button, Tag } from 'antd';\r\nimport TemplateUpload from './TemplateUpload';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport React from 'react';\r\nimport './Column.css'\r\nimport ContractTypeSearch from './ContractTypeSearch'\r\nimport { createContractType, contractTypeInformation } from '../actions/ContractType'\r\nimport { connect } from 'react-redux'\r\nimport { UploadOutlined, FileOutlined, DeleteOutlined, UserOutlined, FileWordOutlined } from \"@ant-design/icons\"\r\nconst { Column } = Table;\r\n\r\n\r\n\r\nclass ContractTable extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      showTemplateCreate: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n  handleChange() {\r\n    this.setState({\r\n      showTemplateCreate: true,\r\n    })\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newContractType.length === 0) {\r\n      const contract1 = {\r\n\r\n        contract_type: 'Hop dong lao dong',\r\n        creator: \"creator\",\r\n        createDate: \"date\",\r\n        fileName: 'template1.dot',\r\n        status: \"active\"\r\n\r\n      }\r\n      const contract2 = {\r\n\r\n        contract_type: 'Hop dong lao dong',\r\n        creator: \"creator\",\r\n        createDate: \"date\",\r\n        fileName: 'template1.dot',\r\n        status: \"deactive\"\r\n\r\n      }\r\n\r\n      this.props.onSubmit(contract1)\r\n      this.props.onSubmit(contract2)\r\n\r\n    }\r\n\r\n  }\r\n  render() {\r\n    if (this.state.showTemplateCreate) {\r\n      return (\r\n\r\n        <TemplateUpload />\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ height: \"100vh\" }}><Button type=\"primary\" onClick={this.handleChange} icon={<UploadOutlined />}>Tải lên mẫu mới</Button>\r\n          <ContractTypeSearch />\r\n          <Table dataSource={this.props.newContractType}\r\n            rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}  >\r\n            <Column title=\"Loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\"\r\n              render={(text, record) => (\r\n\r\n                <a><FileOutlined />{text}</a>\r\n\r\n              )}\r\n            />\r\n\r\n            <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\"\r\n              render={(text, record) => (\r\n\r\n                <b><FileWordOutlined />{text}</b>\r\n\r\n              )}\r\n            />\r\n            <Column title=\"Người tạo\" dataIndex=\"creator\" key=\"creator\"\r\n              render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )}\r\n            />\r\n            <Column title=\"Ngày tạo\" dataIndex=\"createDate\" key=\"createDate\"\r\n              render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )}\r\n            />\r\n            <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n              render={(text, record) => {\r\n                let color = 'pink'\r\n                if (text === 'deactive') {\r\n                  color = 'red'\r\n                } else if (text === 'active') {\r\n                  color = 'green'\r\n                } else if (text === 'pending') {\r\n                  color = 'blue'\r\n                } else if (text === 'waiting for customer') {\r\n                  color = 'pink'\r\n                } else if (text === 'rejected') {\r\n                  color = 'grey'\r\n                }\r\n                return (<Tag color={color} key={text}>\r\n                  {text.toUpperCase()}\r\n                </Tag>);\r\n              }}\r\n            />\r\n\r\n            <Column\r\n              title=\"Chọn file khác\"\r\n              key=\"Update\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  <UploadOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.handleChange}>Chọn file khác</UploadOutlined>\r\n                </Space>\r\n              )}\r\n            />\r\n            <Column\r\n              title=\"Vô hiệu hóa\"\r\n              dataIndex=\"status\"\r\n              key=\"status\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                  {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table></div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSubmit: (contractType) => {\r\n      dispatch(createContractType(contractType))\r\n    }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n    newContractType: state.myContractTypeReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContractTable)","export const contractTypeInformation = () => {\r\n    return {\r\n      type: 'LIST_contractType',\r\n    }\r\n  }\r\n  export const createContractType = (contractType) => {\r\n    \r\n    return {\r\n      type: 'CREATE_contractType',\r\n      contractType\r\n    }\r\n  }\r\n  export const updateContractType = (contractType) => {\r\n    return {\r\n      type: 'UPDATE_contractType',\r\n      contractType\r\n    }\r\n  }\r\n  export const deactiveContractType = (contractTypeID) => {\r\n    return {\r\n      type: 'DEACTIVE_contractType',\r\n      contractTypeID\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\n\r\nimport { Form, Input, Button, Checkbox,Divider,Row, Col } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass UpdateProfile extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin cá nhân</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default UpdateProfile;","import { Menu, Layout } from 'antd';\r\nimport { PageHeader, Avatar, Dropdown, Space } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport { Badge } from 'antd';\r\nimport { UserOutlined, SettingOutlined, BellOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { connect } from 'react-redux'\r\nimport { logout, login } from '../actions/loginAction'\r\nimport LoginPage from './Login/LoginPage'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showComponent: \"\",\r\n            logoutAction:false\r\n        };\r\n\r\n        this.Logout = this.Logout.bind(this);\r\n    }\r\n    Logout ()  {\r\n        this.setState({\r\n            logoutAction : true\r\n        })\r\n        this.props.onSubmit()\r\n        \r\n    }\r\n    render() {\r\n       \r\n\r\n        var information = this.props.myLoginReducer.map((login, index) => {\r\n\r\n            const notifications = (\r\n                <Menu >\r\n\r\n                    <Menu.Item  key=\"2\" >\r\n                       \r\n                      Some notifications\r\n             \r\n                    </Menu.Item>\r\n                   \r\n    \r\n                </Menu >\r\n            );\r\n            const menu = (\r\n                <Menu >\r\n\r\n                    <Menu.Item onClick={this.Logout} key=\"2\" icon={ <LogoutOutlined style={{ color: '#08c' }} key=\"1\" type=\"primary\" />} > \r\n                       \r\n                        Đăng xuất\r\n             \r\n                    </Menu.Item>\r\n                   \r\n    \r\n                </Menu >\r\n            );\r\n        return (<div>\r\n            <PageHeader\r\n                className=\"site-page-header\"\r\n                ghost={false}\r\n                title={[\r\n                ]}\r\n                extra={[\r\n                    <Dropdown overlay={notifications} placement=\"bottomCenter\" trigger={['click']}>\r\n                    <Badge count={1}><BellOutlined style={{ fontSize: '30px', color: '#08c' }} /></Badge>\r\n                    </Dropdown>,\r\n                    ,\r\n                    <Dropdown.Button overlay={menu} placement=\"bottomCenter\" icon={<SettingOutlined/>}>\r\n                        {login.username}\r\n                    </Dropdown.Button>\r\n\r\n                    ,\r\n                ]}\r\n            >\r\n\r\n            </PageHeader>\r\n        </div>);\r\n    })\r\n    if(this.state.logoutAction){\r\n        \r\n    }else{\r\n        return(<div> { information }</div >);\r\n    }\r\n    \r\n    }\r\n}\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: () => {\r\n            dispatch(logout())\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n    return {\r\n        myLoginReducer: state.myLoginReducer\r\n    }\r\n}\r\nexport default (connect(mapStateToProps, mapDispatchToProps))(Header);\r\n","export const loginInformation = () => {\r\n    return {\r\n      type: 'LIST_login',\r\n    }\r\n  }\r\n  export const addLogin = (login) => {\r\n    return {\r\n      type: 'ADD_login',\r\n      login\r\n    }\r\n  }\r\n  export const logout = () => {\r\n    return {\r\n      type: 'LOGOUT',\r\n      \r\n    }\r\n  }","import 'antd/dist/antd.css';\r\nimport { Menu, Layout } from 'antd';\r\nimport { PageHeader, Avatar, Descriptions, Space, Tag, Affix, Button } from 'antd';\r\nimport React from 'react';\r\nimport { Badge } from 'antd';\r\nimport UpdateProfileCompany from './UpdateProfileCompany'\r\nimport EmployeeTable from './EmployeeTable'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect,useHistory } from 'react-router-dom'\r\nimport SignatureList from './SignatureList'\r\nimport { UserOutlined, ToolOutlined, NotificationOutlined, LogoutOutlined, MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport ContractTable from './ContractTable'\r\nimport CustomerTable from './CustomerTable'\r\nimport ContractTypeTable from './ContractTypeTable'\r\nimport UpdateProfile from './UpdateProfile'\r\nimport Header from './Header'\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport { connect } from 'react-redux'\r\nimport './Column.css'\r\nimport LoginPage from './Login/LoginPage'\r\nconst IconFont = createFromIconfontCN({\r\n  scriptUrl: [\r\n    '//at.alicdn.com/t/font_1788044_0dwu4guekcwr.js', // icon-javascript, icon-java, icon-shoppingcart (overrided)\r\n    '//at.alicdn.com/t/font_1788592_a5xf2bdic3u.js', // icon-shoppingcart, icon-python\r\n  ],\r\n});\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\nclass EmployeeSideMenu extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      showComponent: \"\",\r\n      collapsed: false,\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n  handleClick = e => {\r\n\r\n    this.setState({\r\n      showComponent: e.key\r\n    })\r\n\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.myLoginReducer)\r\n    if (this.props.myLoginReducer !== \"logout\") {\r\n      console.log(this.props.myLoginReducer)\r\n      var information = this.props.myLoginReducer.map((login, index) => {\r\n        return (\r\n\r\n          <Layout style={{ height: \"100vh\" }}>\r\n\r\n            <Layout style={{ height: \"100vh\" }}>\r\n\r\n              <Sider width={250} className=\"site-layout-background\">\r\n\r\n                <IconFont type=\"icon-javascript\" style={{ fontSize: '60px', color: '#08c', marginLeft: \"40%\" }} />\r\n                <Descriptions size=\"small\" column={2}   >\r\n\r\n                  <Descriptions.Item><Avatar size={70} icon={<UserOutlined />} /> </Descriptions.Item>\r\n\r\n\r\n\r\n                  <Descriptions.Item><br />\r\n                    <b style={{ color: ' white' }}>{login.username}</b><br />\r\n\r\n                    <b style={{ color: ' white' }}>Company ABC</b>\r\n                  </Descriptions.Item>\r\n\r\n                </Descriptions>\r\n                <Button type=\"primary\" onClick={this.toggleCollapsed} style={{ marginBottom: 16 }}>\r\n                  {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}\r\n                </Button>\r\n                <Menu\r\n                  onClick={this.handleClick}\r\n                  title={[]}\r\n                  mode=\"inline\"\r\n                  theme=\"dark\"\r\n                  defaultSelectedKeys={[\"1\"]}\r\n                  defaultOpenKeys={[\"sub1\"]}\r\n                  style={{ height: \"100%\", borderRight: 0 }}\r\n                  inlineCollapsed={this.state.collapsed}\r\n                >\r\n                  <SubMenu key=\"sub1\" icon={<ToolOutlined />} title=\"Quản lý\">\r\n                    {login.contractManagePermision === true ? <Menu.Item key=\"contract\">danh sách hợp đồng</Menu.Item> : null}\r\n                    {login.customerManagePermission === true ? <Menu.Item key=\"customerList\">danh sách khách hàng</Menu.Item> : null}\r\n                    {login.contractTypeManagePermission === true ? <Menu.Item key=\"contractType\">danh sách loại hợp đồng</Menu.Item> : null}\r\n                    {login.employeeManagePermission === true ? <Menu.Item key=\"employee\">Nhân viên</Menu.Item> : null}\r\n                    {login.signatureManagePermission === true ? <Menu.Item key=\"signatureList\">Danh sách chữ ký</Menu.Item> : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                  </SubMenu>\r\n                  <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Thông tin cá nhân\">\r\n\r\n\r\n                    <Menu.Item key=\"profile\">Thông tin cá nhân</Menu.Item>\r\n                    {login.editCompanyInformationPermission === true ? <Menu.Item key=\"companyProfile\">Thông tin công ty</Menu.Item> : null}\r\n                  </SubMenu>\r\n                </Menu>\r\n              </Sider>\r\n              <Layout style={{ padding: \"0 24px 24px\", height: \"100vh\" }}>\r\n                <Affix onChange={(affixed) => console.log(affixed)}>\r\n                  <Header></Header>\r\n                </Affix>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {this.state.showComponent === \"customerList\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/customerList\" component={CustomerTable} />\r\n                  </Router>\r\n                  : null}\r\n                {this.state.showComponent === \"contract\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/contract\" render={() => <ContractTable role={login.signPermission} />\r\n                    } /></Router> : null}\r\n                {this.state.showComponent === \"contractType\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/contractType\" component={ContractTypeTable} /></Router> : null}\r\n                {this.state.showComponent === \"profile\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/profile\" component={UpdateProfile} /></Router> : null}\r\n                {this.state.showComponent === \"employee\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/employee\" component={EmployeeTable} /></Router> : null}\r\n                {this.state.showComponent === \"signatureList\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/signatureList\" component={SignatureList} /></Router> : null}\r\n\r\n                {this.state.showComponent === \"companyProfile\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/companyProfile\" component={UpdateProfileCompany} /></Router> : null}\r\n\r\n\r\n\r\n              </Layout>\r\n            </Layout>\r\n          </Layout>\r\n        );\r\n      })\r\n\r\n      if (this.props.myLoginReducer === \"Logout\") {\r\n\r\n       \r\n      } else {\r\n        return (<div style={{ height: \"100vh\" }}> {information}</div >);\r\n      }\r\n    } else {\r\n      \r\n    }\r\n\r\n\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n  console.log(state.myLoginReducer)\r\n  return {\r\n    myLoginReducer: state.myLoginReducer\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(EmployeeSideMenu);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ViewUser extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin tài khoản</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ViewUser;","import 'antd/dist/antd.css';\r\nimport { Table, Space, Tag } from 'antd';\r\nimport ViewUser from './ViewUser'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from './Header'\r\nimport { createUser, userInformation } from '../actions/UserAction'\r\nimport { connect } from 'react-redux'\r\nimport { UploadOutlined, FileOutlined, DeleteOutlined, UserOutlined, EditOutlined } from \"@ant-design/icons\"\r\nimport LoginPage from './Login/LoginPage'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\nclass UserList extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      openViewUser: false,\r\n\r\n    };\r\n\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newUser.length === 0) {\r\n      const contract1 = {\r\n\r\n        name: 'John',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"deactive\",\r\n        company: \"Some Company\",\r\n        role: \"Some role\",\r\n\r\n      }\r\n      const contract2 = {\r\n\r\n        name: 'Mike',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"active\",\r\n        company: \"Some Company\",\r\n        role: \"Some role\",\r\n\r\n      }\r\n\r\n      this.props.onSubmit(contract1)\r\n      this.props.onSubmit(contract2)\r\n\r\n    }\r\n\r\n  }\r\n  OpenViewUser() {\r\n    this.setState({\r\n      openViewUser: true,\r\n    })\r\n  }\r\n  render() {\r\n    if (this.state.openViewUser) {\r\n      return (<ViewUser />);\r\n    } else {\r\n      var information = this.props.myLoginReducer.map((login, index) => {\r\n        return (\r\n          <div style={{height: \"100vh\"}}>\r\n            <Header></Header>\r\n            <Table dataSource={this.props.newUser}\r\n              rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n\r\n              <Column title=\"Tên\" dataIndex=\"name\" key=\"name\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n              <Column title=\"email\" dataIndex=\"email\" key=\"email\" render={(text, record) => (\r\n\r\n                <a>{text}</a>\r\n\r\n              )} />\r\n              <Column title=\"địa chỉ\" dataIndex=\"address\" key=\"address\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n\r\n              <Column title=\"doanh nghiệp\" dataIndex=\"company\" key=\"company\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n              <Column title=\"chức vụ\" dataIndex=\"role\" key=\"role\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n              <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                render={(text, record) => {\r\n                  let color = 'pink'\r\n                  if (text === 'deactive') {\r\n                    color = 'red'\r\n                  } else if (text === 'active') {\r\n                    color = 'green'\r\n                  } else if (text === 'pending') {\r\n                    color = 'blue'\r\n                  } else if (text === 'waiting for customer') {\r\n                    color = 'pink'\r\n                  } else if (text === 'rejected') {\r\n                    color = 'grey'\r\n                  }\r\n                  return (<Tag color={color} key={text}>\r\n                    {text.toUpperCase()}\r\n                  </Tag>);\r\n                }}\r\n              />\r\n\r\n              <Column\r\n                title=\"Xem chi tiết\"\r\n                key=\"action\"\r\n                render={(text, record) => (\r\n                  <Space size=\"middle\">\r\n                    <EditOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Sửa</EditOutlined>\r\n                  </Space>\r\n                )}\r\n              />\r\n              <Column\r\n                title=\"Chức năng\"\r\n                dataIndex=\"status\"\r\n                key=\"status\"\r\n                render={(text, record) => (\r\n                  <Space size=\"middle\">\r\n                    {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                    {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                  </Space>\r\n                )}\r\n              />\r\n            </Table></div>\r\n        );\r\n      })\r\n      if (information.length === 0) {\r\n        return (<LoginPage />);\r\n      } else {\r\n        return (<div> {information}</div >);\r\n      }\r\n    }\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSubmit: (user) => {\r\n      dispatch(createUser(user))\r\n    }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n    newUser: state.myUserReducer,\r\n    myLoginReducer: state.myLoginReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport LoginPage from './Login/LoginPage'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 14,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass SendJoinRequest extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            finish: false,\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        this.setState({\r\n            finish: true,\r\n        })\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n        if (this.state.finish) {\r\n            return (<LoginPage />);\r\n        } else {\r\n\r\n\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <h2 style={{ textAlign: 'center' }}>Thông tin đăng ký</h2>\r\n                    <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                        <Col span={10} >\r\n                            <Grid container spacing={3}>\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"company\"\r\n                                        name=\"Tên doanh nghiệp\"\r\n                                        label=\"Tên doanh nghiệp\"\r\n                                        fullWidth\r\n                                        autoComplete=\"Tên doanh nghiệp\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"taxCode\"\r\n                                        name=\"Mã số thuế\"\r\n                                        label=\"Mã số thuế\"\r\n                                        fullWidth\r\n                                        autoComplete=\"family-name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"faxCode\"\r\n                                        name=\"số fax\"\r\n                                        label=\"số fax\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-line1\"\r\n                                    />\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"email\"\r\n                                        name=\"địa chỉ mail\"\r\n                                        label=\"địa chỉ mail\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-level2\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"address\"\r\n                                        name=\"địa chỉ\"\r\n                                        label=\"địa chỉ\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-line2\"\r\n                                    />\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"presentor\"\r\n                                        name=\"Người đại diện\"\r\n                                        label=\"Người đại diện\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping postal-code\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"role\"\r\n                                        name=\"chức vụ\"\r\n                                        label=\"chức vụ\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping country\"\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <div></div><br />\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Popup trigger={<Button type=\"primary\" >\r\n                                    Nộp\r\n                            </Button>} position=\"right center\">\r\n                                    <div>The sytem admin will contact you within 3 days</div>\r\n                                    <Button onClick={this.onFinish} type=\"primary\" >\r\n                                        Xác nhận\r\n                            </Button>\r\n                                </Popup>\r\n\r\n                                <Button type=\"primary\" style={{\r\n                                    margin: '0 8px',\r\n                                }} htmlType=\"button\">\r\n                                    Reset\r\n                            </Button>\r\n                            </Grid>\r\n                        </Col>\r\n                    </Row>\r\n                </React.Fragment>\r\n                // <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                //     <Col span={10} >\r\n                // <Form\r\n                //     {...layout}\r\n                //     name=\"basic\"\r\n                //     initialValues={{\r\n                //         remember: true,\r\n                //     }}\r\n                //     onFinish={this.onFinish}\r\n                //     onFinishFailed={this.onFinishFailed}\r\n                // >\r\n                //             <Form.Item\r\n                //                 label=\"Tên doanh nghiệp\"\r\n                //                 name=\"company\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n                //             <Form.Item\r\n                //                 label=\"Nguời đại diện\"\r\n                //                 name=\"presentor\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>   \r\n\r\n                //             <Form.Item\r\n                //                 label=\"Địa chỉ Email\"\r\n                //                 name=\"email\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n                //             <Form.Item\r\n                //                 label=\"Mã số thuế\"\r\n                //                 name=\"mst\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n                //             <Form.Item\r\n                //                 label=\"Địa chỉ\"\r\n                //                 name=\"address\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n\r\n\r\n                //             <Form.Item {...tailLayout}>\r\n                //                 <Button type=\"primary\" htmlType=\"submit\">\r\n                //                     Nộp\r\n                //                 </Button>\r\n                //                 <Button type=\"primary\" style={{\r\n                //                     margin: '0 8px',\r\n                //                 }} htmlType=\"button\">\r\n                //                     Reset\r\n                //                 </Button>\r\n\r\n                //             </Form.Item>\r\n\r\n                //         </Form>\r\n                //     </Col>\r\n                // </Row>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default SendJoinRequest;","export const userInformation = () => {\r\n  return {\r\n    type: 'LIST_user',\r\n  }\r\n}\r\nexport const createUser = (user) => {\r\n  \r\n  return {\r\n    type: 'CREATE_user',\r\n    user\r\n  }\r\n}\r\nexport const updateUser = (user) => {\r\n  return {\r\n    type: 'UPDATE_user',\r\n    user\r\n  }\r\n}\r\nexport const deactiveUser = (userID) => {\r\n  return {\r\n    type: 'DEACTIVE_user',\r\n    userID\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox,Col,Row } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ForgetPassword extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                <Col span={10} >\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={this.onFinishFailed}\r\n                \r\n            >\r\n                <Form.Item\r\n                    label=\"Địa chỉ Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Vui lòng nhập email',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n               \r\n\r\n\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Nộp\r\n                            </Button>\r\n                    \r\n                </Form.Item>\r\n\r\n            </Form></Col></Row>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ForgetPassword;","import React, { Component, useCallback } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { PageHeader, Space, Row, Col } from 'antd';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport EmployeeSideMenu from '../EmployeeSideMenu';\r\n\r\nimport UserTable from '../UserTable';\r\nimport SendJoinRequest from '../SendJoinRequest'\r\nimport ForgetPassword from '../ForgetPassword'\r\nimport { GoogleOutlined } from \"@ant-design/icons\"\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport { connect } from 'react-redux'\r\nimport { addLogin, login } from '../../actions/loginAction'\r\n\r\nconst IconFont = createFromIconfontCN({\r\n    scriptUrl: [\r\n        '//at.alicdn.com/t/font_1788044_0dwu4guekcwr.js', // icon-javascript, icon-java, icon-shoppingcart (overrided)\r\n        '//at.alicdn.com/t/font_1788592_a5xf2bdic3u.js', // icon-shoppingcart, icon-python\r\n    ],\r\n});\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n\r\n    },\r\n    wrapperCol: {\r\n        span: 14,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\nconst middleLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nconst userList = [\r\n    {\r\n        username: \"phu111\",\r\n        password: \"123\",\r\n\r\n    },\r\n    {\r\n        username: \"phu222\",\r\n        password: \"123\",\r\n\r\n    },\r\n    {\r\n        username: \"phu333\",\r\n        password: \"123\",\r\n\r\n    },\r\n    {\r\n        username: \"phu444\",\r\n        password: \"123\",\r\n\r\n    },\r\n\r\n]\r\nconst initialState = {\r\n    role: \"\",\r\n    othersPage: \"\",\r\n    user: \"\"\r\n}\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = { ...initialState }\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log(this.state.role)\r\n\r\n        for (var i = 0; i < userList.length; i++) {\r\n\r\n            if (values.username === userList[i].username) {\r\n                if (values.password === userList[i].password) {\r\n                    this.setState({\r\n\r\n                        user: values.username,\r\n                    })\r\n                    break;\r\n                } else {\r\n\r\n                }\r\n            } else {\r\n\r\n            }\r\n        }\r\n        console.log(this.state.role)\r\n        let loginInformation = {\r\n            username: this.state.user,\r\n            signPermission: true,\r\n            contractManagePermision: true,\r\n            customerManagePermission: true,\r\n            contractTypeManagePermission: true,\r\n            employeeManagePermission: true,\r\n            signatureManagePermission: true,\r\n            editCompanyInformationPermission: true,\r\n        }\r\n\r\n        this.props.onSubmit(loginInformation)\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n\r\n    };\r\n    ForgetPassword = () => {\r\n        this.setState({\r\n            othersPage: \"ForgetPassword\"\r\n        })\r\n    };\r\n    SendJoinRequest = () => {\r\n        this.setState({\r\n            othersPage: \"SendJoinRequest\"\r\n        })\r\n    };\r\n\r\n    responseGoogle = (response) => {\r\n\r\n    }\r\n    render() {\r\n\r\n        var information = this.props.myLoginReducer.map((login, index) => {\r\n\r\n            return (\r\n                <Router>\r\n                    <Redirect push to=\"/capstone/SideMenu\" />\r\n\r\n                    <Route exact path=\"/capstone/SideMenu\" component={EmployeeSideMenu} />\r\n                </Router>\r\n            );\r\n\r\n        })\r\n\r\n        if (information.length > 0) {\r\n            return (<div> { information}</div >);\r\n        } else {\r\n            if (this.state.othersPage === \"ForgetPassword\") {\r\n                return (\r\n                    <ForgetPassword />);\r\n\r\n            } else if (this.state.othersPage === \"SendJoinRequest\") {\r\n                return (\r\n                    <SendJoinRequest />);\r\n            } else {\r\n                return (\r\n                    <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                        \r\n                            <Redirect push to=\"/capstone/Login\" />\r\n\r\n                           \r\n                        \r\n                        <Col span={10} >\r\n                            <Form\r\n                                {...layout}\r\n                                name=\"basic\"\r\n                                className=\"login-form\"\r\n                                initialValues={{\r\n                                    remember: true,\r\n                                }}\r\n                                onFinish={this.onFinish}\r\n                                onFinishFailed={this.onFinishFailed}\r\n\r\n                            >\r\n                                <IconFont type=\"icon-javascript\" style={{ fontSize: '60px', color: '#08c', marginLeft: \"40%\" }} />\r\n                                <Form.Item\r\n                                    label=\"Tên người dùng\"\r\n                                    name=\"username\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Vui lòng nhập tên người dùng',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    label=\"Mật khẩu\"\r\n                                    name=\"password\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Vui lòng nhập Mật khẩu',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password />\r\n                                </Form.Item>\r\n                                <Form.Item {...middleLayout} name=\"remember\" valuePropName=\"checked\" >\r\n                                    <Checkbox>Ghi nhớ</Checkbox>\r\n                                    <Button type=\"link\" htmlType=\"button\"\r\n                                        onClick={this.ForgetPassword}\r\n                                    >\r\n                                        Quên mật khẩu\r\n                                </Button>\r\n                                </Form.Item>\r\n\r\n\r\n\r\n\r\n                                <Form.Item {...tailLayout}>\r\n                                    <Space size=\"large\">\r\n                                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                            Đăng nhập\r\n                                </Button>\r\n                                        <GoogleLogin\r\n                                            clientId=\"390380026430-evq67duag44ce10ro7o7vp3adal9q7bc.apps.googleusercontent.com\"\r\n                                            buttonText=\"Login\"\r\n                                            render={renderProps => (\r\n\r\n\r\n                                                <GoogleOutlined style={{ fontSize: '30px', color: '#08c' }} >\r\n                                                    Đăng nhập với google\r\n                                                </GoogleOutlined>\r\n                                            )}\r\n                                            onSuccess={this.responseGoogle}\r\n                                            onFailure={this.responseGoogle}\r\n                                            cookiePolicy={'single_host_origin'}\r\n                                        />\r\n\r\n                                        <Button type=\"link\" htmlType=\"button\"\r\n                                            onClick={this.SendJoinRequest}>\r\n                                            Gửi yêu cầu đăng ký\r\n                                </Button>\r\n                                    </Space>\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n\r\n                                </Form.Item>\r\n\r\n\r\n\r\n\r\n                            </Form>\r\n\r\n                        </Col></Row>\r\n\r\n                );\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (login) => {\r\n            dispatch(addLogin(login))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n    return {\r\n        myLoginReducer: state.myLoginReducer,\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","import React from 'react';\n\nimport './App.css';\nimport LoginPage from './JsPage/Login/LoginPage'\nimport Particles from 'react-particles-js';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nfunction App() {\n\n  return (\n    <div >\n      <Particles\n        style={{ position: \"absolute\" }}\n        height=\"95%\"\n        width=\"95%\"\n        params={{\n          particles: {\n            color: {\n              value: \"#000000\"\n            },\n            line_linked: {\n              color: {\n                value: \"#000000\"\n              }\n            },\n            number: {\n              value: 50\n            },\n            size: {\n              value: 3\n            }\n          }\n        }}\n      />\n      <Router>\n\n\n        <Route exact path=\"/capstone\" component={LoginPage} />\n        <Route exact path=\"/capstone/\" component={LoginPage} />\n        <Route exact path=\"/capstone/Login\" component={LoginPage} />\n\n\n      </Router>\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var initialState = [];\r\nconst myLoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LIST_login':\r\n      return state;\r\n    case 'ADD_login':\r\n      state.pop()\r\n      state.push(action.login)\r\n      return [...state];\r\n    case 'LOGOUT':\r\n      \r\n      state.pop()\r\n      \r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default myLoginReducer;","var initialState = [];\r\nconst myContractReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_contract':\r\n            return state;\r\n        case 'CREATE_contract':\r\n            state.push(action.contract)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_contract':\r\n            state.push(action.contract)\r\n            return [...state];\r\n        case 'DEACTIVE_contract':\r\n            state.push(action.contractID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myContractReducer;","var initialState = [];\r\nconst myContractExtensionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_contractExtension':\r\n            return state;\r\n        case 'CREATE_contractExtension':\r\n            state.push(action.contractExtension)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_contractExtension':\r\n            state.push(action.contractExtension)\r\n            return [...state];\r\n        case 'DEACTIVE_contractExtension':\r\n            state.push(action.contractExtensionID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myContractExtensionReducer;","var initialState = [];\r\nconst myCustomerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_customer':\r\n            return state;\r\n        case 'CREATE_customer':\r\n            state.push(action.customer)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_customer':\r\n            state.push(action.customer)\r\n            return [...state];\r\n        case 'DEACTIVE_customer':\r\n            state.push(action.customerID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myCustomerReducer;","var initialState = [];\r\nconst myContractTypeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_contractType':\r\n            return state;\r\n        case 'CREATE_contractType':\r\n            state.push(action.contractType)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_contractType':\r\n            state.push(action.contractType)\r\n            return [...state];\r\n        case 'DEACTIVE_contractType':\r\n            state.push(action.contractTypeID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myContractTypeReducer;","var initialState = [];\r\nconst myUserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_user':\r\n            return state;\r\n        case 'CREATE_user':\r\n            state.push(action.user)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_user':\r\n            state.push(action.user)\r\n            return [...state];\r\n        case 'DEACTIVE_user':\r\n            state.push(action.userID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myUserReducer;","var initialState = [];\r\nconst mySignatureReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_signature':\r\n            return state;\r\n        case 'CREATE_signature':\r\n            state.push(action.signature)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_signature':\r\n            state.push(action.signature)\r\n            return [...state];\r\n        case 'DEACTIVE_signature':\r\n            state.push(action.signatureID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default mySignatureReducer;","var initialState = [];\r\nconst myEmployeeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_employee':\r\n            return state;\r\n        case 'CREATE_employee':\r\n            state.push(action.employee)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_employee':\r\n            state.push(action.employee)\r\n            return [...state];\r\n        case 'DEACTIVE_employee':\r\n            state.push(action.employeeID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myEmployeeReducer;","import { combineReducers } from 'redux'\r\nimport myLoginReducer from './logins'\r\nimport myContractReducer from'./contracts'\r\nimport myContractExtensionReducer from './contractExtensions'\r\nimport myCustomerReducer from'./customers'\r\nimport myContractTypeReducer from './contractTypes'\r\nimport myUserReducer from './users'\r\nimport mySignatureReducer from'./signatures'\r\nimport myEmployeeReducer from './employees'\r\nconst myReducers  = combineReducers({\r\n    myLoginReducer,\r\n    myContractReducer,\r\n    myContractExtensionReducer,\r\n    myCustomerReducer,\r\n    myContractTypeReducer,\r\n    myUserReducer,\r\n    mySignatureReducer,\r\n    myEmployeeReducer,\r\n});\r\nexport default myReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore } from \"redux\"\nimport allReducers from \"./reducers/myReducers\"\nimport { BrowserRouter } from 'react-router-dom'\nconst store = createStore(allReducers)\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}