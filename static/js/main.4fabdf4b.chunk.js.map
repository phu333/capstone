{"version":3,"sources":["JsPage/UpdateProfileCompany.js","actions/EmployeeAction.js","JsPage/AddEmployee.js","JsPage/ViewEmployee.js","JsPage/EmployeeSearch.js","JsPage/EmployeeTable.js","actions/SignatureAction.js","JsPage/AddSignature.js","JsPage/UpdateSignature.js","JsPage/SignatureSearch.js","JsPage/SignatureList.js","JsPage/ContractSearch.js","actions/ContractAction.js","JsPage/CreateContract.js","JsPage/ContractTypeSearch.js","JsPage/ChooseContractTemplate.js","JsPage/AddContractExtension.js","JsPage/UpdateContractExtension.js","JsPage/ContractExtensionTable.js","actions/ContractExtension.js","JsPage/ViewContractPage.js","JsPage/ContractTable.js","actions/CustomerAction.js","JsPage/AddCustomer.js","JsPage/ViewCustomer.js","JsPage/CustomerSearch.js","JsPage/CustomerTable.js","JsPage/TemplateUpload.js","JsPage/ContractTypeTable.js","actions/ContractType.js","JsPage/UpdateProfile.js","JsPage/Header.js","actions/loginAction.js","JsPage/EmployeeSideMenu.js","JsPage/ViewUser.js","JsPage/UserTable.js","JsPage/SendJoinRequest.js","actions/UserAction.js","JsPage/ForgetPassword.js","JsPage/Login/LoginPage.js","App.js","serviceWorker.js","reducers/logins.js","reducers/contracts.js","reducers/contractExtensions.js","reducers/customers.js","reducers/contractTypes.js","reducers/users.js","reducers/signatures.js","reducers/employees.js","reducers/myReducers.js","index.js"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","UpdateProfileCompany","onFinish","values","console","log","onFinishFailed","errorInfo","state","bind","style","margin","width","paddingLeft","border","type","value","onClick","this","Cancel","textAlign","name","initialValues","remember","labelAlign","Item","label","IdcardOutlined","rules","required","message","MailOutlined","requiredMark","BankOutlined","HomeOutlined","htmlType","CloudUploadOutlined","RedoOutlined","React","Component","createEmployee","employee","AddEmployee","props","onSubmit","email","address","status","role","setState","finish","onChange","e","target","i","checked","Fragment","Grid","container","spacing","item","xs","TextField","id","fullWidth","autoComplete","sm","FormControlLabel","control","Checkbox","trigger","position","ReloadOutlined","connect","dispatch","ViewEmployee","Option","Select","EmployeeSearch","SearchBy","handleChange","dateString","className","title","size","extra","defaultValue","shape","icon","SearchOutlined","Column","Table","EmployeeList","ColumnGroup","openEmployee","OpenAddEmployee","OpenViewEmployee","newEmployee","length","push","to","exact","path","component","render","height","UserAddOutlined","dataSource","rowClassName","record","index","dataIndex","key","text","color","toUpperCase","EyeOutlined","fontSize","theme","DeleteOutlined","UserOutlined","myEmployeeReducer","createSignature","signature","AddSignature","provider","expired","justify","align","UpdateSignature","SignatureSearch","ref","SignatureList","openSignature","OpenAddSignature","newSignature","serial","mySignatureReducer","RangePicker","DatePicker","ContractSearch","formatter","replace","parser","showTime","format","onOk","createContract","contract","CreateContract","contract_name","ben_tao_hd","ben_tham_gia","nguoi_tao_hd","deadline","ShowCustomer","showContent","ShowContent","TheChooseOne","Name","MST","Address","Email","Owner","currentPage","products","product_name","unit","quantitve","price","direction","column","PhoneOutlined","PrinterOutlined","ContactsOutlined","viewContract","current","total","page","ContractTypeSearch","contract_type","fileName","ChooseContractTemplate","showTemplateCreate","FileOutlined","AddContractExtension","option","NewContent","ChooseOption","contractId","backgroundColor","order","UpdateContractExtension","openCommentSection","OpenCommentSection","ContractExtensionTable","showCreateContractExtension","showContractExtension","onOpenCreateContractExtension","viewContractExtension","newContractExtension","FileAddOutlined","ContainerOutlined","FormOutlined","myContractExtensionReducer","contractExtension","createcontractExtension","TextArea","Input","CommentList","comments","header","itemLayout","renderItem","ContractView","handleSubmit","submitting","setTimeout","author","content","datetime","moment","fromNow","onFinishComment","onFinishCommenFailt","openExtension","OpenExtension","Editor","onFinishCommentFailed","rows","loading","avatar","src","alt","ContractTable","showCreateContract","showContract","onOpenCreateContract","newContract","ViewContractPage","UploadOutlined","myContractReducer","createCustomer","customer","AddCustomer","company","CustomerTable","CustomerSearch","CustomerList","openCustomer","OpenAddCustomer","newCustomer","taxCode","faxCode","phone","sorter","a","b","localeCompare","sortDirections","OpenViewCustomer","myCustomerReducer","TemplateUpload","approvalBeforeSign","approverList","ChooseApproval","concat","httpEquiv","rel","href","data-styled","data-styled-version","dangerouslySetInnerHTML","__html","stroke","fill","strokeWidth","viewBox","xmlns","d","newContractType","creator","createDate","FileWordOutlined","myContractTypeReducer","contractType","createContractType","UpdateProfile","Header","showComponent","logoutAction","Logout","information","myLoginReducer","map","login","notifications","menu","LogoutOutlined","ghost","overlay","placement","count","BellOutlined","Button","SettingOutlined","username","IconFont","createFromIconfontCN","scriptUrl","SubMenu","Menu","Sider","Layout","Content","EmployeeSideMenu","toggleCollapsed","collapsed","handleClick","marginLeft","marginBottom","createElement","MenuUnfoldOutlined","MenuFoldOutlined","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","inlineCollapsed","ToolOutlined","contractManagePermision","customerManagePermission","contractTypeManagePermission","employeeManagePermission","signatureManagePermission","editCompanyInformationPermission","padding","affixed","signPermission","ContractTypeTable","EmployeeTable","ViewUser","UserList","openViewUser","newUser","EditOutlined","SendJoinRequest","myUserReducer","user","createUser","ForgetPassword","middleLayout","userList","password","initialState","othersPage","LoginPage","loginInformation","responseGoogle","response","Password","valuePropName","clientId","buttonText","renderProps","GoogleOutlined","onSuccess","onFailure","cookiePolicy","addLogin","App","params","particles","line_linked","number","Boolean","window","location","hostname","match","action","pop","contractID","contractExtensionID","customerID","contractTypeID","userID","signatureID","employeeID","myReducers","combineReducers","store","createStore","allReducers","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4fabdf4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass UpdateProfileCompany extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin doanh nghiệp</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default UpdateProfileCompany;","export const employeeInformation = () => {\r\n  return {\r\n    type: 'LIST_employee',\r\n  }\r\n}\r\nexport const createEmployee = (employee) => {\r\n  \r\n  return {\r\n    type: 'CREATE_employee',\r\n    employee\r\n  }\r\n}\r\nexport const updateEmployee = (employee) => {\r\n  return {\r\n    type: 'UPDATE_employee',\r\n    employee\r\n  }\r\n}\r\nexport const deactiveEmployee = (employeeID) => {\r\n  return {\r\n    type: 'DEACTIVE_employee',\r\n    employeeID\r\n  }\r\n}","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { createEmployee, employeeInformation } from '../actions/EmployeeAction'\r\nimport { connect } from 'react-redux'\r\nimport { Space, Card, Button, Row, Col } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined, ReloadOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport \"./Column.css\"\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass AddEmployee extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            finish: false\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n\r\n        const contract1 = {\r\n\r\n            name: 'Mike',\r\n            email: \"some email\",\r\n            address: '10 Downing Street',\r\n            status: \"active\",\r\n            role: \"secretery\"\r\n\r\n        }\r\n\r\n\r\n        this.props.onSubmit(contract1)\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    Cancel = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n    }\r\n    render() {\r\n\r\n\r\n        var i = 0;\r\n        function onChange(e) {\r\n            if (e.target == \"checked\") { i--; }\r\n            else { i++ }\r\n            console.log(`checked = ${e.target.checked}`);\r\n        }\r\n        function requirement() { if (i == 0) { } }\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <br />\r\n                <h2 style={{ textAlign: 'center' }}>Tạo nhân viên</h2>\r\n                \r\n                        <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                                \r\n                                <TextField\r\n                                    id=\"name\"\r\n                                    name=\"tên\"\r\n                                    label=\"tên\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                \r\n                                <TextField\r\n                                    id=\"username\"\r\n                                    name=\"tên đăng nhập\"\r\n                                    label=\"tên đăng nhập\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12}>\r\n                                \r\n                                <TextField\r\n                                    id=\"password\"\r\n                                    name=\"mật khẩu\"\r\n                                    label=\"mật khẩu\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                \r\n                                <TextField\r\n                                    id=\"email\"\r\n                                    name=\"địa chỉ mail\"\r\n                                    label=\"địa chỉ mail\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"address\"\r\n                                    name=\"địa chỉ\"\r\n                                    label=\"địa chỉ\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-line2\"\r\n                                />\r\n                            </Grid>\r\n\r\n\r\n                            \r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"role\"\r\n                                    name=\"chức vụ\"\r\n                                    label=\"chức vụ\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping postal-code\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <b>Quyền Hạn</b>\r\n                                <br />\r\n                                <Row>\r\n                                    <Col span={8}>\r\n                                        <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"ký\"\r\n                                        />\r\n                                       \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý hợp đồng\"\r\n                                        />\r\n                                       \r\n                                        \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý nhân viên\"\r\n                                        />\r\n                                       \r\n                                       \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý loại hợp đồng\"\r\n                                        />\r\n                                       \r\n                                        \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý chữ ký\"\r\n                                        />\r\n                                       \r\n                                        \r\n                                        <p></p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <div></div><br />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Popup trigger={<Button type=\"primary\" >\r\n                                <CloudUploadOutlined />  Nộp\r\n                            </Button>} position=\"right center\">\r\n                                <div>The sytem admin will contact you within 3 days</div>\r\n                                <Button onClick={this.onFinish} type=\"primary\" >\r\n                                    Xác nhận\r\n                            </Button>\r\n                            </Popup>\r\n\r\n                            <Button type=\"primary\" style={{\r\n                                margin: '0 8px',\r\n                            }} htmlType=\"button\">\r\n                                <ReloadOutlined />   Reset\r\n                            </Button>\r\n                            <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                                Trở về\r\n              </Button>\r\n                        </Grid>\r\n                    \r\n            </React.Fragment >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (employee) => {\r\n            dispatch(createEmployee(employee))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddEmployee);","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { createEmployee, employeeInformation } from '../actions/EmployeeAction'\r\nimport { connect } from 'react-redux'\r\nimport { Space, Card, Button, Row, Col } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined, ReloadOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport \"./Column.css\"\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ViewEmployee extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n        console.log(\"Here\")\r\n        var i = 0;\r\n        function onChange(e) {\r\n            if (e.target == \"checked\") { i--; }\r\n            else { i++ }\r\n            console.log(`checked = ${e.target.checked}`);\r\n        }\r\n        function requirement() { if (i == 0) { } }\r\n        return (\r\n            \r\n            <React.Fragment>\r\n                <br />\r\n                <h2 style={{ textAlign: 'center' }}>thông tin nhân viên</h2>\r\n                \r\n                <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                                \r\n                                <TextField\r\n                                    id=\"name\"\r\n                                    name=\"tên\"\r\n                                    label=\"tên\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                \r\n                                <TextField\r\n                                    id=\"username\"\r\n                                    name=\"tên đăng nhập\"\r\n                                    label=\"tên đăng nhập\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12}>\r\n                                \r\n                                <TextField\r\n                                    id=\"password\"\r\n                                    name=\"mật khẩu\"\r\n                                    label=\"mật khẩu\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                \r\n                                <TextField\r\n                                    id=\"email\"\r\n                                    name=\"địa chỉ mail\"\r\n                                    label=\"địa chỉ mail\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"address\"\r\n                                    name=\"địa chỉ\"\r\n                                    label=\"địa chỉ\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-line2\"\r\n                                />\r\n                            </Grid>\r\n\r\n\r\n                            \r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"role\"\r\n                                    name=\"chức vụ\"\r\n                                    label=\"chức vụ\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping postal-code\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <b>Quyền Hạn</b>\r\n                                <br />\r\n                                <Row>\r\n                                    <Col span={8}>\r\n                                        <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"ký\"\r\n                                        />\r\n                                       \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý hợp đồng\"\r\n                                        />\r\n                                       \r\n                                        \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý nhân viên\"\r\n                                        />\r\n                                       \r\n                                       \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý loại hợp đồng\"\r\n                                        />\r\n                                       \r\n                                        \r\n                                        <p></p>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                    <FormControlLabel \r\n                                        control={ <Checkbox onChange={onChange} ></Checkbox>} \r\n                                        label=\"Quản lý chữ ký\"\r\n                                        />\r\n                                       \r\n                                        \r\n                                        <p></p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <div></div><br />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Popup trigger={<Button type=\"primary\" >\r\n                                <CloudUploadOutlined />  Nộp\r\n                            </Button>} position=\"right center\">\r\n                                <div>The sytem admin will contact you within 3 days</div>\r\n                                <Button onClick={this.onFinish} type=\"primary\" >\r\n                                    Xác nhận\r\n                            </Button>\r\n                            </Popup>\r\n\r\n                            <Button type=\"primary\" style={{\r\n                                margin: '0 8px',\r\n                            }} htmlType=\"button\">\r\n                                <ReloadOutlined />   Reset\r\n                            </Button>\r\n                            <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                                Trở về\r\n              </Button>\r\n                        </Grid>\r\n                    \r\n            </React.Fragment >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ViewEmployee;","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Select, DatePicker, Button, Space, Breadcrumb, PageHeader, Input, InputNumber, Form } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Option } = Select;\r\nclass EmployeeSearch extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            SearchBy: \"SearchByName\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({\r\n            SearchBy: value\r\n        })\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values)\r\n\r\n\r\n    };\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n\r\n                    title={[<Space size=\"large\">\r\n\r\n                        {this.state.SearchBy === \"SearchByStatus\" ?\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n\r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb> : null}\r\n\r\n                    </Space>]}\r\n                    extra={[\r\n\r\n                        <Form\r\n                            name=\"basic\"\r\n                            className=\"search-form\"\r\n                            initialValues={{\r\n                                remember: true,\r\n                            }}\r\n                            onFinish={this.onFinish}\r\n                            onFinishFailed={this.onFinishFailed}>\r\n                            <Space size=\"large\">\r\n                                <Select defaultValue=\"SearchByName\" onChange={this.handleChange}>\r\n                                    <Option value=\"SearchByPhone\">tìm kiếm theo số điện thoại</Option>\r\n                                    <Option value=\"SearchByName\">tìm kiếm theo tên </Option>\r\n\r\n                                    <Option value=\"SearchByStatus\">tìm kiếm theo trạng thái</Option>\r\n\r\n\r\n                                </Select>\r\n                                {this.state.SearchBy === \"SearchByName\" ?\r\n                                    <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByPhone\" ? <> <Input name=\"searchValue\" />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></> : null}\r\n\r\n\r\n\r\n                            </Space>\r\n                        </Form>\r\n                    ]}\r\n                >\r\n\r\n\r\n\r\n                </PageHeader>\r\n\r\n            </div>);\r\n    }\r\n}\r\nexport default EmployeeSearch;","import 'antd/dist/antd.css';\r\nimport { Table, Space, Tag, Button } from 'antd';\r\nimport AddEmployee from './AddEmployee'\r\nimport ViewEmployee from './ViewEmployee'\r\nimport React from 'react';\r\nimport './Column.css'\r\nimport ReactDOM from 'react-dom';\r\nimport EmployeeSearch from './EmployeeSearch'\r\nimport { createEmployee, employeeInformation } from '../actions/EmployeeAction'\r\nimport { connect } from 'react-redux'\r\nimport { UserAddOutlined, EditOutlined, DeleteOutlined, UserOutlined,EyeOutlined } from \"@ant-design/icons\"\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\nclass EmployeeList extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n\r\n      employee: {},\r\n      openEmployee: \"\",\r\n\r\n    };\r\n    this.OpenAddEmployee = this.OpenAddEmployee.bind(this);\r\n    this.OpenViewEmployee = this.OpenViewEmployee.bind(this);\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newEmployee.length === 0) {\r\n      const contract1 = {\r\n\r\n        name: 'Mike',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"active\",\r\n        role: \"director\"\r\n\r\n      }\r\n      const contract2 = {\r\n\r\n        name: 'John',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"deactive\",\r\n        role: \"secrectery\"\r\n\r\n      }\r\n\r\n      this.props.onSubmit(contract1)\r\n      this.props.onSubmit(contract2)\r\n\r\n    }\r\n\r\n  }\r\n  OpenAddEmployee() {\r\n    this.setState({\r\n      openEmployee: \"openAddEmployee\",\r\n    })\r\n  }\r\n  OpenViewEmployee() {\r\n    this.setState({\r\n      openEmployee: \"openViewEmployee\",\r\n    })\r\n  }\r\n  render() {\r\n    if (this.state.openEmployee === \"openAddEmployee\") {\r\n      return (\r\n        <Router>\r\n          <Redirect push to={\"/capstone/addEmployee\"} />\r\n          <Route exact path=\"/capstone/addEmployee\" component={AddEmployee} /></Router>\r\n      );\r\n    } else if (this.state.openEmployee === \"openViewEmployee\") {\r\n      return (\r\n        <Router>\r\n          <Redirect push to={\"/capstone/updateEmployee/\" + this.state.employee.name} />\r\n      <Route exact path=\"/capstone/updateEmployee/:id\" render={() => <ViewEmployee employee={this.state.employee} />} />\r\n\r\n          </Router>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div style={{ height: \"100vh\" }}><Button type=\"primary\" onClick={this.OpenAddEmployee} icon={<UserAddOutlined />}>Tạo nhân viên mới</Button>\r\n          <EmployeeSearch />\r\n          <Table dataSource={this.props.newEmployee}\r\n            rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n\r\n            <Column title=\"Tên\" dataIndex=\"name\" key=\"name\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"email\" dataIndex=\"email\" key=\"email\" render={(text, record) => (\r\n\r\n              <a>{text}</a>\r\n\r\n            )} />\r\n            <Column title=\"Địa chỉ\" dataIndex=\"address\" key=\"address\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n              render={(text, record) => {\r\n                let color = 'pink'\r\n                if (text === 'deactive') {\r\n                  color = 'red'\r\n                } else if (text === 'active') {\r\n                  color = 'green'\r\n                } else if (text === 'pending') {\r\n                  color = 'blue'\r\n                } else if (text === 'waiting for customer') {\r\n                  color = 'pink'\r\n                } else if (text === 'rejected') {\r\n                  color = 'grey'\r\n                }\r\n                return (<Tag color={color} key={text}>\r\n                  {text.toUpperCase()}\r\n                </Tag>);\r\n              }}\r\n            />\r\n            <Column title=\"chức vụ\" dataIndex=\"role\" key=\"role\" />\r\n            <Column\r\n              title=\"Xem chi tiết\"\r\n              key=\"action\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  <EyeOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={\r\n                    () => this.setState({\r\n                      employee: text,\r\n                      openEmployee: \"openViewEmployee\",\r\n                    })\r\n                  } />\r\n                </Space>\r\n              )}\r\n            />\r\n            <Column\r\n              title=\"Chức năng\"\r\n              dataIndex=\"status\"\r\n              key=\"status\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" >Vô hiệu hóa</DeleteOutlined> : null}\r\n                  {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\">kích hoạt</UserOutlined> : null}\r\n                </Space>\r\n              )}\r\n            /></Table></div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSubmit: (employee) => {\r\n      dispatch(createEmployee(employee))\r\n    }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n    newEmployee: state.myEmployeeReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList)","export const signatureInformation = () => {\r\n  return {\r\n    type: 'LIST_signature',\r\n  }\r\n}\r\nexport const createSignature = (signature) => {\r\n  \r\n  return {\r\n    type: 'CREATE_signature',\r\n    signature\r\n  }\r\n}\r\nexport const updateSignature = (signature) => {\r\n  return {\r\n    type: 'UPDATE_signature',\r\n    signature\r\n  }\r\n}\r\nexport const deactiveSignature = (signatureID) => {\r\n  return {\r\n    type: 'DEACTIVE_signature',\r\n    signatureID\r\n  }\r\n}","import React from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { createSignature, signatureInformation } from '../actions/SignatureAction'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Input, Button,Row,Col } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass AddSignature extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            finish: false\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        const contract1 = {\r\n\r\n            name: 'Mike',\r\n            email: \"some email\",\r\n            provider: 'Viettel',\r\n            status: \"active\",\r\n            expired: 2022\r\n\r\n        }\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n        this.props.onSubmit(contract1)\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    Cancel = () =>{\r\n        this.setState({\r\n            finish: true\r\n        })\r\n    }\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin chữ ký</h2>\r\n                <React.Fragment>\r\n                <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                    <Col span={10} >\r\n                        <Grid container spacing={3}>\r\n                            \r\n                               \r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"serial\"\r\n                                        name=\"số serial\"\r\n                                        label=\"số serial\"\r\n                                        fullWidth\r\n                                        autoComplete=\"number\"\r\n                                    />\r\n                                </Grid> \r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"startDate\"\r\n                                        name=\"startDate\"\r\n                                        label=\"Ngày cấp\"\r\n                                        fullWidth\r\n                                        autoComplete=\"date\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"expiredDate\"\r\n                                        name=\"Ngày hết hạn\"\r\n                                        label=\"Ngày hết hạn\"\r\n                                        fullWidth\r\n                                        autoComplete=\"date\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"provider\"\r\n                                        name=\"nhà cung cấp chữ ký\"\r\n                                        label=\"nhà cung cấp chữ ký\"\r\n                                        fullWidth\r\n                                        autoComplete=\"nhà cung cấp chữ ký\"\r\n                                    />\r\n                                </Grid>\r\n                                \r\n                           \r\n                        </Grid>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n                \r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (signature) => {\r\n            dispatch(createSignature(signature))\r\n        }\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps) (AddSignature);","import React from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { createSignature, signatureInformation } from '../actions/SignatureAction'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass UpdateSignature extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n        console.log(\"Here\")\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft: \"50px\",\r\n                border: \"solid\"\r\n            }\r\n            }>\r\n                \r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                    Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin chữ ký</h2>\r\n                <React.Fragment>\r\n                    <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                        <Col span={10} >\r\n                            <Grid container spacing={3}>\r\n\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"serial\"\r\n                                        name=\"số serial\"\r\n                                        label=\"số serial\"\r\n                                        fullWidth\r\n                                        autoComplete=\"number\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"startDate\"\r\n                                        name=\"startDate\"\r\n                                        label=\"Ngày cấp\"\r\n                                        fullWidth\r\n                                        autoComplete=\"date\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"expiredDate\"\r\n                                        name=\"Ngày hết hạn\"\r\n                                        label=\"Ngày hết hạn\"\r\n                                        fullWidth\r\n                                        autoComplete=\"date\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"provider\"\r\n                                        name=\"nhà cung cấp chữ ký\"\r\n                                        label=\"nhà cung cấp chữ ký\"\r\n                                        fullWidth\r\n                                        autoComplete=\"nhà cung cấp chữ ký\"\r\n                                    />\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Col>\r\n                    </Row>\r\n                </React.Fragment>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default UpdateSignature;","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Space, Breadcrumb, PageHeader } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nclass SignatureSearch extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n\r\n\r\n\r\n                <br />\r\n                <div className=\"container\">\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n\r\n                        title={[<Space size=\"large\">\r\n\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n                              \r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n\r\n                        </Space>]}\r\n                        extra={[\r\n\r\n                            <Space size=\"large\">\r\n                                <input ref=\"searchInput\" />\r\n                                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Space>\r\n                        ]}\r\n                    >\r\n\r\n\r\n\r\n                    </PageHeader>\r\n\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\nexport default SignatureSearch;","import 'antd/dist/antd.css';\r\nimport { Table, Space, Button, Tag } from 'antd';\r\nimport AddSignature from './AddSignature'\r\nimport UpdateSignature from './UpdateSignature'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport SignatureSearch from './SignatureSearch'\r\nimport { createSignature, signatureInformation } from '../actions/SignatureAction'\r\nimport { connect } from 'react-redux'\r\nimport { UserAddOutlined, EditOutlined, DeleteOutlined, UserOutlined,EyeOutlined } from \"@ant-design/icons\"\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\nclass SignatureList extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            dataSource: [\r\n                {\r\n                    key: '1',\r\n                    name: 'Mike',\r\n                    email: \"some email\",\r\n                    provider: '10 Downing Street',\r\n                    status: \"active\",\r\n                    expired: 2022\r\n                },\r\n                {\r\n                    key: '2',\r\n                    name: 'John',\r\n                    email: \"some email\",\r\n                    provider: '10 Downing Street',\r\n                    status: \"active\",\r\n                    expired: 2022\r\n                },\r\n            ],\r\n            openSignature: \"\",\r\n            signature:{},\r\n\r\n        };\r\n        this.OpenAddSignature = this.OpenAddSignature.bind(this);\r\n        \r\n    }\r\n    componentDidMount() {\r\n\r\n        if (this.props.newSignature.length === 0) {\r\n            const contract1 = {\r\n                serial:123123123123123123,\r\n                name: 'Mike',\r\n                email: \"some email\",\r\n                provider: 'Viettel',\r\n                status: \"active\",\r\n                expired: 2022\r\n\r\n            }\r\n            const contract2 = {\r\n                serial:123123123123123123,\r\n                name: 'John',\r\n                email: \"some email\",\r\n                provider: 'Fpt',\r\n                status: \"deactive\",\r\n                expired: 2022\r\n\r\n            }\r\n\r\n            this.props.onSubmit(contract1)\r\n            this.props.onSubmit(contract2)\r\n\r\n        }\r\n\r\n    }\r\n    OpenAddSignature() {\r\n        this.setState({\r\n            openSignature: \"openAddSignature\",\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.openSignature === \"openAddSignature\") {\r\n\r\n            return (\r\n                <Router>\r\n                    <Redirect push to={\"/capstone/addSignature\"} />\r\n                    <Route exact path=\"/capstone/addSignature\" component={AddSignature} /></Router>\r\n            );\r\n        } else if (this.state.openSignature === \"openViewSignature\") {\r\n            return (\r\n                <Router>\r\n                    <Redirect push to={\"/capstone/updateSignature/\" + this.state.signature.serial} />\r\n                    <Route exact path=\"/capstone/updateSignature/:id\" render={() => <UpdateSignature signature={this.state.signature} />} />\r\n\r\n                </Router>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ height: \"100vh\" }}><Button type=\"primary\" onClick={this.OpenAddSignature} icon={<UserAddOutlined />}>Thêm chữ ký mới</Button>\r\n                    <SignatureSearch />\r\n                    <Table dataSource={this.props.newSignature}\r\n                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n\r\n                       \r\n\r\n                        <Column title=\"Nhà cung cấp\" dataIndex=\"provider\" key=\"provider\" />\r\n\r\n                        <Column title=\"Ngày hết hạn\" dataIndex=\"expired\" key=\"expired\" />\r\n                        <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                            render={(text, record) => {\r\n                                let color = 'pink'\r\n                                if (text === 'deactive') {\r\n                                    color = 'red'\r\n                                } else if (text === 'active') {\r\n                                    color = 'green'\r\n                                } else if (text === 'pending') {\r\n                                    color = 'blue'\r\n                                } else if (text === 'waiting for customer') {\r\n                                    color = 'pink'\r\n                                } else if (text === 'rejected') {\r\n                                    color = 'grey'\r\n                                }\r\n                                return (<Tag color={color} key={text}>\r\n                                    {text.toUpperCase()}\r\n                                </Tag>);\r\n                            }}\r\n                        />\r\n\r\n                        <Column\r\n                            title=\"Xem chi tiết\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n                                <Space size=\"middle\">\r\n                                   <EyeOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={\r\n                                    () => this.setState({\r\n                                        signature: text,\r\n                                        openSignature: \"openViewSignature\",\r\n                                    })\r\n                                } />\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"Chức năng\"\r\n                            dataIndex=\"status\"\r\n                            key=\"status\"\r\n                            render={(text, record) => (\r\n                                <Space size=\"middle\">\r\n                                    {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" >Vô hiệu hóa</DeleteOutlined> : null}\r\n                                    {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" >kích hoạt</UserOutlined> : null}\r\n                                </Space>\r\n                            )}\r\n                        /></Table></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (signature) => {\r\n            dispatch(createSignature(signature))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        newSignature: state.mySignatureReducer\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignatureList)","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Select, DatePicker, Button, Space, Breadcrumb, PageHeader, Input, InputNumber } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport Form from \"antd/lib/form/Form\";\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\nclass ContractSearch extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            SearchBy: \"SearchByContractId\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({\r\n            SearchBy: value\r\n        })\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values)\r\n\r\n\r\n    };\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n\r\n\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n\r\n                    title={[<Space size=\"large\">\r\n                        {this.state.SearchBy === \"SearchByStatus\" ?\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>\r\n                                    đang duyệt\r\n                            </Breadcrumb.Item>\r\n                                <Breadcrumb.Item>\r\n                                    đang chờ ký\r\n                            </Breadcrumb.Item>\r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb> : null}\r\n\r\n\r\n                    </Space>]}\r\n                    extra={[\r\n                        <Form\r\n                            name=\"basic\"\r\n                            className=\"search-form\"\r\n                            initialValues={{\r\n                                remember: true,\r\n                            }}\r\n                            onFinish={this.onFinish}\r\n                            onFinishFailed={this.onFinishFailed}>\r\n                            <Space size=\"large\">\r\n                                <Select defaultValue=\"SearchByContractId\" onChange={this.handleChange}>\r\n                                    <Option value=\"SearchByContractId\">tìm kiếm theo số hợp đồng</Option>\r\n                                    <Option value=\"SearchByContractDuration\">tìm kiếm theo thời hạn</Option>\r\n                                    <Option value=\"SearchByCustomerTaxCode\">tìm kiếm theo mã số thuế</Option>\r\n                                    <Option value=\"SearchByStatus\">tìm kiếm theo trạng thái</Option>\r\n                                    <Option value=\"SearchByContractValue\">tìm kiếm theo giá trị hợp đồng</Option>\r\n                                    <Option value=\"SearchByContractDeadline\">tìm kiếm theo ngày hết hạn</Option>\r\n                                    <Option value=\"SearchByContractCreatedDate\">tìm kiếm theo ngày tạo</Option>\r\n                                </Select>\r\n                                {this.state.SearchBy === \"SearchByContractId\" ?\r\n                                    <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByCustomerTaxCode\" ? <> <Input name=\"searchValue\" />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></> : null}\r\n                                {this.state.SearchBy === \"SearchByContractValue\" ? <> <InputNumber\r\n\r\n                                    formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByContractDuration\" ? <><RangePicker\r\n                                    showTime={{ format: 'HH:mm' }}\r\n                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                    onChange={this.onChange}\r\n                                    onOk={this.onOk}\r\n                                />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByContractDeadline\" ? <>\r\n                                    <DatePicker showTime onChange={this.onChange} onOk={this.onOk} />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByContractCreatedDate\" ? <>\r\n                                    <DatePicker showTime onChange={this.onChange} onOk={this.onOk} />\r\n\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n\r\n                            </Space>\r\n                        </Form>\r\n                    ]}\r\n                >\r\n\r\n\r\n\r\n                </PageHeader>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default ContractSearch;","export const contractInformation = () => {\r\n  return {\r\n    type: 'LIST_contract',\r\n  }\r\n}\r\nexport const createContract = (contract) => {\r\n  \r\n  return {\r\n    type: 'CREATE_contract',\r\n    contract\r\n  }\r\n}\r\nexport const updateContract = (contract) => {\r\n  return {\r\n    type: 'UPDATE_contract',\r\n    contract\r\n  }\r\n}\r\nexport const deactiveContract = (contractID) => {\r\n  return {\r\n    type: 'DEACTIVE_contract',\r\n    contractID\r\n  }\r\n}","import React from 'react';\r\nimport { createContract, contractInformation, } from '../actions/ContractAction'\r\nimport { Select, DatePicker, Descriptions, Space, Button, InputNumber, Form, Table, Input, Col, Card, Pagination } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport ContractTable from './ContractTable'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport {\r\n    DeleteOutlined, IdcardOutlined, BankOutlined, PhoneOutlined, PrinterOutlined, HomeOutlined, MailOutlined\r\n    , ContactsOutlined, CalendarOutlined, DollarOutlined, CloudDownloadOutlined, CloudUploadOutlined, AuditOutlined\r\n} from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\nclass CreateContract extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            \r\n            TheChooseOne: {\r\n                Name: \"\",\r\n                MST: \"\",\r\n                Address: \"\",\r\n                Email: \"\",\r\n                Owner: \"\",\r\n            },\r\n            currentPage: 1,\r\n            products: [\r\n                {\r\n                    key: 1,\r\n                    product_name: \"abc\",\r\n                    unit: 1,\r\n                    quantitve: 2,\r\n                    price: 1000,\r\n                },\r\n                {\r\n                    key: 2,\r\n                    product_name: \"abc\",\r\n                    unit: 1,\r\n                    quantitve: 2,\r\n                    price: 1000,\r\n                }\r\n            ],\r\n            finish: false,\r\n            showContent: \"customer\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    onFinish = (values) => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n        const contract = {\r\n\r\n            contract_name: 'Hop dong lao dong',\r\n            status: \"pending\",\r\n            ben_tao_hd: 'HiSign',\r\n            ben_tham_gia: 'cty 369',\r\n            nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n            deadline: \"12/12/2022\",\r\n\r\n        }\r\n        this.props.onSubmit(contract)\r\n\r\n    };\r\n    Cancel = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n\r\n\r\n    };\r\n    ShowCustomer = () => {\r\n        this.setState({\r\n            showContent: \"customer\"\r\n        })\r\n    };\r\n    ShowContent = () => {\r\n        this.setState({\r\n            showContent: \"content\"\r\n        })\r\n    };\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    handleChange(value) {\r\n        this.setState({\r\n            TheChooseOne: {\r\n                Name: \"Company name here\",\r\n                MST: \"Tax code here\",\r\n                Address: \"address here\",\r\n                Email: \"email here\",\r\n                Owner: \"owner here\",\r\n            },\r\n        })\r\n    }\r\n    log = (type) => console.log.bind(console, type);\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    render() {\r\n\r\n        if (this.state.finish) {\r\n            return (\r\n                <Router>\r\n                    <Redirect push to={\"/capstone/contract\"} />\r\n                    <Route exact path=\"/capstone/contract\" render={() => <ContractTable role={this.props.role} />\r\n                    } /></Router>\r\n            );\r\n        } else {\r\n\r\n\r\n            return (\r\n\r\n                <div >\r\n                    <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n\r\n                    <h2 style={{ textAlign: 'center' }}>Hợp đồng <Input></Input></h2>\r\n                    <Space direction=\"horizontal\" align=\"start\" >\r\n                        <Space direction=\"vertical\" align=\"start\" style={{width:300 ,height:600}} >\r\n                            <Card\r\n                                title={\"Thông tin bên A\"}>\r\n                                <Descriptions size=\"small\" column={1} >\r\n                                    <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                        Usada Pekora\r\n                        </Descriptions.Item>\r\n\r\n\r\n                                </Descriptions>\r\n                            </Card>\r\n                            <Card\r\n                                title=\"Thông tin bên B\">\r\n                                <Select defaultValue=\"NO\" onChange={this.handleChange}>\r\n                                    <Option value=\"NO\">Please select your customer</Option>\r\n                                    <Option value=\"PR001\">Usada construction</Option>\r\n                                    <Option value=\"PR002\">Anukin corp</Option>\r\n                                    <Option value=\"PR003\">The circus</Option>\r\n                                </Select>\r\n                                <Descriptions title=\"\" size=\"small\" column={1}  >\r\n\r\n                                    <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                        Usada Pekora\r\n                                    </Descriptions.Item>\r\n\r\n\r\n                                </Descriptions>\r\n                            </Card>\r\n                        </Space>\r\n\r\n                        \r\n                        <Card>\r\n\r\n                            <Form\r\n\r\n                                name=\"basic\"\r\n                                className=\"lcontract-form\"\r\n\r\n                                onFinish={this.onFinish}\r\n                                onFinishFailed={this.onFinishFailed}\r\n\r\n                            >\r\n                                <Space title=\"Nội dung hợp đồng\" direction=\"vertical\" style={{ height:600}}   >\r\n                                    {this.state.currentPage === 1 ?\r\n                                        <Card title=\"thời hạn hợp đồng\"> <RangePicker\r\n                                            showTime={{ format: 'HH:mm' }}\r\n                                            format=\"YYYY-MM-DD HH:mm\"\r\n                                            onChange={this.onChange}\r\n                                            onOk={this.onOk}\r\n                                        /></Card> : null}\r\n                                    {this.state.currentPage === 2 ?\r\n                                        <Card title=\"Hàng hóa\">\r\n                                            <Table dataSource={this.state.products}\r\n                                                rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}>\r\n                                                <Column title=\"stt\" dataIndex=\"key\" key=\"key\"\r\n                                                    render={(text, record) => (\r\n\r\n                                                        <a>{text}</a>\r\n\r\n                                                    )}\r\n                                                />\r\n\r\n                                                <Column title=\"tên hàng hóa\" dataIndex=\"product_name\" key=\"product_name\"\r\n                                                    render={(text, record) => (\r\n\r\n                                                        <b>{text}</b>\r\n\r\n                                                    )} />\r\n                                                <Column title=\"đơn vị\" dataIndex=\"unit\" key=\"unit\"\r\n                                                    render={(text, record) => (\r\n\r\n                                                        <b>{text}</b>\r\n\r\n                                                    )} />\r\n                                                <Column title=\"số lượng\" dataIndex=\"quantitve\" key=\"quantitve\"\r\n                                                    render={(text, record) => (\r\n\r\n                                                        <b>{text}</b>\r\n\r\n                                                    )} />\r\n                                                <Column title=\"Giá\" dataIndex=\"price\" key=\"price\"\r\n                                                    render={(text, record) => (\r\n\r\n                                                        <Form.Item\r\n\r\n                                                            name=\"value\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Vui lòng nhập Giá trị:',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <InputNumber\r\n\r\n                                                                formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                            />\r\n                                                        </Form.Item>\r\n\r\n                                                    )} />\r\n\r\n                                                <Column\r\n                                                    title=\"Xóa\"\r\n                                                    key=\"action\"\r\n                                                    render={(text, record) => (\r\n\r\n                                                        <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                                                    )}\r\n                                                />\r\n\r\n\r\n                                            </Table>\r\n                                        Giá cả trên chưa bao gồm thuế Giá  trị gia tăng.\r\nHàng hoá do Bên Bán cung cấp phải đảm bảo đúng chất lượng (Có Giấy chứng nhẫn hàng hoá cung cấp đạt tiêu chuẩn chất lượng của cơ quan Nhà nước có thẩm quyền)\r\n                                    </Card> : null}\r\n                                    {this.state.currentPage === 3 ?\r\n                                       <Card title=\"Tổng giá\">\r\n\r\n\r\n\r\n                                       </Card> : null}                   \r\n                                       {this.state.currentPage === 4 ?\r\n                                       <Card title=\"Thuế\">\r\n\r\n\r\n\r\n                                       </Card> : null}  \r\n                                       {this.state.currentPage === 5 ?\r\n                                        <Card title=\"Phương thức thanh toán\">\r\n                                        Tổng số tiền Bên Mua phải Thanh toán cho Bên Bán là: <InputNumber\r\n\r\n                                            formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                        />đồng/ lô hàng\r\n\r\n                                        Giá trên chưa bao gồm thuế giá trị gia tăng.\r\n                                    </Card> : null}    \r\n                                    {this.state.currentPage === 6 ?\r\n                                       <Card title=\"Thời hạn và phương thức thanh toán\">\r\n                                       Phương thức thanh toán: Thanh toán bằng tiền mặt hoặc chuyển khoản.\r\n                                       Khi Bên A thanh toán tiền hàng theo các lần thanh toán, Bên B có nghĩa vụ ghi hoá đơn, chứng từ chứng nhận việc đã thanh toán của Bên A theo qui định của pháp luật.\r\n\r\n\r\n                                   </Card> : null}\r\n                                   {this.state.currentPage === 7 ?\r\n                                        <Card title=\"Thời điểm và địa điểm chuyển giao\">\r\n                                        Bên bán chuyển giao tài sản cho Bên mua tại<Input /> trong thời hạn <Input /> ngày kể từ ngày ký kết hợp đồng;\r\n\r\n\r\n                                    </Card> : null}    \r\n                                    {this.state.currentPage === 8 ?\r\n                                        <Card title=\"Nghĩa vụ bên bán\">\r\n                                        5.1.\tBên Bán chịu trách nhiệm về số lượng, chất lượng đối với toàn bộ các sản phẩm do Bên Bán cung cấp cho tới khi hàng đến <Input />\r\n                                        5.2.\tBên Bán có nghĩa vụ giao hàng cho Bên mua tại<Input />.\r\n                                        5.3.\tBên Bán có nghĩa vụ cung cấp mọi chỉ dẫn cần thiết đối với việc bảo quản, sử dụng hàng hoá theo quy định của Hợp đồng này cho Bên mua.F\r\n\r\n\r\n                                    </Card> : null}  \r\n                                    {this.state.currentPage === 9 ?\r\n                                        <Card title=\"Nghĩa vụ bên mua\">\r\n                                        6.1.\tBên mua có nghĩa vụ thanh toán toàn bộ chi phí vận chuyển từ  kho xưởng của mình đến <Input />\r\n                                        6.2.\tTổ chức tiếp nhận nhanh, an toàn, dứt điểm cho từng lô hàng.\r\n                                        6.3.\tThanh toán theo quy định tại Điều 7 Hợp đồng này.\r\n                                        6.4.\tChịu chi phí bốc dỡ từ xe xuống khi Bên Bán vận chuyển hàng hoá đến\r\n                                        <Input />\r\n\r\n                                    </Card> : null} \r\n                                    {this.state.currentPage === 10 ?\r\n                                         <Card title=\"Giải quyết tranh chấp\">\r\n                                         Đối với Bên Bán:\r\n                                         -\tNếu Bên Bán không giao hàng đúng thời hạn quy định tại Hợp đồng này thì sẽ bị phạt số tiền là 0,05% Tổng giá trị Hợp đồng cho 01 ngày vi phạm.\r\n                                         -\tNếu Bên Bán không giao đủ hàng đúng số lượng và chất lượng theo quy định tại Hợp đồng này thì sẽ phải cung cấp tiếp hàng hoá theo đúng quy định và bị phạt số tiền là 0,05% Tổng giá trị hàng hoá bị vi phạm cho 01 ngày chậm.\r\n                                         Đối với bên mua:\r\n                                         -\tNếu Bên mua không thực hiện đúng nghĩa vụ thanh toán theo qui định tại  Hợp đồng này thì sẽ bị phạt số tiền là 0,05% Tổng giá trị Hợp đồng cho 01 ngày vi phạm.\r\n                                         -\tNếu Bên mua không thực hiện đúng nghĩa vụ tiếp nhận hàng theo qui định của Hợp đồng này thì sẽ bị phạt số tiền là 0,05% Tổng giá trị Hợp đồng cho 01 ngày vi phạm.\r\n \r\n \r\n                                     </Card> : null} \r\n                                     {this.state.currentPage === 11 ?\r\n                                         <Card title=\"Các trường hợp chấm dứt hợp đồng\">\r\n                                         Trong qúa trình thực hiện Hợp đồng này nếu xảy ra bất kỳ sự bất đồng nào,\r\n                                         Bên nảy sinh bất đồng sẽ thông báo cho bên kia bằng văn bản.\r\n                                         Hai bên sẽ thương lượng để giải quyết các bất đồng đó.\r\n                                         Trường hợp các bên không tự thương lượng được thì\r\n                                         sự việc sẽ được đưa ra giải quyết theo qui định của pháp luật.\r\n                                         Hợp đồng này sẽ được chấm dứt trong các trường hợp sau:\r\n                                         -\tKhi các Bên thực hiện xong các quyền và nghĩa vụ quy định trong Hợp đồng này.\r\n                                         -\tKhi một Bên vi phạm hợp đồng dẫn đến Hợp đồng không thể thực hiện được thì phía Bên kia có quyền đơn phương chấm dứt hợp đồng.\r\n                                         -\t Hợp đồng có thể được chấm dứt do sự thỏa thuận của các Bên.\r\n \r\n                                     </Card> : null} \r\n                                     {this.state.currentPage === 12 ?\r\n                                         <Card title=\"Hiệu lực thi hành\">\r\n\r\n\r\n\r\n                                         </Card> : null} \r\n                                    \r\n                                </Space>\r\n                                <Pagination current={this.state.currentPage} total={110} onChange={(page) =>\r\n                                    this.setState({\r\n                                        currentPage: page\r\n                                    })\r\n                                } />\r\n                                <Space size=\"large\">\r\n                                    <Button type=\"primary\" value=\"submit\" htmlType=\"submit\">\r\n                                        Nộp\r\n                  </Button>\r\n                                </Space>\r\n                            </Form>\r\n                        </Card>\r\n\r\n                    </Space>\r\n                </div>\r\n\r\n\r\n\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (contract) => {\r\n            dispatch(createContract(contract))\r\n        }\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(CreateContract);","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Select, DatePicker, Button, Space, Breadcrumb, PageHeader, Input, InputNumber, Form } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Option } = Select;\r\nclass ContractTypeSearch extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            SearchBy: \"SearchByContractType\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({\r\n            SearchBy: value\r\n        })\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values)\r\n\r\n\r\n    };\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n\r\n                    title={[<Space size=\"large\">\r\n\r\n                        {this.state.SearchBy === \"SearchByStatus\" ?\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n\r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb> : null}\r\n\r\n                    </Space>]}\r\n                    extra={[\r\n\r\n                        <Form\r\n                            name=\"basic\"\r\n                            className=\"search-form\"\r\n                            initialValues={{\r\n                                remember: true,\r\n                            }}\r\n                            onFinish={this.onFinish}\r\n                            onFinishFailed={this.onFinishFailed}>\r\n                            <Space size=\"large\">\r\n                                <Select defaultValue=\"SearchByContractType\" onChange={this.handleChange}>\r\n                                    <Option value=\"SearchByContractType\">tìm kiếm theo loại hợp đồng</Option>\r\n                                    <Option value=\"SearchByCreater\">tìm kiếm theo người tạo</Option>\r\n                                    <Option value=\"SearchByCreateDate\">tìm kiếm theo ngày tạo</Option>\r\n                                    <Option value=\"SearchByStatus\">tìm kiếm theo trạng thái</Option>\r\n\r\n                                </Select>\r\n                                {this.state.SearchBy === \"SearchByContractType\" ?\r\n                                    <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByCreater\" ? <> <Input name=\"searchValue\" />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></> : null}\r\n                                {this.state.SearchBy === \"SearchByCreateDate\" ?\r\n                                    <> <DatePicker showTime onChange={this.onChange} onOk={this.onOk} />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n\r\n\r\n                            </Space>\r\n                        </Form>\r\n                    ]}\r\n                >\r\n\r\n\r\n\r\n                </PageHeader>\r\n\r\n            </div>);\r\n    }\r\n}\r\nexport default ContractTypeSearch;","import 'antd/dist/antd.css';\r\nimport { Table,Space,Button,PageHeader } from 'antd';\r\nimport CreateContract from './CreateContract';\r\nimport React from 'react';\r\nimport ContractTypeSearch from './ContractTypeSearch'\r\nimport {UserAddOutlined,SearchOutlined ,FileOutlined} from \"@ant-design/icons\"\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column } = Table;\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n    {\r\n        key: '2',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n];\r\n\r\n\r\nclass ChooseContractTemplate extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showTemplateCreate: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleChange() {\r\n        this.setState({\r\n            showTemplateCreate: true,\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.showTemplateCreate) {\r\n            return (\r\n                <Router>\r\n                    <Redirect push to={\"/capstone/createContract\" } />\r\n                    <Route exact path=\"/capstone/createContract\" render={() =>  <CreateContract role={this.props.role} />\r\n                    } /></Router>\r\n               \r\n            );\r\n        } else {\r\n            return (\r\n                <div style={{height: \"100vh\"}}>\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n\r\n                        title={[]}\r\n                        extra={[\r\n\r\n                            <Space size=\"large\">\r\n                                <input ref=\"searchInput\" />\r\n                                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Space>\r\n                        ]}\r\n                    >\r\n\r\n\r\n\r\n                    </PageHeader>\r\n                    <Table dataSource={dataSource} >\r\n                        <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                        <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                        <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n                        \r\n\r\n                        <Column\r\n                            title=\"Chọn hợp đồng\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n                                <Space size=\"middle\">\r\n                                    <Button type=\"primary\" icon={<FileOutlined/>} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                    </Table></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nexport default ChooseContractTemplate","import React from 'react';\r\nimport { UserAddOutlined, SearchOutlined, FileOutlined } from \"@ant-design/icons\"\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { Select, DatePicker, Descriptions, Space, Button, InputNumber, Table, PageHeader, Row, Col } from 'antd';\r\nimport ContractExtensionTable from './ContractExtensionTable'\r\nconst { Column } = Table;\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n    {\r\n        key: '2',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n];\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\nclass AddContractExtension extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            option: \"DeadLineExtend\",\r\n            NewContent: \"\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.ChooseOption = this.ChooseOption.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({\r\n            NewContent: \"NewContent\"\r\n        })\r\n    }\r\n    Cancel = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n\r\n\r\n    };\r\n    log = (type) => console.log.bind(console, type);\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    ChooseOption(value) {\r\n\r\n        this.setState({\r\n            option: value\r\n        })\r\n        if (value === \"DeadLineExtend\") {\r\n            this.setState({\r\n                NewContent: \"\"\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.finish) {\r\n            return (\r\n                <Router>\r\n                    <Redirect push to={\"/capstone/viewContract/\"+ this.props.contractId} />\r\n                    <Route exact path=\"/capstone/viewContract/:id\" render={() =>   <ContractExtensionTable contractId={this.props.contractId} role={this.props.role} />\r\n                    } /></Router>\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={{ border: \"solid\", backgroundColor: \"white\",height: \"100vh\" }} >\r\n                    <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n\r\n                    <h2 style={{ textAlign: 'center' }}>phụ lục hợp đồng</h2>\r\n                    <Row>\r\n                        <Col span={3} order={1} />\r\n                        <Col span={20} order={2}>\r\n                            <div id=\"approver\">Lý do tạo:\r\n\r\n                        <Select defaultValue={this.state.option} style={{ width: 200 }}\r\n                                    onChange={this.ChooseOption}>\r\n                                    <Option value=\"DeadLineExtend\">Gia hạn hợp đồng</Option>\r\n                                    <Option value=\"ChangePolicy\">Thay đổi Giá trị</Option>{/*khi chọn cái này thì cái RangePicker sẽ hide và show cái table để chọn template*/}\r\n                                    <Option value=\"Both\">Cả hai</Option>{/*khi chọn cái này thì cái này show cái table để chọn template*/}\r\n                                </Select>\r\n                            </div>\r\n                            <Descriptions title=\"Noi dung thay doi\" size=\"small\" column={1} >\r\n                                {this.state.option === \"DeadLineExtend\" ? <Descriptions.Item><RangePicker\r\n                                    showTime={{ format: 'HH:mm' }}\r\n                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                    onChange={this.onChange}\r\n                                    onOk={this.onOk}\r\n                                /></Descriptions.Item> : null}\r\n                                {this.state.option === \"ChangePolicy\" ? <Descriptions.Item><Table dataSource={dataSource} >\r\n                                    <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                    <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                    <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                    <Column\r\n                                        title=\"Chọn hợp đồng\"\r\n                                        key=\"action\"\r\n                                        render={(text, record) => (\r\n                                            <Space size=\"middle\">\r\n                                                <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                            </Space>\r\n                                        )}\r\n                                    />\r\n                                </Table> </Descriptions.Item> : null}\r\n                                {this.state.option === \"Both\" ? <Descriptions.Item> <RangePicker\r\n                                    showTime={{ format: 'HH:mm' }}\r\n                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                    onChange={this.onChange}\r\n                                    onOk={this.onOk}\r\n                                /></Descriptions.Item> : null}\r\n                                {this.state.option === \"Both\" ? <Descriptions.Item> <Table dataSource={dataSource} >\r\n                                    <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                    <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                    <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                    <Column\r\n                                        title=\"Chọn hợp đồng\"\r\n                                        key=\"action\"\r\n                                        render={(text, record) => (\r\n                                            <Space size=\"middle\">\r\n                                                <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                            </Space>\r\n                                        )}\r\n                                    />\r\n                                </Table> </Descriptions.Item> : null}\r\n                                {this.state.NewContent === \"NewContent\" ? <>\r\n                                    <Descriptions.Item label=\"Điều khoản:\">\r\n                                        <a>Dieu khoan 1:</a><br />\r\n                                        <a>Dieu khoan 2:</a><br />\r\n                                        <a>Dieu khoan 3:</a><br />\r\n                                        <a>Dieu khoan 4:</a><br />\r\n                                    </Descriptions.Item>\r\n                                    <Descriptions.Item label=\"Giá trị:\">\r\n                                        <InputNumber\r\n                                            defaultValue={1000}\r\n                                            formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                        />\r\n                                    </Descriptions.Item></> : null}\r\n\r\n\r\n\r\n                            </Descriptions>\r\n                            <Space size=\"large\">\r\n                                <Button type=\"primary\" value=\"Signed\">\r\n                                    Lưu\r\n                        </Button>\r\n\r\n\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default AddContractExtension","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { UserAddOutlined, SearchOutlined, FileOutlined } from \"@ant-design/icons\"\r\nimport ContractExtensionTable from './ContractExtensionTable'\r\nimport { Select, DatePicker, Descriptions, Space, Button, Row, Col, Table, InputNumber } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column } = Table;\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\nclass UpdateContractExtension extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            openCommentSection: false,\r\n            finish: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.OpenCommentSection = this.OpenCommentSection.bind(this)\r\n    }\r\n    handleChange(value) {\r\n        console.log(`selected ${value}`);\r\n    }\r\n    log = (type) => console.log.bind(console, type);\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    OpenCommentSection() {\r\n        this.setState({\r\n            openCommentSection: true\r\n        })\r\n    }\r\n    onFinish = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n    };\r\n    render() {\r\n\r\n\r\n\r\n        if (this.state.finish) {\r\n            return (<Router>\r\n                <Redirect push to={\"/capstone/viewContract/\"+ this.props.contractId} />\r\n                <Route exact path=\"/capstone/viewContract/:id\" render={() =>   <ContractExtensionTable contractId={this.props.contractId} role={this.props.role} />\r\n                } /></Router>);\r\n        } else {\r\n\r\n            return (\r\n\r\n                <div style={{ border: \"solid\",height: \"100vh\" }} >\r\n                    <Button type=\"primary\" value=\"cancel\" onClick={this.onFinish}>\r\n                        Trở về\r\n              </Button>\r\n\r\n                    <h2 style={{ textAlign: 'center' }}>phụ lục hợp đồng</h2>\r\n                    <Row>\r\n                        <Col span={3} order={1} />\r\n                        <Col span={20} order={2}>\r\n                            <div id=\"approver\">Lý do tạo:\r\n\r\n                        {/* <Select defaultValue={this.state.option} style={{ width: 200 }}\r\n                                onChange={this.ChooseOption}>\r\n                                <Option value=\"DeadLineExtend\">Gia hạn hợp đồng</Option>\r\n                                <Option value=\"ChangePolicy\">Thay đổi Giá trị</Option>\r\n                                <Option value=\"Both\">Cả hai</Option>\r\n                            </Select> */}\r\n                            </div>\r\n                            <Descriptions title=\"Noi dung thay doi\" size=\"small\" column={1} >\r\n                                <Descriptions.Item><RangePicker\r\n                                    showTime={{ format: 'HH:mm' }}\r\n                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                    onChange={this.onChange}\r\n                                    onOk={this.onOk}\r\n                                /></Descriptions.Item>\r\n                                <Descriptions.Item label=\"Điều khoản:\">\r\n                                    <a>Dieu khoan 1:</a><br />\r\n                                    <a>Dieu khoan 2:</a><br />\r\n                                    <a>Dieu khoan 3:</a><br />\r\n                                    <a>Dieu khoan 4:</a><br />\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"Giá trị:\">\r\n\r\n                                    <InputNumber\r\n                                        defaultValue={1000}\r\n                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                    />\r\n                                </Descriptions.Item>\r\n                                {/* {this.state.option === \"DeadLineExtend\" ? <Descriptions.Item><RangePicker\r\n                                showTime={{ format: 'HH:mm' }}\r\n                                format=\"YYYY-MM-DD HH:mm\"\r\n                                onChange={this.onChange}\r\n                                onOk={this.onOk}\r\n                            /></Descriptions.Item> : null} */}\r\n                                {/* {this.state.option === \"ChangePolicy\" ? <Descriptions.Item><Table dataSource={dataSource} >\r\n                                <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                <Column\r\n                                    title=\"Chọn hợp đồng\"\r\n                                    key=\"action\"\r\n                                    render={(text, record) => (\r\n                                        <Space size=\"middle\">\r\n                                            <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                        </Space>\r\n                                    )}\r\n                                />\r\n                            </Table> </Descriptions.Item> : null} */}\r\n                                {/* {this.state.option === \"Both\" ? <Descriptions.Item> <RangePicker\r\n                                showTime={{ format: 'HH:mm' }}\r\n                                format=\"YYYY-MM-DD HH:mm\"\r\n                                onChange={this.onChange}\r\n                                onOk={this.onOk}\r\n                            /></Descriptions.Item> : null} */}\r\n                                {/* {this.state.option === \"Both\" ? <Descriptions.Item> <Table dataSource={dataSource} >\r\n                                <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                <Column\r\n                                    title=\"Chọn hợp đồng\"\r\n                                    key=\"action\"\r\n                                    render={(text, record) => (\r\n                                        <Space size=\"middle\">\r\n                                            <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                        </Space>\r\n                                    )}\r\n                                />\r\n                            </Table> </Descriptions.Item> : null} */}\r\n                                {/* {this.state.NewContent === \"NewContent\" ?\r\n                                <Descriptions.Item label=\"Gia tri:\">\r\n                                    <a>Dieu khoan 1:</a><br />\r\n                                    <a>Dieu khoan 2:</a><br />\r\n                                    <a>Dieu khoan 3:</a><br />\r\n                                    <a>Dieu khoan 4:</a><br />\r\n                                    <InputNumber\r\n                                        defaultValue={1000}\r\n                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                    />\r\n                                </Descriptions.Item> : null} */}\r\n\r\n\r\n\r\n                            </Descriptions>\r\n                            <Space size=\"large\">\r\n                                {/* <Button type=\"primary\" value=\"Signed\">\r\n                                Lưu\r\n                        </Button> */}\r\n                                <Space size=\"large\">\r\n\r\n                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Sign\" onClick={this.onFinish}>{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n    Kí\r\n</Button> : null}\r\n                                    {this.props.contract.status == \"pending\" ? <Button onClick={this.OpenCommentSection} type=\"primary\" value=\"Update request\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n    Yêu cầu sửa\r\n</Button> : null}\r\n                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Edit\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng*/}\r\n        Sửa\r\n</Button> : null}\r\n\r\n                                </Space>\r\n\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateContractExtension","import 'antd/dist/antd.css';\r\nimport { Table, Button,Tag } from 'antd';\r\nimport ContractSearch from './ContractSearch'\r\nimport { EyeOutlined,DeleteOutlined, FormOutlined, FileAddOutlined,ContainerOutlined } from \"@ant-design/icons\"\r\nimport AddContractExtension from './AddContractExtension'\r\nimport UpdateContractExtension from './UpdateContractExtension'\r\nimport React from 'react';\r\nimport { createcontractExtension, contractExtensionInformation } from '../actions/ContractExtension'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column } = Table;\r\n\r\n\r\nclass ContractExtensionTable extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showCreateContractExtension: false,\r\n            showContractExtension: false,\r\n            contract :{},\r\n            \r\n        };\r\n\r\n        this.onOpenCreateContractExtension = this.onOpenCreateContractExtension.bind(this);\r\n        this.viewContractExtension = this.viewContractExtension.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        if (this.props.newContractExtension.length === 0) {\r\n            const contract1 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"active\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract2 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"deactive\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract3 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"pending\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract4 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"waiting for customer\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            this.props.onSubmit(contract1)\r\n            this.props.onSubmit(contract2)\r\n            this.props.onSubmit(contract3)\r\n            this.props.onSubmit(contract4)\r\n        }\r\n\r\n    }\r\n    onOpenCreateContractExtension() {\r\n        this.setState({\r\n            showCreateContractExtension: true\r\n        })\r\n\r\n    }\r\n    viewContractExtension() {\r\n        this.setState({\r\n            showContractExtension: true\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.showCreateContractExtension) {\r\n            return (\r\n                <Router>\r\n                    <Redirect push to={\"/capstone/viewContract/\"+ this.props.contractId+\"/createExtension\"} />\r\n                    <Route exact path=\"/capstone/viewContract/:id/createExtension\" render={() =>   <AddContractExtension contractId={this.props.contractId} role={this.props.role} />\r\n                    } /></Router>\r\n                \r\n\r\n            );\r\n        } else if (this.state.showContractExtension) {\r\n            return (\r\n                \r\n                <Router>\r\n                    <Redirect push to={\"/capstone/viewContract/\"+ this.props.contractId+\"/updateExtension\"} />\r\n                    <Route exact path=\"/capstone/viewContract/:id/updateExtension\" render={() =>   <UpdateContractExtension contractId={this.props.contractId} contract={this.state.contract} role={this.props.role} />\r\n                    } /></Router>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{height: \"100vh\"}}><Button type=\"primary\" icon={<FileAddOutlined />} onClick={this.onOpenCreateContractExtension}>Tạo phụ lục</Button>\r\n                    <ContractSearch />\r\n                    <Table dataSource={this.props.newContractExtension}\r\n                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}>\r\n                        <Column title=\"tên phụ lục\" dataIndex=\"contract_type\" key=\"contract_type\"\r\n                            render={(text, record) => (\r\n\r\n                                <a><ContainerOutlined />{text}</a>\r\n\r\n                            )}\r\n                        />\r\n\r\n                        <Column title=\"bên đối tác\" dataIndex=\"ben_tham_gia\" key=\"ben_tham_gia\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"bên tạo \" dataIndex=\"ben_tao_hd\" key=\"ben_tao_hd\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"người tạo \" dataIndex=\"nguoi_tao_hd\" key=\"nguoi_tao_hd\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                            render={(text, record) => {\r\n                                let color = 'pink'\r\n                                if (text === 'deactive') {\r\n                                    color = 'red'\r\n                                } else if (text === 'active') {\r\n                                    color = 'green'\r\n                                } else if (text === 'pending') {\r\n                                    color = 'blue'\r\n                                } else if (text === 'waiting for customer') {\r\n                                    color = 'pink'\r\n                                } else if (text === 'rejected') {\r\n                                    color = 'grey'\r\n                                }\r\n                                return (<Tag color={color} key={text}>\r\n                                    {text.toUpperCase()}\r\n                                </Tag>);\r\n                            }}\r\n                        />\r\n                        <Column\r\n                            title=\"Xem chi tiết\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <EyeOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={\r\n                                    () => this.setState({\r\n                                        contract: text,\r\n                                        showContractExtension: true\r\n                                    })\r\n                                } />\r\n\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"Vô hiệu hóa\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        />\r\n                        {this.props.role == 'Director' ? <Column\r\n                            title=\"Ký\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <FormOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        /> : null}\r\n\r\n                    </Table></div>\r\n\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (contractExtension) => {\r\n            dispatch(createcontractExtension(contractExtension))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        newContractExtension: state.myContractExtensionReducer\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ContractExtensionTable)","export const contractExtensionInformation = () => {\r\n    return {\r\n      type: 'LIST_contractExtension',\r\n    }\r\n  }\r\n  export const createcontractExtension = (contractExtension) => {\r\n    \r\n    return {\r\n      type: 'CREATE_contractExtension',\r\n      contractExtension\r\n    }\r\n  }\r\n  export const updatecontractExtension = (contractExtension) => {\r\n    return {\r\n      type: 'UPDATE_contractExtension',\r\n      contractExtension\r\n    }\r\n  }\r\n  export const deactivecontractExtension = (contractExtensionID) => {\r\n    return {\r\n      type: 'DEACTIVE_contractExtension',\r\n      contractExtensionID\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    FileExcelOutlined, IdcardOutlined, BankOutlined, PhoneOutlined, PrinterOutlined, HomeOutlined, MailOutlined\r\n    , ContactsOutlined, CalendarOutlined, DollarOutlined, DeleteOutlined, CloudUploadOutlined, AuditOutlined\r\n} from '@ant-design/icons';\r\nimport ContractExtensionTable from './ContractExtensionTable'\r\nimport { Descriptions, InputNumber, Space, Button, DatePicker, Input, Card, Form, Pagination, Table, Comment, List, Avatar } from 'antd';\r\nimport ContractTable from './ContractTable'\r\nimport moment from 'moment'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { RangePicker } = DatePicker;\r\nconst { Column, ColumnGroup } = Table;\r\nconst { TextArea } = Input;\r\n\r\nconst CommentList = ({ comments }) => (\r\n    <List\r\n        dataSource={comments}\r\n        header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\r\n        itemLayout=\"horizontal\"\r\n        renderItem={props => <Comment {...props} />}\r\n    />\r\n);\r\n\r\nclass ContractView extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            openExtension: false,\r\n            openCommentSection: false,\r\n            finish: false,\r\n            showContent: \"customer\",\r\n            comments: [],\r\n            submitting: false,\r\n            value: '',\r\n            currentPage: 1,\r\n            products: [\r\n                {\r\n                    key: 1,\r\n                    product_name: \"abc\",\r\n                    unit: 1,\r\n                    quantitve: 2,\r\n                    price: 1000,\r\n                },\r\n                {\r\n                    key: 2,\r\n                    product_name: \"abc\",\r\n                    unit: 1,\r\n                    quantitve: 2,\r\n                    price: 1000,\r\n                }\r\n            ],\r\n        };\r\n\r\n        this.OpenExtension = this.OpenExtension.bind(this)\r\n        this.OpenCommentSection = this.OpenCommentSection.bind(this)\r\n    }\r\n    handleSubmit = () => {\r\n        if (!this.state.value) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            submitting: true,\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                submitting: false,\r\n                value: '',\r\n                comments: [\r\n                    {\r\n                        author: 'Han Solo',\r\n\r\n                        content: <p>{this.state.value}</p>,\r\n                        datetime: moment().fromNow(),\r\n                    },\r\n                    ...this.state.comments,\r\n                ],\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n    OpenExtension() {\r\n        this.setState({\r\n            openExtension: true\r\n        })\r\n    }\r\n    OpenCommentSection() {\r\n        this.setState({\r\n            openCommentSection: true\r\n        })\r\n    }\r\n    onFinish = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n    };\r\n    onFinishComment = () => {\r\n\r\n\r\n\r\n    };\r\n    onFinishCommenFailt = () => {\r\n\r\n\r\n\r\n    };\r\n    ShowCustomer = () => {\r\n        this.setState({\r\n            showContent: \"customer\"\r\n        })\r\n    };\r\n    ShowContent = () => {\r\n        this.setState({\r\n            showContent: \"content\"\r\n        })\r\n    };\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    render() {\r\n        const { comments, submitting, value } = this.state;\r\n        const Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n            <Form\r\n\r\n                name=\"basic\"\r\n                className=\"lcontract-form\"\r\n\r\n                onFinish={this.onFinishComment}\r\n                onFinishFailed={this.onFinishCommentFailed}\r\n\r\n            >\r\n                <Form.Item>\r\n                    <TextArea rows={4} onChange={onChange} value={value} />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\r\n                        Yêu cầu sửa\r\n                </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n        if (this.props.role === true) {\r\n\r\n            if (this.state.openExtension) {\r\n                return (\r\n                    <Router>\r\n                        <Redirect push to={\"/capstone/viewContract/\" + this.props.contract.id + \"/viewExtension\"} />\r\n                        <Route exact path=\"/capstone/viewContract/:id/viewExtension\" render={() => <ContractExtensionTable contractId={this.props.contract.id} role={this.props.role} />\r\n                        } /></Router>\r\n                );\r\n            } else {\r\n                if (this.state.finish) {\r\n                    return (<ContractTable role={this.props.role} />);\r\n                } else {\r\n                    return (\r\n\r\n                        <div style={{ height: \"100vh\" }}>\r\n                            <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                                Trở về\r\n                            </Button>\r\n                            <h2 style={{ textAlign: 'center' }}>Hợp đồng </h2>\r\n                            <Space direction=\"horizontal\" align=\"start\" >\r\n                                <Space direction=\"vertical\" align=\"start\" style={{ width: 300, height: 600 }} >\r\n                                    <Card\r\n                                        title={\"Thông tin bên A\"}>\r\n                                        <Descriptions size=\"small\" column={1} >\r\n                                            <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                Usada Pekora\r\n                        </Descriptions.Item>\r\n\r\n\r\n                                        </Descriptions>\r\n                                    </Card>\r\n                                    <Card\r\n                                        title=\"Thông tin bên B\">\r\n                                        \r\n                                        <Descriptions title=\"\" size=\"small\" column={1}  >\r\n\r\n                                            <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                Usada Pekora\r\n                                    </Descriptions.Item>\r\n\r\n\r\n                                        </Descriptions>\r\n                                    </Card>\r\n                                </Space>\r\n\r\n\r\n                                <Card>\r\n\r\n                                    <Form\r\n\r\n                                        name=\"basic\"\r\n                                        className=\"lcontract-form\"\r\n\r\n                                        onFinish={this.onFinish}\r\n                                        onFinishFailed={this.onFinishFailed}\r\n\r\n                                    >\r\n                                        <Space title=\"Nội dung hợp đồng\" direction=\"vertical\" style={{ height: 500 }}   >\r\n                                            {this.state.currentPage === 1 ?\r\n                                                <Card title=\"thời hạn hợp đồng\"> <RangePicker\r\n                                                    showTime={{ format: 'HH:mm' }}\r\n                                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                                    onChange={this.onChange}\r\n                                                    onOk={this.onOk}\r\n                                                /></Card> : null}\r\n                                            {this.state.currentPage === 2 ?\r\n                                                <Card title=\"Hàng hóa\">\r\n                                                    <Table dataSource={this.state.products}\r\n                                                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}>\r\n                                                        <Column title=\"stt\" dataIndex=\"key\" key=\"key\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <a>{text}</a>\r\n\r\n                                                            )}\r\n                                                        />\r\n\r\n                                                        <Column title=\"tên hàng hóa\" dataIndex=\"product_name\" key=\"product_name\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <b>{text}</b>\r\n\r\n                                                            )} />\r\n                                                        <Column title=\"đơn vị\" dataIndex=\"unit\" key=\"unit\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <b>{text}</b>\r\n\r\n                                                            )} />\r\n                                                        <Column title=\"số lượng\" dataIndex=\"quantitve\" key=\"quantitve\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <b>{text}</b>\r\n\r\n                                                            )} />\r\n                                                        <Column title=\"Giá\" dataIndex=\"price\" key=\"price\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <Form.Item\r\n\r\n                                                                    name=\"value\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Vui lòng nhập Giá trị:',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <InputNumber\r\n\r\n                                                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                                    />\r\n                                                                </Form.Item>\r\n\r\n                                                            )} />\r\n\r\n                                                        <Column\r\n                                                            title=\"Xóa\"\r\n                                                            key=\"action\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                                                            )}\r\n                                                        />\r\n\r\n\r\n                                                    </Table>\r\n                                        Giá cả trên chưa bao gồm thuế Giá  trị gia tăng.\r\nHàng hoá do Bên Bán cung cấp phải đảm bảo đúng chất lượng (Có Giấy chứng nhẫn hàng hoá cung cấp đạt tiêu chuẩn chất lượng của cơ quan Nhà nước có thẩm quyền)\r\n                                    </Card> : null}\r\n                                            {this.state.currentPage === 3 ?\r\n                                                <Card title=\"Tổng giá\">\r\n\r\n\r\n\r\n                                                </Card> : null}\r\n                                            {this.state.currentPage === 4 ?\r\n                                                <Card title=\"Thuế\">\r\n\r\n\r\n\r\n                                                </Card> : null}\r\n                                            {this.state.currentPage === 5 ?\r\n                                                <Card title=\"Phương thức thanh toán\">\r\n                                                    Tổng số tiền Bên Mua phải Thanh toán cho Bên Bán là: <InputNumber\r\n\r\n                                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                    />đồng/ lô hàng\r\n\r\n                                        Giá trên chưa bao gồm thuế giá trị gia tăng.\r\n                                    </Card> : null}\r\n                                            {this.state.currentPage === 6 ?\r\n                                                <Card title=\"Thời hạn và phương thức thanh toán\">\r\n                                                    Phương thức thanh toán: Thanh toán bằng tiền mặt hoặc chuyển khoản.\r\n                                                    Khi Bên A thanh toán tiền hàng theo các lần thanh toán, Bên B có nghĩa vụ ghi hoá đơn, chứng từ chứng nhận việc đã thanh toán của Bên A theo qui định của pháp luật.\r\n\r\n\r\n                                   </Card> : null}\r\n                                            {this.state.currentPage === 7 ?\r\n                                                <Card title=\"Thời điểm và địa điểm chuyển giao\">\r\n                                                    Bên bán chuyển giao tài sản cho Bên mua tại<Input /> trong thời hạn <Input /> ngày kể từ ngày ký kết hợp đồng;\r\n\r\n\r\n                                    </Card> : null}\r\n                                            {this.state.currentPage === 8 ?\r\n                                                <Card title=\"Nghĩa vụ bên bán\">\r\n                                                    5.1.\tBên Bán chịu trách nhiệm về số lượng, chất lượng đối với toàn bộ các sản phẩm do Bên Bán cung cấp cho tới khi hàng đến <Input />\r\n                                        5.2.\tBên Bán có nghĩa vụ giao hàng cho Bên mua tại<Input />.\r\n                                        5.3.\tBên Bán có nghĩa vụ cung cấp mọi chỉ dẫn cần thiết đối với việc bảo quản, sử dụng hàng hoá theo quy định của Hợp đồng này cho Bên mua.F\r\n\r\n\r\n                                    </Card> : null}\r\n                                            {this.state.currentPage === 9 ?\r\n                                                <Card title=\"Nghĩa vụ bên mua\">\r\n                                                    6.1.\tBên mua có nghĩa vụ thanh toán toàn bộ chi phí vận chuyển từ  kho xưởng của mình đến <Input />\r\n                                        6.2.\tTổ chức tiếp nhận nhanh, an toàn, dứt điểm cho từng lô hàng.\r\n                                        6.3.\tThanh toán theo quy định tại Điều 7 Hợp đồng này.\r\n                                        6.4.\tChịu chi phí bốc dỡ từ xe xuống khi Bên Bán vận chuyển hàng hoá đến\r\n                                        <Input />\r\n\r\n                                                </Card> : null}\r\n                                            {this.state.currentPage === 10 ?\r\n                                                <Card title=\"Giải quyết tranh chấp\">\r\n                                                    Đối với Bên Bán:\r\n                                                    -\tNếu Bên Bán không giao hàng đúng thời hạn quy định tại Hợp đồng này thì sẽ bị phạt số tiền là 0,05% Tổng giá trị Hợp đồng cho 01 ngày vi phạm.\r\n                                                    -\tNếu Bên Bán không giao đủ hàng đúng số lượng và chất lượng theo quy định tại Hợp đồng này thì sẽ phải cung cấp tiếp hàng hoá theo đúng quy định và bị phạt số tiền là 0,05% Tổng giá trị hàng hoá bị vi phạm cho 01 ngày chậm.\r\n                                                    Đối với bên mua:\r\n                                                    -\tNếu Bên mua không thực hiện đúng nghĩa vụ thanh toán theo qui định tại  Hợp đồng này thì sẽ bị phạt số tiền là 0,05% Tổng giá trị Hợp đồng cho 01 ngày vi phạm.\r\n                                                    -\tNếu Bên mua không thực hiện đúng nghĩa vụ tiếp nhận hàng theo qui định của Hợp đồng này thì sẽ bị phạt số tiền là 0,05% Tổng giá trị Hợp đồng cho 01 ngày vi phạm.\r\n                                                    \r\n                                                    \r\n                                     </Card> : null}\r\n                                            {this.state.currentPage === 11 ?\r\n                                                <Card title=\"Các trường hợp chấm dứt hợp đồng\">\r\n                                                    Trong qúa trình thực hiện Hợp đồng này nếu xảy ra bất kỳ sự bất đồng nào,\r\n                                                    Bên nảy sinh bất đồng sẽ thông báo cho bên kia bằng văn bản.\r\n                                                    Hai bên sẽ thương lượng để giải quyết các bất đồng đó.\r\n                                                    Trường hợp các bên không tự thương lượng được thì\r\n                                                    sự việc sẽ được đưa ra giải quyết theo qui định của pháp luật.\r\n                                                    Hợp đồng này sẽ được chấm dứt trong các trường hợp sau:\r\n                                                    -\tKhi các Bên thực hiện xong các quyền và nghĩa vụ quy định trong Hợp đồng này.\r\n                                                    -\tKhi một Bên vi phạm hợp đồng dẫn đến Hợp đồng không thể thực hiện được thì phía Bên kia có quyền đơn phương chấm dứt hợp đồng.\r\n                                                    -\t Hợp đồng có thể được chấm dứt do sự thỏa thuận của các Bên.\r\n                                                    \r\n                                     </Card> : null}\r\n                                            {this.state.currentPage === 12 ?\r\n                                                <Card title=\"Hiệu lực thi hành\">\r\n\r\n\r\n\r\n                                                </Card> : null}\r\n\r\n                                        </Space>\r\n                                        <Pagination current={this.state.currentPage} total={110} onChange={(page) =>\r\n                                            this.setState({\r\n                                                currentPage: page\r\n                                            })\r\n                                        } />\r\n                                        <Space size=\"large\">\r\n                                        {comments.length > 0 && <CommentList comments={comments} />}\r\n                                            {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Sign\" onClick={this.onFinish}>{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n                                                        Kí\r\n                                                    </Button> : this.props.contract.status == \"waiting for sign\" ? <Button type=\"primary\" value=\"Sign\" onClick={this.onFinish}>{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n                                                        Kí\r\n                                                    </Button> : null}\r\n                                            {this.props.contract.status == \"pending\" ? <Comment\r\n                                                avatar={\r\n                                                    <Avatar\r\n                                                        src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                                                        alt=\"Han Solo\"\r\n                                                    />\r\n                                                }\r\n                                                content={\r\n                                                    <Editor\r\n                                                        onChange={this.handleChange}\r\n                                                        onSubmit={this.handleSubmit}\r\n                                                        submitting={submitting}\r\n                                                        value={value}\r\n                                                    />\r\n                                                }\r\n                                            /> : null}\r\n                                            {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Edit\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng*/}\r\n                                                            Sửa\r\n                                                    </Button> : null}\r\n                                            {this.props.contract.status == \"active\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Xem phụ lục\r\n                                                    </Button> : null}\r\n                                            {this.props.contract.status == \"deactive\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Xem phụ lục\r\n                                                        </Button> : null}\r\n                                            {this.props.contract.status == \"waiting for sign\" ? <Button type=\"primary\" value=\"reject\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Reject\r\n                                                        </Button> : null}\r\n                                        </Space>\r\n                                    </Form>\r\n                                </Card>\r\n\r\n                            </Space>\r\n                        </div>\r\n\r\n                    );\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n\r\n\r\n            if (this.state.openExtension) {\r\n                return (<ContractExtensionTable role={this.props.role} />);\r\n            } else {\r\n                if (this.state.finish) {\r\n                    return (<ContractTable role={this.props.role} />);\r\n                } else {\r\n                    return (\r\n                        <div style={{ height: \"100vh\" }}>\r\n                            <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                                Trở về\r\n              </Button>\r\n                            <h2 style={{ textAlign: 'center' }}>Hợp đồng </h2>\r\n                            <Space direction=\"horizontal\" align=\"start\" >\r\n                                <Space direction=\"vertical\" align=\"start\" style={{ width: 300, height: 600 }} >\r\n                                    <Card\r\n                                        title={\"Thông tin bên A\"}>\r\n                                        <Descriptions size=\"small\" column={1} >\r\n                                            <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                Usada Pekora\r\n                        </Descriptions.Item>\r\n\r\n\r\n                                        </Descriptions>\r\n                                    </Card>\r\n                                    <Card\r\n                                        title=\"Thông tin bên B\">\r\n                                       \r\n                                        <Descriptions title=\"\" size=\"small\" column={1}  >\r\n\r\n                                            <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                Usada Pekora\r\n                                    </Descriptions.Item>\r\n\r\n\r\n                                        </Descriptions>\r\n                                    </Card>\r\n                                </Space>\r\n\r\n\r\n                                <Card>\r\n\r\n                                    <Form\r\n\r\n                                        name=\"basic\"\r\n                                        className=\"lcontract-form\"\r\n\r\n                                        onFinish={this.onFinish}\r\n                                        onFinishFailed={this.onFinishFailed}\r\n\r\n                                    >\r\n                                        <Space title=\"Nội dung hợp đồng\" direction=\"vertical\" style={{ height: 500 }}   >\r\n                                            {this.state.currentPage === 1 ?\r\n                                                <Card title=\"thời hạn hợp đồng\"> <RangePicker\r\n                                                    showTime={{ format: 'HH:mm' }}\r\n                                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                                    onChange={this.onChange}\r\n                                                    onOk={this.onOk}\r\n                                                /></Card> : null}\r\n                                            {this.state.currentPage === 2 ?\r\n                                                <Card title=\"Hàng hóa\">\r\n                                                    <Table dataSource={this.state.products}\r\n                                                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}>\r\n                                                        <Column title=\"stt\" dataIndex=\"key\" key=\"key\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <a>{text}</a>\r\n\r\n                                                            )}\r\n                                                        />\r\n\r\n                                                        <Column title=\"tên hàng hóa\" dataIndex=\"product_name\" key=\"product_name\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <b>{text}</b>\r\n\r\n                                                            )} />\r\n                                                        <Column title=\"đơn vị\" dataIndex=\"unit\" key=\"unit\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <b>{text}</b>\r\n\r\n                                                            )} />\r\n                                                        <Column title=\"số lượng\" dataIndex=\"quantitve\" key=\"quantitve\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <b>{text}</b>\r\n\r\n                                                            )} />\r\n                                                        <Column title=\"Giá\" dataIndex=\"price\" key=\"price\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <Form.Item\r\n\r\n                                                                    name=\"value\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Vui lòng nhập Giá trị:',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <InputNumber\r\n\r\n                                                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                                    />\r\n                                                                </Form.Item>\r\n\r\n                                                            )} />\r\n\r\n                                                        <Column\r\n                                                            title=\"Xóa\"\r\n                                                            key=\"action\"\r\n                                                            render={(text, record) => (\r\n\r\n                                                                <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                                                            )}\r\n                                                        />\r\n\r\n\r\n                                                    </Table>\r\n                                        Giá cả trên chưa bao gồm thuế Giá  trị gia tăng.\r\nHàng hoá do Bên Bán cung cấp phải đảm bảo đúng chất lượng (Có Giấy chứng nhẫn hàng hoá cung cấp đạt tiêu chuẩn chất lượng của cơ quan Nhà nước có thẩm quyền)\r\n                                    </Card> : null}\r\n                                            {this.state.currentPage === 3 ?\r\n                                                <Card title=\"Tổng giá\">\r\n\r\n\r\n\r\n                                                </Card> : null}\r\n                                            {this.state.currentPage === 4 ?\r\n                                                <Card title=\"Thuế\">\r\n\r\n\r\n\r\n                                                </Card> : null}\r\n                                            {this.state.currentPage === 5 ?\r\n                                                <Card title=\"Phương thức thanh toán\">\r\n                                                    Tổng số tiền Bên Mua phải Thanh toán cho Bên Bán là: <InputNumber\r\n\r\n                                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                    />đồng/ lô hàng\r\n\r\n                                        Giá trên chưa bao gồm thuế giá trị gia tăng.\r\n                                    </Card> : null}\r\n                                            {this.state.currentPage === 6 ?\r\n                                                <Card title=\"Thời hạn và phương thức thanh toán\">\r\n                                                    Phương thức thanh toán: Thanh toán bằng tiền mặt hoặc chuyển khoản.\r\n                                                    Khi Bên A thanh toán tiền hàng theo các lần thanh toán, Bên B có nghĩa vụ ghi hoá đơn, chứng từ chứng nhận việc đã thanh toán của Bên A theo qui định của pháp luật.\r\n\r\n\r\n                                   </Card> : null}\r\n                                            {this.state.currentPage === 7 ?\r\n                                                <Card title=\"Thời điểm và địa điểm chuyển giao\">\r\n                                                    Bên bán chuyển giao tài sản cho Bên mua tại<Input /> trong thời hạn <Input /> ngày kể từ ngày ký kết hợp đồng;\r\n\r\n\r\n                                    </Card> : null}\r\n                                            {this.state.currentPage === 8 ?\r\n                                                <Card title=\"Nghĩa vụ bên bán\">\r\n                                                    5.1.\tBên Bán chịu trách nhiệm về số lượng, chất lượng đối với toàn bộ các sản phẩm do Bên Bán cung cấp cho tới khi hàng đến <Input />\r\n                                        5.2.\tBên Bán có nghĩa vụ giao hàng cho Bên mua tại<Input />.\r\n                                        5.3.\tBên Bán có nghĩa vụ cung cấp mọi chỉ dẫn cần thiết đối với việc bảo quản, sử dụng hàng hoá theo quy định của Hợp đồng này cho Bên mua.F\r\n\r\n\r\n                                    </Card> : null}\r\n                                            {this.state.currentPage === 9 ?\r\n                                                <Card title=\"Nghĩa vụ bên mua\">\r\n                                                    6.1.\tBên mua có nghĩa vụ thanh toán toàn bộ chi phí vận chuyển từ  kho xưởng của mình đến <Input />\r\n                                        6.2.\tTổ chức tiếp nhận nhanh, an toàn, dứt điểm cho từng lô hàng.\r\n                                        6.3.\tThanh toán theo quy định tại Điều 7 Hợp đồng này.\r\n                                        6.4.\tChịu chi phí bốc dỡ từ xe xuống khi Bên Bán vận chuyển hàng hoá đến\r\n                                        <Input />\r\n\r\n                                                </Card> : null}\r\n                                            {this.state.currentPage === 10 ?\r\n                                                <Card title=\"Giải quyết tranh chấp\">\r\n                                                    Đối với Bên Bán:\r\n                                                    -\tNếu Bên Bán không giao hàng đúng thời hạn quy định tại Hợp đồng này thì sẽ bị phạt số tiền là 0,05% Tổng giá trị Hợp đồng cho 01 ngày vi phạm.\r\n                                                    -\tNếu Bên Bán không giao đủ hàng đúng số lượng và chất lượng theo quy định tại Hợp đồng này thì sẽ phải cung cấp tiếp hàng hoá theo đúng quy định và bị phạt số tiền là 0,05% Tổng giá trị hàng hoá bị vi phạm cho 01 ngày chậm.\r\n                                                    Đối với bên mua:\r\n                                                    -\tNếu Bên mua không thực hiện đúng nghĩa vụ thanh toán theo qui định tại  Hợp đồng này thì sẽ bị phạt số tiền là 0,05% Tổng giá trị Hợp đồng cho 01 ngày vi phạm.\r\n                                                    -\tNếu Bên mua không thực hiện đúng nghĩa vụ tiếp nhận hàng theo qui định của Hợp đồng này thì sẽ bị phạt số tiền là 0,05% Tổng giá trị Hợp đồng cho 01 ngày vi phạm.\r\n                                                    \r\n                                                    \r\n                                     </Card> : null}\r\n                                            {this.state.currentPage === 11 ?\r\n                                                <Card title=\"Các trường hợp chấm dứt hợp đồng\">\r\n                                                    Trong qúa trình thực hiện Hợp đồng này nếu xảy ra bất kỳ sự bất đồng nào,\r\n                                                    Bên nảy sinh bất đồng sẽ thông báo cho bên kia bằng văn bản.\r\n                                                    Hai bên sẽ thương lượng để giải quyết các bất đồng đó.\r\n                                                    Trường hợp các bên không tự thương lượng được thì\r\n                                                    sự việc sẽ được đưa ra giải quyết theo qui định của pháp luật.\r\n                                                    Hợp đồng này sẽ được chấm dứt trong các trường hợp sau:\r\n                                                    -\tKhi các Bên thực hiện xong các quyền và nghĩa vụ quy định trong Hợp đồng này.\r\n                                                    -\tKhi một Bên vi phạm hợp đồng dẫn đến Hợp đồng không thể thực hiện được thì phía Bên kia có quyền đơn phương chấm dứt hợp đồng.\r\n                                                    -\t Hợp đồng có thể được chấm dứt do sự thỏa thuận của các Bên.\r\n                                                    \r\n                                     </Card> : null}\r\n                                            {this.state.currentPage === 12 ?\r\n                                                <Card title=\"Hiệu lực thi hành\">\r\n\r\n\r\n\r\n                                                </Card> : null}\r\n\r\n                                        </Space>\r\n                                        <Pagination current={this.state.currentPage} total={110} onChange={(page) =>\r\n                                            this.setState({\r\n                                                currentPage: page\r\n                                            })\r\n                                        } />\r\n                                        <Space size=\"large\">\r\n                                        {comments.length > 0 && <CommentList comments={comments} />}\r\n                                            \r\n                                            \r\n                                            {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Edit\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng*/}\r\n                                                            Sửa\r\n                                                    </Button> : null}\r\n                                            {this.props.contract.status == \"active\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Xem phụ lục\r\n                                                    </Button> : null}\r\n                                            {this.props.contract.status == \"deactive\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Xem phụ lục\r\n                                                        </Button> : null}\r\n                                            \r\n                                        </Space>\r\n                                    </Form>\r\n                                </Card>\r\n\r\n                            </Space>\r\n\r\n\r\n                        </div>\r\n\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default ContractView","import 'antd/dist/antd.css';\r\nimport { Table, Button, Space, Tag } from 'antd';\r\nimport ContractSearch from './ContractSearch'\r\nimport './Column.css'\r\nimport {\r\n    EyeOutlined, DeleteOutlined, FormOutlined, FileAddOutlined, UploadOutlined, ContainerOutlined,\r\n    UsergroupAddOutlined, UserSwitchOutlined, UserAddOutlined, LogoutOutlined, MonitorOutlined\r\n} from \"@ant-design/icons\"\r\nimport ChooseContractTemplate from './ChooseContractTemplate'\r\nimport ViewContractPage from './ViewContractPage'\r\nimport React, { Component } from 'react';\r\nimport { createContract, contractInformation } from '../actions/ContractAction'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column } = Table;\r\n\r\n\r\nconst dataSource = []\r\n// for (var i = 0; i < 5; i++) {\r\n\r\n//     const contract = {\r\n\r\n//         contract_name: 'Hop dong lao dong',\r\n//         status: \"pending\",\r\n//         ben_tao_hd: 'HiSign',\r\n//         ben_tham_gia: 'cty 369',\r\n//         nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n//         deadline: \"12/12/2022\",\r\n\r\n//     }\r\n//     dataSource.push(contract)\r\n\r\n\r\n\r\n\r\n// }\r\n\r\nclass ContractTable extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showCreateContract: false,\r\n            showContract: false,\r\n            contract: {}\r\n        };\r\n        this.onOpenCreateContract = this.onOpenCreateContract.bind(this);\r\n        this.viewContract = this.viewContract.bind(this);\r\n\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        if (this.props.newContract.length === 0) {\r\n            const contract1 = {\r\n                id:1,\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"deactive\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract2 = {\r\n                id:2,\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"waiting for customer\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract3 = {\r\n                id:3,\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"pending\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract4 = {\r\n                id:4,\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"active\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract5 = {\r\n                id:5,\r\n                contract_name: 'Hop dong mua ban',\r\n                status: \"waiting for sign\",\r\n                ben_tao_hd: 'cty 369',\r\n                ben_tham_gia: 'HiSign',\r\n                nguoi_tao_hd: \"AAA\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            this.props.onSubmit(contract1)\r\n            this.props.onSubmit(contract2)\r\n            this.props.onSubmit(contract3)\r\n            this.props.onSubmit(contract4)\r\n            this.props.onSubmit(contract5)\r\n        }\r\n\r\n    }\r\n    onOpenCreateContract() {\r\n        this.setState({\r\n            showCreateContract: true\r\n        })\r\n    }\r\n    viewContract() {\r\n\r\n        this.setState({\r\n\r\n            showContract: true\r\n        })\r\n    }\r\n    render() {\r\n\r\n\r\n\r\n        if (this.state.showCreateContract) {\r\n            return (\r\n                <Router>\r\n                    <Redirect push to={\"/capstone/chooseTemplate\" } />\r\n                    <Route exact path=\"/capstone/chooseTemplate\" render={() => <ChooseContractTemplate role={this.props.role} />\r\n                    } /></Router>\r\n               \r\n            );\r\n        } else if (this.state.showContract) {\r\n            return (\r\n                <Router>\r\n                <Redirect push to={\"/capstone/viewContract/\"+ this.state.contract.id} />\r\n                <Route exact path=\"/capstone/viewContract/:id\" render={() =>  <ViewContractPage  contract={this.state.contract} role={this.props.role} />\r\n                } /></Router>\r\n               \r\n            );\r\n        }\r\n        else {\r\n\r\n            return (\r\n                <div style={{height: \"100vh\"}}>\r\n                    <Space size=\"large\">\r\n                        <Button type=\"primary\" icon={<FileAddOutlined />} onClick={this.onOpenCreateContract}>Tạo hợp đồng</Button>\r\n                        <Button type=\"primary\" icon={<UploadOutlined />} >Tải lên hợp đồng</Button>\r\n                    </Space>\r\n                    <ContractSearch />\r\n                    <Table dataSource={this.props.newContract}\r\n                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}>\r\n                        <Column title=\"tên hợp đồng\" dataIndex=\"contract_name\" key=\"contract_name\"\r\n                            render={(text, record) => (\r\n\r\n                                <a><ContainerOutlined />{text}</a>\r\n\r\n                            )}\r\n                        />\r\n\r\n                        <Column title=\"bên đối tác\" dataIndex=\"ben_tham_gia\" key=\"ben_tham_gia\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"Ngày hết hạn\" dataIndex=\"deadline\" key=\"deadline\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"bên tạo hợp đồng\" dataIndex=\"ben_tao_hd\" key=\"ben_tao_hd\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                            render={(text, record) => {\r\n                                let color = 'pink'\r\n                                if (text === 'deactive') {\r\n                                    color = 'red'\r\n                                } else if (text === 'active') {\r\n                                    color = 'green'\r\n                                } else if (text === 'pending') {\r\n                                    color = 'blue'\r\n                                } else if (text === 'waiting for customer') {\r\n                                    color = 'pink'\r\n                                } else if (text === 'rejected') {\r\n                                    color = 'grey'\r\n                                }\r\n                                return (<Tag color={color} key={text}>\r\n                                    {text.toUpperCase()}\r\n                                </Tag>);\r\n                            }}\r\n                        />\r\n                        <Column\r\n                            title=\"Xem chi tiết\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <EyeOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={\r\n                                    () => this.setState({\r\n                                        contract: text,\r\n                                        showContract: true\r\n                                    })\r\n                                } />\r\n\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"Vô hiệu hóa\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        />\r\n                        {this.props.role === true ? <Column\r\n                            title=\"Ký\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <FormOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        /> : null}\r\n\r\n                    </Table></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (contract) => {\r\n            dispatch(createContract(contract))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        newContract: state.myContractReducer\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContractTable)","export const customerInformation = () => {\r\n    return {\r\n      type: 'LIST_customer',\r\n    }\r\n  }\r\n  export const createCustomer = (customer) => {\r\n    \r\n    return {\r\n      type: 'CREATE_customer',\r\n      customer\r\n    }\r\n  }\r\n  export const updateCustomer = (customer) => {\r\n    return {\r\n      type: 'UPDATE_customer',\r\n      customer\r\n    }\r\n  }\r\n  export const deactiveCustomer = (customerID) => {\r\n    return {\r\n      type: 'DEACTIVE_customer',\r\n      customerID\r\n    }\r\n  }","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport { createCustomer, customerInformation } from '../actions/CustomerAction'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport CustomerTable from './CustomerTable'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\nclass AddCustomer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            finish: false\r\n        };\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n\r\n        const contract1 = {\r\n\r\n            name: 'John',\r\n            company: \"cty 369\",\r\n            address: '10 Downing Street',\r\n            status: \"active\",\r\n\r\n        }\r\n\r\n\r\n        this.props.onSubmit(contract1)\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n    };\r\n    Cancel = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    render() {\r\n        if (this.state.finish) {\r\n            return (<Router>\r\n                <Redirect push to={\"/capstone/customerList\"}  />\r\n                <Route exact path=\"/capstone/customerList\" component={CustomerTable} />\r\n              </Router>);\r\n        } else {\r\n\r\n\r\n            return (\r\n                <div style={{\r\n                    margin: \"auto\",\r\n                    width: \"1000px\",\r\n                    paddingLeft: \"50px\",\r\n                    border: \"solid\"\r\n                }\r\n                }>\r\n                    <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                    <h2 style={{ textAlign: 'center' }}>Thông tin khách hàng</h2>\r\n                    <React.Fragment>\r\n                        <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                            <Col span={10} >\r\n                                <Grid container spacing={3}>\r\n\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"company\"\r\n                                            name=\"Tên doanh nghiệp\"\r\n                                            label=\"Tên doanh nghiệp\"\r\n                                            fullWidth\r\n                                            autoComplete=\"Tên doanh nghiệp\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"taxCode\"\r\n                                            name=\"Mã số thuế\"\r\n                                            label=\"Mã số thuế\"\r\n                                            fullWidth\r\n                                            autoComplete=\"family-name\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"faxCode\"\r\n                                            name=\"số fax\"\r\n                                            label=\"số fax\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping address-line1\"\r\n                                        />\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"email\"\r\n                                            name=\"địa chỉ mail\"\r\n                                            label=\"địa chỉ mail\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping address-level2\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            id=\"address\"\r\n                                            name=\"địa chỉ\"\r\n                                            label=\"địa chỉ\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping address-line2\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"presentor\"\r\n                                            name=\"Người đại diện\"\r\n                                            label=\"Người đại diện\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping postal-code\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"role\"\r\n                                            name=\"chức vụ\"\r\n                                            label=\"chức vụ\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping country\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                                <div></div><br />\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Button type=\"primary\" >\r\n                                        Nộp\r\n                            </Button>\r\n                                    <Button type=\"primary\" style={{\r\n                                        margin: '0 8px',\r\n                                    }} htmlType=\"button\">\r\n                                        Reset\r\n                            </Button>\r\n                                </Grid>\r\n                            </Col>\r\n                        </Row>\r\n                    </React.Fragment>\r\n                    {/* <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        labelAlign=\"left\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                    ><br />\r\n                        <Form.Item\r\n                            label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                            name=\"companyname\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập tên doanh nghiệp',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                            name=\"email\"\r\n                            requiredMark=\"false\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Địa chỉ email',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                            name=\"taxcode\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Mã số thuế',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                            name=\"address\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Địa chỉ',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                            <Button type=\"primary\" style={{\r\n                                margin: '0 8px',\r\n                            }} htmlType=\"button\">\r\n                                <RedoOutlined />    Reset\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form> */}\r\n                </div >\r\n            );\r\n        }\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (customer) => {\r\n            dispatch(createCustomer(customer))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddCustomer)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ViewCustomer extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin khách hàng</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ViewCustomer;","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Select, DatePicker, Button, Space, Breadcrumb, PageHeader, Input, InputNumber, Form } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Option } = Select;\r\nclass CustomerSearch extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            SearchBy: \"SearchByCompanyName\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({\r\n            SearchBy: value\r\n        })\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values)\r\n\r\n\r\n    };\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n\r\n                    title={[<Space size=\"large\">\r\n\r\n                        {this.state.SearchBy === \"SearchByStatus\" ?\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n\r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb> : null}\r\n\r\n                    </Space>]}\r\n                    extra={[\r\n\r\n                        <Form\r\n                            name=\"basic\"\r\n                            className=\"search-form\"\r\n                            initialValues={{\r\n                                remember: true,\r\n                            }}\r\n                            onFinish={this.onFinish}\r\n                            onFinishFailed={this.onFinishFailed}>\r\n                            <Space size=\"large\">\r\n                                <Select defaultValue=\"SearchByCompanyName\" onChange={this.handleChange}>\r\n                                    <Option value=\"SearchByPhone\">tìm kiếm theo số điện thoại</Option>\r\n                                    <Option value=\"SearchByCompanyName\">tìm kiếm theo tên doanh nghiệp</Option>\r\n                                    <Option value=\"SearchByTaxCode\">tìm kiếm theo mã số thuế</Option>\r\n                                    <Option value=\"SearchByStatus\">tìm kiếm theo trạng thái</Option>\r\n                                    <Option value=\"SearchByFaxCode\">tìm kiếm theo số fax</Option>\r\n                                    <Option value=\"SearchByPresentor\">tìm kiếm theo người đại diện</Option>\r\n                                </Select>\r\n                                {this.state.SearchBy === \"SearchByPhone\" ?\r\n                                    <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByCompanyName\" ? <> <Input name=\"searchValue\" />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></> : null}\r\n                                {this.state.SearchBy === \"SearchByTaxCode\" ?\r\n                                    <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n                                {this.state.SearchBy === \"SearchByFaxCode\" ? <> <Input name=\"searchValue\" />\r\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></> : null}\r\n                                {this.state.SearchBy === \"SearchByPresentor\" ?\r\n                                    <> <Input name=\"searchValue\" />\r\n                                        <Button type=\"primary\" htmlType=\"submit\" shape=\"circle\" icon={<SearchOutlined />} /></>\r\n                                    : null}\r\n\r\n\r\n                            </Space>\r\n                        </Form>\r\n                    ]}\r\n                >\r\n\r\n\r\n\r\n                </PageHeader>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default CustomerSearch;","import 'antd/dist/antd.css';\r\nimport { Table, Space, Button, Tag } from 'antd';\r\nimport AddCustomer from './AddCustomer'\r\nimport ViewCustomer from './ViewCustomer'\r\nimport React from 'react';\r\nimport './Column.css'\r\nimport CustomerSearch from './CustomerSearch'\r\nimport { createCustomer, customerInformation } from '../actions/CustomerAction'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { UserAddOutlined, EditOutlined, DeleteOutlined, UserOutlined,EyeOutlined } from \"@ant-design/icons\"\r\nconst { Column } = Table;\r\n\r\n\r\nclass CustomerList extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      openCustomer: \"\",\r\n      customer:{},\r\n    };\r\n\r\n    this.OpenAddCustomer = this.OpenAddCustomer.bind(this);\r\n    \r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newCustomer.length === 0) {\r\n      const contract1 = {\r\n\r\n        name: 'John',\r\n        company: \"cty 369\",\r\n        address: '10 Downing Street',\r\n        taxCode: \"taxcode\",\r\n        faxCode: \"faxcode\",\r\n        phone: \"phone\",\r\n        email: \"email\",\r\n        status: \"deactive\",\r\n\r\n      }\r\n      const contract2 = {\r\n\r\n        name: 'Mike',\r\n        company: \"cty 370\",\r\n        address: '10 Downing Street',\r\n        taxCode: \"taxcode\",\r\n        faxCode: \"faxcode\",\r\n        phone: \"phone\",\r\n        email: \"email\",\r\n        status: \"active\",\r\n\r\n      }\r\n\r\n      this.props.onSubmit(contract1)\r\n      this.props.onSubmit(contract2)\r\n\r\n    }\r\n\r\n  }\r\n  OpenAddCustomer() {\r\n    this.setState({\r\n      openCustomer: \"openAddCustomer\",\r\n\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    if (this.state.openCustomer === \"openAddCustomer\") {\r\n      return (\r\n        <Router>\r\n          <Redirect push to={\"/capstone/addCustomer\"} />\r\n          <Route exact path=\"/capstone/addCustomer\" render={() => <AddCustomer />\r\n          } /></Router>\r\n\r\n      );\r\n    } else if (this.state.openCustomer === \"openViewCustomer\") {\r\n      return (<Router>\r\n        <Redirect push to={\"/capstone/updateCustomer/\"+this.state.customer.taxCode} />\r\n        <Route exact path=\"/capstone/updateCustomer/:id\" render={() => <AddCustomer customer={this.state.customer} />\r\n        } /></Router>);\r\n\r\n    }\r\n    else {\r\n      return (\r\n        <div style={{ height: \"100vh\" }}><Button type=\"primary\" onClick={this.OpenAddCustomer} icon={<UserAddOutlined />}>Tạo khách hàng mới</Button>\r\n          <CustomerSearch />\r\n          <Table dataSource={this.props.newCustomer}\r\n\r\n            rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n            <Column title=\"Tên doanh nghiệp\" dataIndex=\"company\" key=\"company\"\r\n              sorter={(a, b) => a.company.localeCompare(b.company)}\r\n              sortDirections={['descend', 'ascend']}\r\n              render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n\r\n            <Column title=\"Người đại diện\" dataIndex=\"name\" key=\"name\"\r\n              sorter={(a, b) => a.name.localeCompare(b.name)}\r\n              sortDirections={['descend', 'ascend']}\r\n              render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n            <Column title=\"Địa chỉ\" dataIndex=\"address\" key=\"address\"\r\n              sorter={(a, b) => a.address.localeCompare(b.address)}\r\n              sortDirections={['descend', 'ascend']}\r\n              render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n            <Column title=\"Mã số thuế\" dataIndex=\"taxCode\" key=\"taxCode\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"Số fax\" dataIndex=\"faxCode\" key=\"faxCode\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"Số điện thoại\" dataIndex=\"phone\" key=\"phone\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"email\" dataIndex=\"email\" key=\"email\" render={(text, record) => (\r\n\r\n              <a>{text}</a>\r\n\r\n            )} />\r\n\r\n            <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n              render={(text, record) => {\r\n                let color = 'pink'\r\n                if (text === 'deactive') {\r\n                  color = 'red'\r\n                } else if (text === 'active') {\r\n                  color = 'green'\r\n                } else if (text === 'pending') {\r\n                  color = 'blue'\r\n                } else if (text === 'waiting for customer') {\r\n                  color = 'pink'\r\n                } else if (text === 'rejected') {\r\n                  color = 'grey'\r\n                }\r\n                return (<Tag color={color} key={text}>\r\n                  {text.toUpperCase()}\r\n                </Tag>);\r\n              }}\r\n            />\r\n            <Column\r\n              title=\"Cập nhật thông tin\"\r\n              key=\"action\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                 <EyeOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={\r\n                                    () => this.setState({\r\n                                        customer: text,\r\n                                        openCustomer: \"openViewCustomer\",\r\n                                    })\r\n                                } />\r\n                </Space>\r\n              )}\r\n            />\r\n            <Column\r\n              title=\"Tác vụ\"\r\n              dataIndex=\"status\"\r\n              key=\"status\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                  {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                </Space>\r\n              )}\r\n            />\r\n\r\n          </Table></div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSubmit: (customer) => {\r\n      dispatch(createCustomer(customer))\r\n    }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n    newCustomer: state.myCustomerReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Select, DatePicker } from 'antd';\r\nimport { List, Avatar, Button, Skeleton, Checkbox } from 'antd';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Option } = Select;\r\nclass TemplateUpload extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            approvalBeforeSign: false,\r\n            approverList: [],\r\n\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.ChooseApproval = this.ChooseApproval.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        console.log(value)\r\n        if (value === \"yes\") {\r\n            this.setState({\r\n                approvalBeforeSign: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                approvalBeforeSign: false,\r\n            })\r\n        }\r\n\r\n    }\r\n    ChooseApproval(value) {\r\n\r\n\r\n        this.setState({\r\n            approverList: this.state.approverList.concat(value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{ height: \"100vh\" }}>\r\n\r\n                <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n                <link rel=\"shortcut icon\" href=\"http://localhost:3001/favicon.ico\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                <meta name=\"theme-color\" content=\"#000000\" />\r\n                <meta name=\"description\" content=\"Web site created using create-react-app\" />\r\n                <link rel=\"apple-touch-icon\" href=\"http://localhost:3001/logo192.png\" />\r\n                <title>PDF Signaturer</title>\r\n                <style\r\n                    data-styled\r\n                    data-styled-version=\"4.4.0\"\r\n                    dangerouslySetInnerHTML={{\r\n                        __html:\r\n                            \"\\n/* sc-component-id: sc-bdVaJa */\\n.ftKihC{padding-top:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;} .ftKihC canvas{border:3px solid #eee;border-radius:4px;background:white;width:100%;height:100%;padding:3px;} .ftKihC div{padding:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;} .ftKihC div button{background:#1a82cc;border:0;padding:15px;margin-left:10px;border-radius:4px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/* sc-component-id: sc-bwzfXH */\\n.bzSLKe{padding-top:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;} .bzSLKe iframe{border:3px solid #eee;border-radius:4px;background:white;width:100%;height:100%;min-height:500px;padding:3px;}\\n/* sc-component-id: sc-htpNat */\\n.hpgyVh[disabled]{cursor:not-allowed;opacity:0.6;}\\n/* sc-component-id: sc-bxivhb */\\n.cDZPnc{max-width:700px;background:#fff;border-radius:4px;box-shadow:0 0 20px rgba(0,0,0,0.1);padding:30px;margin:80px auto;} .cDZPnc h1{font-size:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;} .cDZPnc h1 svg{margin-right:10px;} .cDZPnc h1 input{-webkit-flex:1;-ms-flex:1;flex:1;border:3px solid #eee;margin-left:10%;padding:10px 15px;border-radius:4px;font-size:16px;}\\n/* sc-component-id: sc-global-3878584262 */\\n*{margin:0;padding:0;outline:0;box-sizing:border-box;} html,body,#root{min-height:100%;} body{background:#1A82CC;-webkit-font-smoothing:antialiased !important;} body,input,button{color:#222;font-size:14px;font-family:Arial,Helvetica,sans-serif;} button{cursor:pointer;}\"\r\n                    }}\r\n                />\r\n                <noscript>You need to enable JavaScript to run this app.</noscript>\r\n                <div id=\"\">\r\n                    <div className=\"sc-bxivhb cDZPnc\">\r\n                        <h1>\r\n                            <svg\r\n                                stroke=\"currentColor\"\r\n                                fill=\"currentColor\"\r\n                                strokeWidth={0}\r\n                                viewBox=\"0 0 576 512\"\r\n                                height=\"1em\"\r\n                                width=\"1em\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path d=\"M218.17 424.14c-2.95-5.92-8.09-6.52-10.17-6.52s-7.22.59-10.02 6.19l-7.67 15.34c-6.37 12.78-25.03 11.37-29.48-2.09L144 386.59l-10.61 31.88c-5.89 17.66-22.38 29.53-41 29.53H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h12.39c4.83 0 9.11-3.08 10.64-7.66l18.19-54.64c3.3-9.81 12.44-16.41 22.78-16.41s19.48 6.59 22.77 16.41l13.88 41.64c19.75-16.19 54.06-9.7 66 14.16 1.89 3.78 5.49 5.95 9.36 6.26v-82.12l128-127.09V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24v-40l-128-.11c-16.12-.31-30.58-9.28-37.83-23.75zM384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1zm-96 225.06V416h68.99l161.68-162.78-67.88-67.88L288 346.96zm280.54-179.63l-31.87-31.87c-9.94-9.94-26.07-9.94-36.01 0l-27.25 27.25 67.88 67.88 27.25-27.25c9.95-9.94 9.95-26.07 0-36.01z\" />\r\n                            </svg>\r\n            DOT template\r\n            <input type=\"file\" />\r\n                        </h1>\r\n                        <div className=\"sc-bwzfXH bzSLKe\">\r\n                            <iframe\r\n                                title=\"pdframe\"\r\n                                src=\"\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"sc-bdVaJa ftKihC\">\r\n\r\n                            <div>\r\n                                <Button type=\"primary\" >\r\n                                    Nộp\r\n                            </Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default TemplateUpload","import 'antd/dist/antd.css';\r\nimport { Table, Space, Button, Tag } from 'antd';\r\nimport TemplateUpload from './TemplateUpload';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport React from 'react';\r\nimport './Column.css'\r\nimport ContractTypeSearch from './ContractTypeSearch'\r\nimport { createContractType, contractTypeInformation } from '../actions/ContractType'\r\nimport { connect } from 'react-redux'\r\nimport { UploadOutlined, FileOutlined, DeleteOutlined, UserOutlined, FileWordOutlined } from \"@ant-design/icons\"\r\nconst { Column } = Table;\r\n\r\n\r\n\r\nclass ContractTable extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      showTemplateCreate: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n  handleChange() {\r\n    this.setState({\r\n      showTemplateCreate: true,\r\n    })\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newContractType.length === 0) {\r\n      const contract1 = {\r\n\r\n        contract_type: 'Hop dong lao dong',\r\n        creator: \"creator\",\r\n        createDate: \"date\",\r\n        fileName: 'template1.dot',\r\n        status: \"active\"\r\n\r\n      }\r\n      const contract2 = {\r\n\r\n        contract_type: 'Hop dong lao dong',\r\n        creator: \"creator\",\r\n        createDate: \"date\",\r\n        fileName: 'template1.dot',\r\n        status: \"deactive\"\r\n\r\n      }\r\n\r\n      this.props.onSubmit(contract1)\r\n      this.props.onSubmit(contract2)\r\n\r\n    }\r\n\r\n  }\r\n  render() {\r\n    if (this.state.showTemplateCreate) {\r\n      return (\r\n        <Router>\r\n        <Redirect push to={\"/capstone/uploadTemplate\" } />\r\n        <Route exact path=\"/capstone/uploadTemplate\" component={TemplateUpload} /></Router>\r\n       \r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ height: \"100vh\" }}><Button type=\"primary\" onClick={this.handleChange} icon={<UploadOutlined />}>Tải lên mẫu mới</Button>\r\n          <ContractTypeSearch />\r\n          <Table dataSource={this.props.newContractType}\r\n            rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}  >\r\n            <Column title=\"Loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\"\r\n              render={(text, record) => (\r\n\r\n                <a><FileOutlined />{text}</a>\r\n\r\n              )}\r\n            />\r\n\r\n            <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\"\r\n              render={(text, record) => (\r\n\r\n                <b><FileWordOutlined />{text}</b>\r\n\r\n              )}\r\n            />\r\n            <Column title=\"Người tạo\" dataIndex=\"creator\" key=\"creator\"\r\n              render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )}\r\n            />\r\n            <Column title=\"Ngày tạo\" dataIndex=\"createDate\" key=\"createDate\"\r\n              render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )}\r\n            />\r\n            <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n              render={(text, record) => {\r\n                let color = 'pink'\r\n                if (text === 'deactive') {\r\n                  color = 'red'\r\n                } else if (text === 'active') {\r\n                  color = 'green'\r\n                } else if (text === 'pending') {\r\n                  color = 'blue'\r\n                } else if (text === 'waiting for customer') {\r\n                  color = 'pink'\r\n                } else if (text === 'rejected') {\r\n                  color = 'grey'\r\n                }\r\n                return (<Tag color={color} key={text}>\r\n                  {text.toUpperCase()}\r\n                </Tag>);\r\n              }}\r\n            />\r\n\r\n            <Column\r\n              title=\"Chọn file khác\"\r\n              key=\"Update\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  <UploadOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.handleChange}>Chọn file khác</UploadOutlined>\r\n                </Space>\r\n              )}\r\n            />\r\n            <Column\r\n              title=\"Vô hiệu hóa\"\r\n              dataIndex=\"status\"\r\n              key=\"status\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                  {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table></div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSubmit: (contractType) => {\r\n      dispatch(createContractType(contractType))\r\n    }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n    newContractType: state.myContractTypeReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContractTable)","export const contractTypeInformation = () => {\r\n    return {\r\n      type: 'LIST_contractType',\r\n    }\r\n  }\r\n  export const createContractType = (contractType) => {\r\n    \r\n    return {\r\n      type: 'CREATE_contractType',\r\n      contractType\r\n    }\r\n  }\r\n  export const updateContractType = (contractType) => {\r\n    return {\r\n      type: 'UPDATE_contractType',\r\n      contractType\r\n    }\r\n  }\r\n  export const deactiveContractType = (contractTypeID) => {\r\n    return {\r\n      type: 'DEACTIVE_contractType',\r\n      contractTypeID\r\n    }\r\n  }","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { createEmployee, employeeInformation } from '../actions/EmployeeAction'\r\nimport { connect } from 'react-redux'\r\nimport { Space, Card, Button, Row, Col } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined, ReloadOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport \"./Column.css\"\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass UpdateProfile extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n        var i = 0;\r\n        function onChange(e) {\r\n            if (e.target == \"checked\") { i--; }\r\n            else { i++ }\r\n            console.log(`checked = ${e.target.checked}`);\r\n        }\r\n        function requirement() { if (i == 0) { } }\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <br />\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin cá nhân</h2>\r\n                <Space direction=\"horizontal\" align=\"start\"  >\r\n\r\n\r\n                    <Card style={{width:400, height:300}}>\r\n                        <Grid item xs={12}>\r\n\r\n                            <TextField\r\n                                id=\"name\"\r\n                                name=\"tên\"\r\n                                label=\"tên\"\r\n                                fullWidth\r\n                                autoComplete=\"shipping address-level2\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n\r\n                            <TextField\r\n                                id=\"username\"\r\n                                name=\"tên đăng nhập\"\r\n                                label=\"tên đăng nhập\"\r\n                                fullWidth\r\n                                autoComplete=\"shipping address-level2\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                required\r\n                                id=\"company\"\r\n                                name=\"doanh nghiệp\"\r\n                                label=\"doanh nghiệp\"\r\n                                fullWidth\r\n                                autoComplete=\"shipping postal-code\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                required\r\n                                id=\"role\"\r\n                                name=\"chức vụ\"\r\n                                label=\"chức vụ\"\r\n                                fullWidth\r\n                                autoComplete=\"shipping postal-code\"\r\n                            />\r\n                        </Grid>\r\n                    </Card>\r\n                    <Card style={{width:600, height:600}}>\r\n                        <Grid item xs={12}>\r\n\r\n                            <TextField\r\n                                id=\"password\"\r\n                                name=\"mật khẩu\"\r\n                                label=\"mật khẩu\"\r\n                                fullWidth\r\n                                autoComplete=\"shipping address-level2\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n\r\n                            <TextField\r\n                                id=\"email\"\r\n                                name=\"địa chỉ mail\"\r\n                                label=\"địa chỉ mail\"\r\n                                fullWidth\r\n                                autoComplete=\"shipping address-level2\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"address\"\r\n                                name=\"địa chỉ\"\r\n                                label=\"địa chỉ\"\r\n                                fullWidth\r\n                                autoComplete=\"shipping address-line2\"\r\n                            />\r\n                        </Grid>\r\n                        <Space size=\"large\">\r\n                            <Popup trigger={<Button type=\"primary\" >\r\n                                <CloudUploadOutlined />  Nộp\r\n                            </Button>} position=\"right center\">\r\n                                <div>The sytem admin will contact you within 3 days</div>\r\n                                <Button onClick={this.onFinish} type=\"primary\" >\r\n                                    Xác nhận\r\n                            </Button>\r\n                            </Popup>\r\n\r\n                            <Button type=\"primary\" style={{\r\n                                margin: '0 8px',\r\n                            }} htmlType=\"button\">\r\n                                <ReloadOutlined />   Reset\r\n                            </Button>\r\n                            <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                                Trở về\r\n              </Button>\r\n                        </Space>\r\n                    </Card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Space>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default UpdateProfile;","import { Menu, Layout } from 'antd';\r\nimport { PageHeader, Avatar, Dropdown, Space } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport { Badge } from 'antd';\r\nimport { UserOutlined, SettingOutlined, BellOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { connect } from 'react-redux'\r\nimport { logout, login } from '../actions/loginAction'\r\nimport LoginPage from './Login/LoginPage'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showComponent: \"\",\r\n            logoutAction:false\r\n        };\r\n\r\n        this.Logout = this.Logout.bind(this);\r\n    }\r\n    Logout ()  {\r\n        this.setState({\r\n            logoutAction : true\r\n        })\r\n        this.props.onSubmit()\r\n        \r\n    }\r\n    render() {\r\n       \r\n\r\n        var information = this.props.myLoginReducer.map((login, index) => {\r\n\r\n            const notifications = (\r\n                <Menu >\r\n\r\n                    <Menu.Item  key=\"2\" >\r\n                       \r\n                      Some notifications\r\n             \r\n                    </Menu.Item>\r\n                   \r\n    \r\n                </Menu >\r\n            );\r\n            const menu = (\r\n                <Menu >\r\n\r\n                    <Menu.Item onClick={this.Logout} key=\"2\" icon={ <LogoutOutlined style={{ color: '#08c' }} key=\"1\" type=\"primary\" />} > \r\n                       \r\n                        Đăng xuất\r\n             \r\n                    </Menu.Item>\r\n                   \r\n    \r\n                </Menu >\r\n            );\r\n        return (<div>\r\n            <PageHeader\r\n                className=\"site-page-header\"\r\n                ghost={false}\r\n                title={[\r\n                ]}\r\n                extra={[\r\n                    <Dropdown overlay={notifications} placement=\"bottomCenter\" trigger={['click']}>\r\n                    <Badge count={1}><BellOutlined style={{ fontSize: '30px', color: '#08c' }} /></Badge>\r\n                    </Dropdown>,\r\n                    ,\r\n                    <Dropdown.Button overlay={menu} placement=\"bottomCenter\" icon={<SettingOutlined/>}>\r\n                        {login.username}\r\n                    </Dropdown.Button>\r\n\r\n                    ,\r\n                ]}\r\n            >\r\n\r\n            </PageHeader>\r\n        </div>);\r\n    })\r\n    if(this.state.logoutAction){\r\n        \r\n    }else{\r\n        return(<div> { information }</div >);\r\n    }\r\n    \r\n    }\r\n}\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: () => {\r\n            dispatch(logout())\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n    return {\r\n        myLoginReducer: state.myLoginReducer\r\n    }\r\n}\r\nexport default (connect(mapStateToProps, mapDispatchToProps))(Header);\r\n","export const loginInformation = () => {\r\n    return {\r\n      type: 'LIST_login',\r\n    }\r\n  }\r\n  export const addLogin = (login) => {\r\n    return {\r\n      type: 'ADD_login',\r\n      login\r\n    }\r\n  }\r\n  export const logout = () => {\r\n    return {\r\n      type: 'LOGOUT',\r\n      \r\n    }\r\n  }","import 'antd/dist/antd.css';\r\nimport { Menu, Layout } from 'antd';\r\nimport { PageHeader, Avatar, Descriptions, Space, Tag, Affix, Button } from 'antd';\r\nimport React from 'react';\r\nimport { Badge } from 'antd';\r\nimport UpdateProfileCompany from './UpdateProfileCompany'\r\nimport EmployeeTable from './EmployeeTable'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect,useHistory } from 'react-router-dom'\r\nimport SignatureList from './SignatureList'\r\nimport { UserOutlined, ToolOutlined, NotificationOutlined, LogoutOutlined, MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport ContractTable from './ContractTable'\r\nimport CustomerTable from './CustomerTable'\r\nimport ContractTypeTable from './ContractTypeTable'\r\nimport UpdateProfile from './UpdateProfile'\r\nimport Header from './Header'\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport { connect } from 'react-redux'\r\nimport './Column.css'\r\nimport LoginPage from './Login/LoginPage'\r\nconst IconFont = createFromIconfontCN({\r\n  scriptUrl: [\r\n    '//at.alicdn.com/t/font_1788044_0dwu4guekcwr.js', // icon-javascript, icon-java, icon-shoppingcart (overrided)\r\n    '//at.alicdn.com/t/font_1788592_a5xf2bdic3u.js', // icon-shoppingcart, icon-python\r\n  ],\r\n});\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\nclass EmployeeSideMenu extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      showComponent: \"\",\r\n      collapsed: false,\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n  handleClick = e => {\r\n\r\n    this.setState({\r\n      showComponent: e.key\r\n    })\r\n\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.myLoginReducer)\r\n    if (this.props.myLoginReducer !== \"logout\") {\r\n      console.log(this.props.myLoginReducer)\r\n      var information = this.props.myLoginReducer.map((login, index) => {\r\n        return (\r\n\r\n          <Layout style={{ height: \"100vh\" }}>\r\n\r\n            <Layout style={{ height: \"100vh\" }}>\r\n\r\n              <Sider width={250} className=\"site-layout-background\">\r\n\r\n                <IconFont type=\"icon-javascript\" style={{ fontSize: '60px', color: '#08c', marginLeft: \"40%\" }} />\r\n                <Descriptions size=\"small\" column={2}   >\r\n\r\n                  <Descriptions.Item><Avatar size={70} icon={<UserOutlined />} /> </Descriptions.Item>\r\n\r\n\r\n\r\n                  <Descriptions.Item><br />\r\n                    <b style={{ color: ' white' }}>{login.username}</b><br />\r\n\r\n                    <b style={{ color: ' white' }}>Company ABC</b>\r\n                  </Descriptions.Item>\r\n\r\n                </Descriptions>\r\n                <Button type=\"primary\" onClick={this.toggleCollapsed} style={{ marginBottom: 16 }}>\r\n                  {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}\r\n                </Button>\r\n                <Menu\r\n                  onClick={this.handleClick}\r\n                  title={[]}\r\n                  mode=\"inline\"\r\n                  theme=\"dark\"\r\n                  defaultSelectedKeys={[\"1\"]}\r\n                  defaultOpenKeys={[\"sub1\"]}\r\n                  style={{ height: \"100%\", borderRight: 0 }}\r\n                  inlineCollapsed={this.state.collapsed}\r\n                >\r\n                  <SubMenu key=\"sub1\" icon={<ToolOutlined />} title=\"Quản lý\">\r\n                    {login.contractManagePermision === true ? <Menu.Item key=\"contract\">danh sách hợp đồng</Menu.Item> : null}\r\n                    {login.customerManagePermission === true ? <Menu.Item key=\"customerList\">danh sách khách hàng</Menu.Item> : null}\r\n                    {login.contractTypeManagePermission === true ? <Menu.Item key=\"contractType\">danh sách loại hợp đồng</Menu.Item> : null}\r\n                    {login.employeeManagePermission === true ? <Menu.Item key=\"employee\">Nhân viên</Menu.Item> : null}\r\n                    {login.signatureManagePermission === true ? <Menu.Item key=\"signatureList\">Danh sách chữ ký</Menu.Item> : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                  </SubMenu>\r\n                  <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Thông tin cá nhân\">\r\n\r\n\r\n                    <Menu.Item key=\"profile\">Thông tin cá nhân</Menu.Item>\r\n                    {login.editCompanyInformationPermission === true ? <Menu.Item key=\"companyProfile\">Thông tin công ty</Menu.Item> : null}\r\n                  </SubMenu>\r\n                </Menu>\r\n              </Sider>\r\n              <Layout style={{ padding: \"0 24px 24px\", height: \"100vh\" }}>\r\n                <Affix onChange={(affixed) => console.log(affixed)}>\r\n                  <Header></Header>\r\n                </Affix>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {this.state.showComponent === \"customerList\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/customerList\" component={CustomerTable} />\r\n                  </Router>\r\n                  : null}\r\n                {this.state.showComponent === \"contract\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/contract\" render={() => <ContractTable role={login.signPermission} />\r\n                    } /></Router> : null}\r\n                {this.state.showComponent === \"contractType\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/contractType\" component={ContractTypeTable} /></Router> : null}\r\n                {this.state.showComponent === \"profile\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/profile\" component={UpdateProfile} /></Router> : null}\r\n                {this.state.showComponent === \"employee\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/employee\" component={EmployeeTable} /></Router> : null}\r\n                {this.state.showComponent === \"signatureList\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/signatureList\" component={SignatureList} /></Router> : null}\r\n\r\n                {this.state.showComponent === \"companyProfile\" ?\r\n                  <Router>\r\n                    <Redirect push to={\"/capstone/\" + this.state.showComponent} />\r\n                    <Route exact path=\"/capstone/companyProfile\" component={UpdateProfileCompany} /></Router> : null}\r\n\r\n\r\n\r\n              </Layout>\r\n            </Layout>\r\n          </Layout>\r\n        );\r\n      })\r\n\r\n      if (this.props.myLoginReducer === \"Logout\") {\r\n\r\n       \r\n      } else {\r\n        return (<div style={{ height: \"100vh\" }}> {information}</div >);\r\n      }\r\n    } else {\r\n      \r\n    }\r\n\r\n\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n  console.log(state.myLoginReducer)\r\n  return {\r\n    myLoginReducer: state.myLoginReducer\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(EmployeeSideMenu);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ViewUser extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin tài khoản</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ViewUser;","import 'antd/dist/antd.css';\r\nimport { Table, Space, Tag } from 'antd';\r\nimport ViewUser from './ViewUser'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from './Header'\r\nimport { createUser, userInformation } from '../actions/UserAction'\r\nimport { connect } from 'react-redux'\r\nimport { UploadOutlined, FileOutlined, DeleteOutlined, UserOutlined, EditOutlined } from \"@ant-design/icons\"\r\nimport LoginPage from './Login/LoginPage'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\nclass UserList extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      openViewUser: false,\r\n\r\n    };\r\n\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newUser.length === 0) {\r\n      const contract1 = {\r\n\r\n        name: 'John',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"deactive\",\r\n        company: \"Some Company\",\r\n        role: \"Some role\",\r\n\r\n      }\r\n      const contract2 = {\r\n\r\n        name: 'Mike',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"active\",\r\n        company: \"Some Company\",\r\n        role: \"Some role\",\r\n\r\n      }\r\n\r\n      this.props.onSubmit(contract1)\r\n      this.props.onSubmit(contract2)\r\n\r\n    }\r\n\r\n  }\r\n  OpenViewUser() {\r\n    this.setState({\r\n      openViewUser: true,\r\n    })\r\n  }\r\n  render() {\r\n    if (this.state.openViewUser) {\r\n      return (<ViewUser />);\r\n    } else {\r\n      var information = this.props.myLoginReducer.map((login, index) => {\r\n        return (\r\n          <div style={{height: \"100vh\"}}>\r\n            <Header></Header>\r\n            <Table dataSource={this.props.newUser}\r\n              rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n\r\n              <Column title=\"Tên\" dataIndex=\"name\" key=\"name\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n              <Column title=\"email\" dataIndex=\"email\" key=\"email\" render={(text, record) => (\r\n\r\n                <a>{text}</a>\r\n\r\n              )} />\r\n              <Column title=\"địa chỉ\" dataIndex=\"address\" key=\"address\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n\r\n              <Column title=\"doanh nghiệp\" dataIndex=\"company\" key=\"company\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n              <Column title=\"chức vụ\" dataIndex=\"role\" key=\"role\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n              <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                render={(text, record) => {\r\n                  let color = 'pink'\r\n                  if (text === 'deactive') {\r\n                    color = 'red'\r\n                  } else if (text === 'active') {\r\n                    color = 'green'\r\n                  } else if (text === 'pending') {\r\n                    color = 'blue'\r\n                  } else if (text === 'waiting for customer') {\r\n                    color = 'pink'\r\n                  } else if (text === 'rejected') {\r\n                    color = 'grey'\r\n                  }\r\n                  return (<Tag color={color} key={text}>\r\n                    {text.toUpperCase()}\r\n                  </Tag>);\r\n                }}\r\n              />\r\n\r\n              <Column\r\n                title=\"Xem chi tiết\"\r\n                key=\"action\"\r\n                render={(text, record) => (\r\n                  <Space size=\"middle\">\r\n                    <EditOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Sửa</EditOutlined>\r\n                  </Space>\r\n                )}\r\n              />\r\n              <Column\r\n                title=\"Chức năng\"\r\n                dataIndex=\"status\"\r\n                key=\"status\"\r\n                render={(text, record) => (\r\n                  <Space size=\"middle\">\r\n                    {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                    {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                  </Space>\r\n                )}\r\n              />\r\n            </Table></div>\r\n        );\r\n      })\r\n      if (information.length === 0) {\r\n        return (<LoginPage />);\r\n      } else {\r\n        return (<div> {information}</div >);\r\n      }\r\n    }\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSubmit: (user) => {\r\n      dispatch(createUser(user))\r\n    }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n    newUser: state.myUserReducer,\r\n    myLoginReducer: state.myLoginReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport LoginPage from './Login/LoginPage'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 14,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass SendJoinRequest extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            finish: false,\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        this.setState({\r\n            finish: true,\r\n        })\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n        if (this.state.finish) {\r\n            return (<LoginPage />);\r\n        } else {\r\n\r\n\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <h2 style={{ textAlign: 'center' }}>Thông tin đăng ký</h2>\r\n                    <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                        <Col span={10} >\r\n                            <Grid container spacing={3}>\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"company\"\r\n                                        name=\"Tên doanh nghiệp\"\r\n                                        label=\"Tên doanh nghiệp\"\r\n                                        fullWidth\r\n                                        autoComplete=\"Tên doanh nghiệp\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"taxCode\"\r\n                                        name=\"Mã số thuế\"\r\n                                        label=\"Mã số thuế\"\r\n                                        fullWidth\r\n                                        autoComplete=\"family-name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"faxCode\"\r\n                                        name=\"số fax\"\r\n                                        label=\"số fax\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-line1\"\r\n                                    />\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"email\"\r\n                                        name=\"địa chỉ mail\"\r\n                                        label=\"địa chỉ mail\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-level2\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"address\"\r\n                                        name=\"địa chỉ\"\r\n                                        label=\"địa chỉ\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-line2\"\r\n                                    />\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"presentor\"\r\n                                        name=\"Người đại diện\"\r\n                                        label=\"Người đại diện\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping postal-code\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"role\"\r\n                                        name=\"chức vụ\"\r\n                                        label=\"chức vụ\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping country\"\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <div></div><br />\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Popup trigger={<Button type=\"primary\" >\r\n                                    Nộp\r\n                            </Button>} position=\"right center\">\r\n                                    <div>The sytem admin will contact you within 3 days</div>\r\n                                    <Button onClick={this.onFinish} type=\"primary\" >\r\n                                        Xác nhận\r\n                            </Button>\r\n                                </Popup>\r\n\r\n                                <Button type=\"primary\" style={{\r\n                                    margin: '0 8px',\r\n                                }} htmlType=\"button\">\r\n                                    Reset\r\n                            </Button>\r\n                            </Grid>\r\n                        </Col>\r\n                    </Row>\r\n                </React.Fragment>\r\n                // <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                //     <Col span={10} >\r\n                // <Form\r\n                //     {...layout}\r\n                //     name=\"basic\"\r\n                //     initialValues={{\r\n                //         remember: true,\r\n                //     }}\r\n                //     onFinish={this.onFinish}\r\n                //     onFinishFailed={this.onFinishFailed}\r\n                // >\r\n                //             <Form.Item\r\n                //                 label=\"Tên doanh nghiệp\"\r\n                //                 name=\"company\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n                //             <Form.Item\r\n                //                 label=\"Nguời đại diện\"\r\n                //                 name=\"presentor\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>   \r\n\r\n                //             <Form.Item\r\n                //                 label=\"Địa chỉ Email\"\r\n                //                 name=\"email\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n                //             <Form.Item\r\n                //                 label=\"Mã số thuế\"\r\n                //                 name=\"mst\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n                //             <Form.Item\r\n                //                 label=\"Địa chỉ\"\r\n                //                 name=\"address\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n\r\n\r\n                //             <Form.Item {...tailLayout}>\r\n                //                 <Button type=\"primary\" htmlType=\"submit\">\r\n                //                     Nộp\r\n                //                 </Button>\r\n                //                 <Button type=\"primary\" style={{\r\n                //                     margin: '0 8px',\r\n                //                 }} htmlType=\"button\">\r\n                //                     Reset\r\n                //                 </Button>\r\n\r\n                //             </Form.Item>\r\n\r\n                //         </Form>\r\n                //     </Col>\r\n                // </Row>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default SendJoinRequest;","export const userInformation = () => {\r\n  return {\r\n    type: 'LIST_user',\r\n  }\r\n}\r\nexport const createUser = (user) => {\r\n  \r\n  return {\r\n    type: 'CREATE_user',\r\n    user\r\n  }\r\n}\r\nexport const updateUser = (user) => {\r\n  return {\r\n    type: 'UPDATE_user',\r\n    user\r\n  }\r\n}\r\nexport const deactiveUser = (userID) => {\r\n  return {\r\n    type: 'DEACTIVE_user',\r\n    userID\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox,Col,Row } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ForgetPassword extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                <Col span={10} >\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={this.onFinishFailed}\r\n                \r\n            >\r\n                <Form.Item\r\n                    label=\"Địa chỉ Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Vui lòng nhập email',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n               \r\n\r\n\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Nộp\r\n                            </Button>\r\n                    \r\n                </Form.Item>\r\n\r\n            </Form></Col></Row>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ForgetPassword;","import React, { Component, useCallback } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom'\r\nimport { PageHeader, Space, Row, Col } from 'antd';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport EmployeeSideMenu from '../EmployeeSideMenu';\r\n\r\nimport UserTable from '../UserTable';\r\nimport SendJoinRequest from '../SendJoinRequest'\r\nimport ForgetPassword from '../ForgetPassword'\r\nimport { GoogleOutlined } from \"@ant-design/icons\"\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport { connect } from 'react-redux'\r\nimport { addLogin, login } from '../../actions/loginAction'\r\n\r\nconst IconFont = createFromIconfontCN({\r\n    scriptUrl: [\r\n        '//at.alicdn.com/t/font_1788044_0dwu4guekcwr.js', // icon-javascript, icon-java, icon-shoppingcart (overrided)\r\n        '//at.alicdn.com/t/font_1788592_a5xf2bdic3u.js', // icon-shoppingcart, icon-python\r\n    ],\r\n});\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n\r\n    },\r\n    wrapperCol: {\r\n        span: 14,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\nconst middleLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nconst userList = [\r\n    {\r\n        username: \"phu111\",\r\n        password: \"123\",\r\n\r\n    },\r\n    {\r\n        username: \"phu222\",\r\n        password: \"123\",\r\n\r\n    },\r\n    {\r\n        username: \"phu333\",\r\n        password: \"123\",\r\n\r\n    },\r\n    {\r\n        username: \"phu444\",\r\n        password: \"123\",\r\n\r\n    },\r\n\r\n]\r\nconst initialState = {\r\n    role: \"\",\r\n    othersPage: \"\",\r\n    user: \"\"\r\n}\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = { ...initialState }\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log(this.state.role)\r\n\r\n        for (var i = 0; i < userList.length; i++) {\r\n\r\n            if (values.username === userList[i].username) {\r\n                if (values.password === userList[i].password) {\r\n                    this.setState({\r\n\r\n                        user: values.username,\r\n                    })\r\n                    break;\r\n                } else {\r\n\r\n                }\r\n            } else {\r\n\r\n            }\r\n        }\r\n        console.log(this.state.role)\r\n        let loginInformation = {\r\n            username: this.state.user,\r\n            signPermission: true,\r\n            contractManagePermision: true,\r\n            customerManagePermission: true,\r\n            contractTypeManagePermission: true,\r\n            employeeManagePermission: true,\r\n            signatureManagePermission: true,\r\n            editCompanyInformationPermission: true,\r\n        }\r\n\r\n        this.props.onSubmit(loginInformation)\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n\r\n    };\r\n    ForgetPassword = () => {\r\n        this.setState({\r\n            othersPage: \"ForgetPassword\"\r\n        })\r\n    };\r\n    SendJoinRequest = () => {\r\n        this.setState({\r\n            othersPage: \"SendJoinRequest\"\r\n        })\r\n    };\r\n\r\n    responseGoogle = (response) => {\r\n\r\n    }\r\n    render() {\r\n\r\n        var information = this.props.myLoginReducer.map((login, index) => {\r\n\r\n            return (\r\n                <Router>\r\n                    <Redirect push to=\"/capstone/SideMenu\" />\r\n\r\n                    <Route exact path=\"/capstone/SideMenu\" component={EmployeeSideMenu} />\r\n                </Router>\r\n            );\r\n\r\n        })\r\n\r\n        if (information.length > 0) {\r\n            return (<div> { information}</div >);\r\n        } else {\r\n            if (this.state.othersPage === \"ForgetPassword\") {\r\n                return (\r\n                    <ForgetPassword />);\r\n\r\n            } else if (this.state.othersPage === \"SendJoinRequest\") {\r\n                return (\r\n                    <SendJoinRequest />);\r\n            } else {\r\n                return (\r\n                    <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                        \r\n                            <Redirect push to=\"/capstone/Login\" />\r\n\r\n                           \r\n                        \r\n                        <Col span={10} >\r\n                            <Form\r\n                                {...layout}\r\n                                name=\"basic\"\r\n                                className=\"login-form\"\r\n                                initialValues={{\r\n                                    remember: true,\r\n                                }}\r\n                                onFinish={this.onFinish}\r\n                                onFinishFailed={this.onFinishFailed}\r\n\r\n                            >\r\n                                <IconFont type=\"icon-javascript\" style={{ fontSize: '60px', color: '#08c', marginLeft: \"40%\" }} />\r\n                                <Form.Item\r\n                                    label=\"Tên người dùng\"\r\n                                    name=\"username\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Vui lòng nhập tên người dùng',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    label=\"Mật khẩu\"\r\n                                    name=\"password\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Vui lòng nhập Mật khẩu',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password />\r\n                                </Form.Item>\r\n                                <Form.Item {...middleLayout} name=\"remember\" valuePropName=\"checked\" >\r\n                                    <Checkbox>Ghi nhớ</Checkbox>\r\n                                    <Button type=\"link\" htmlType=\"button\"\r\n                                        onClick={this.ForgetPassword}\r\n                                    >\r\n                                        Quên mật khẩu\r\n                                </Button>\r\n                                </Form.Item>\r\n\r\n\r\n\r\n\r\n                                <Form.Item {...tailLayout}>\r\n                                    <Space size=\"large\">\r\n                                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                            Đăng nhập\r\n                                </Button>\r\n                                        <GoogleLogin\r\n                                            clientId=\"390380026430-evq67duag44ce10ro7o7vp3adal9q7bc.apps.googleusercontent.com\"\r\n                                            buttonText=\"Login\"\r\n                                            render={renderProps => (\r\n\r\n\r\n                                                <GoogleOutlined style={{ fontSize: '30px', color: '#08c' }} >\r\n                                                    Đăng nhập với google\r\n                                                </GoogleOutlined>\r\n                                            )}\r\n                                            onSuccess={this.responseGoogle}\r\n                                            onFailure={this.responseGoogle}\r\n                                            cookiePolicy={'single_host_origin'}\r\n                                        />\r\n\r\n                                        <Button type=\"link\" htmlType=\"button\"\r\n                                            onClick={this.SendJoinRequest}>\r\n                                            Gửi yêu cầu đăng ký\r\n                                </Button>\r\n                                    </Space>\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n\r\n                                </Form.Item>\r\n\r\n\r\n\r\n\r\n                            </Form>\r\n\r\n                        </Col></Row>\r\n\r\n                );\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (login) => {\r\n            dispatch(addLogin(login))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n    return {\r\n        myLoginReducer: state.myLoginReducer,\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","import React from 'react';\n\nimport './App.css';\nimport LoginPage from './JsPage/Login/LoginPage'\nimport Particles from 'react-particles-js';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nfunction App() {\n\n  return (\n    <div >\n      <Particles\n        style={{ position: \"absolute\" }}\n        height=\"95%\"\n        width=\"95%\"\n        params={{\n          particles: {\n            color: {\n              value: \"#000000\"\n            },\n            line_linked: {\n              color: {\n                value: \"#000000\"\n              }\n            },\n            number: {\n              value: 50\n            },\n            size: {\n              value: 3\n            }\n          }\n        }}\n      />\n      <Router>\n\n\n        <Route exact path=\"/capstone\" component={LoginPage} />\n        <Route exact path=\"/capstone/\" component={LoginPage} />\n        <Route exact path=\"/capstone/Login\" component={LoginPage} />\n\n\n      </Router>\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var initialState = [];\r\nconst myLoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LIST_login':\r\n      return state;\r\n    case 'ADD_login':\r\n      state.pop()\r\n      state.push(action.login)\r\n      return [...state];\r\n    case 'LOGOUT':\r\n      \r\n      state.pop()\r\n      \r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default myLoginReducer;","var initialState = [];\r\nconst myContractReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_contract':\r\n            return state;\r\n        case 'CREATE_contract':\r\n            state.push(action.contract)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_contract':\r\n            state.push(action.contract)\r\n            return [...state];\r\n        case 'DEACTIVE_contract':\r\n            state.push(action.contractID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myContractReducer;","var initialState = [];\r\nconst myContractExtensionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_contractExtension':\r\n            return state;\r\n        case 'CREATE_contractExtension':\r\n            state.push(action.contractExtension)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_contractExtension':\r\n            state.push(action.contractExtension)\r\n            return [...state];\r\n        case 'DEACTIVE_contractExtension':\r\n            state.push(action.contractExtensionID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myContractExtensionReducer;","var initialState = [];\r\nconst myCustomerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_customer':\r\n            return state;\r\n        case 'CREATE_customer':\r\n            state.push(action.customer)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_customer':\r\n            state.push(action.customer)\r\n            return [...state];\r\n        case 'DEACTIVE_customer':\r\n            state.push(action.customerID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myCustomerReducer;","var initialState = [];\r\nconst myContractTypeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_contractType':\r\n            return state;\r\n        case 'CREATE_contractType':\r\n            state.push(action.contractType)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_contractType':\r\n            state.push(action.contractType)\r\n            return [...state];\r\n        case 'DEACTIVE_contractType':\r\n            state.push(action.contractTypeID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myContractTypeReducer;","var initialState = [];\r\nconst myUserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_user':\r\n            return state;\r\n        case 'CREATE_user':\r\n            state.push(action.user)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_user':\r\n            state.push(action.user)\r\n            return [...state];\r\n        case 'DEACTIVE_user':\r\n            state.push(action.userID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myUserReducer;","var initialState = [];\r\nconst mySignatureReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_signature':\r\n            return state;\r\n        case 'CREATE_signature':\r\n            state.push(action.signature)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_signature':\r\n            state.push(action.signature)\r\n            return [...state];\r\n        case 'DEACTIVE_signature':\r\n            state.push(action.signatureID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default mySignatureReducer;","var initialState = [];\r\nconst myEmployeeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_employee':\r\n            return state;\r\n        case 'CREATE_employee':\r\n            state.push(action.employee)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_employee':\r\n            state.push(action.employee)\r\n            return [...state];\r\n        case 'DEACTIVE_employee':\r\n            state.push(action.employeeID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myEmployeeReducer;","import { combineReducers } from 'redux'\r\nimport myLoginReducer from './logins'\r\nimport myContractReducer from'./contracts'\r\nimport myContractExtensionReducer from './contractExtensions'\r\nimport myCustomerReducer from'./customers'\r\nimport myContractTypeReducer from './contractTypes'\r\nimport myUserReducer from './users'\r\nimport mySignatureReducer from'./signatures'\r\nimport myEmployeeReducer from './employees'\r\nconst myReducers  = combineReducers({\r\n    myLoginReducer,\r\n    myContractReducer,\r\n    myContractExtensionReducer,\r\n    myCustomerReducer,\r\n    myContractTypeReducer,\r\n    myUserReducer,\r\n    mySignatureReducer,\r\n    myEmployeeReducer,\r\n});\r\nexport default myReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore } from \"redux\"\nimport allReducers from \"./reducers/myReducers\"\nimport { BrowserRouter } from 'react-router-dom'\nconst store = createStore(allReducers)\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}